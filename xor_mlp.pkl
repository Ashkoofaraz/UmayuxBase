ccopy_reg
_reconstructor
p1
(c__main__
MLP
p2
c__builtin__
object
p3
NtRp4
(dp5
S'n_input'
p6
I2
sS'learning_rate'
p7
F0.25
sS'predict'
p8
ctheano.compile.function_module
_constructor_Function
p9
(ctheano.compile.function_module
_constructor_FunctionMaker
p10
((dp11
S'profile'
p12
NsS'function_builder'
p13
ctheano.compile.function_module
Function
p14
sS'inputs'
p15
(lp16
g1
(ctheano.compile.io
In
p17
g3
NtRp18
(dp19
S'name'
p20
S'l0'
p21
sS'update'
p22
NsS'value'
p23
NsS'borrow'
p24
NsS'strict'
p25
I00
sS'implicit'
p26
I00
sS'mutable'
p27
I00
sS'variable'
p28
g1
(ctheano.tensor.var
TensorVariable
p29
g3
NtRp30
(dp31
S'auto_name'
p32
S'auto_798'
p33
sS'index'
p34
NsS'tag'
p35
(itheano.gof.utils
scratchpad
p36
(dp37
S'trace'
p38
(lp39
(lp40
(S'mlp.py'
p41
I86
S'<module>'
p42
S'mlp = MLP(2, 4, 2)'
tp43
a(S'mlp.py'
p44
I33
S'__init__'
p45
S'l0 = T.dmatrix("l0")'
tp46
aasbsg20
g21
sS'owner'
p47
NsS'type'
p48
g1
(ctheano.tensor.type
TensorType
p49
g3
NtRp50
(dp51
S'broadcastable'
p52
(I00
I00
tp53
sS'dtype'
p54
S'float64'
p55
sS'numpy_dtype'
p56
cnumpy
dtype
p57
(S'f8'
I0
I1
tRp58
(I3
S'<'
NNNI-1
I-1
I0
tbsS'sparse_grad'
p59
I00
sg20
NsbsbsS'shared'
p60
I00
sS'allow_downcast'
p61
Nsbag1
(g17
g3
NtRp62
(dp63
g20
S'self.W0'
p64
sg22
Nsg23
g1
(ctheano.gof.link
Container
p65
g3
NtRp66
(dp67
g20
g64
sS'storage'
p68
(lp69
ctheano.sandbox.cuda.type
CudaNdarray_unpickler
p70
(cnumpy.core.multiarray
_reconstruct
p71
(cnumpy
ndarray
p72
(I0
tS'b'
tRp73
(I1
(I2
I4
tg57
(S'f4'
I0
I1
tRp74
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00! \xba\x9d<&@\xd3\xac\x01;G\xdf\xbc?\x86\xa7\xb8\xba\x9b<&@\xd8\x96\x9f\xb9>\xdf\xbc?'
tbtRp75
asg25
I00
sS'readonly'
p76
I00
sg48
g1
(ctheano.sandbox.cuda.type
CudaNdarrayType
p77
g3
NtRp78
(dp79
g52
(I00
I00
tp80
sg20
Nsbsg61
Nsbsg24
I01
sg25
I00
sg26
I01
sg27
I00
sg28
g1
(ctheano.sandbox.cuda.var
CudaNdarraySharedVariable
p81
g3
NtRp82
(dp83
g34
NsS'container'
p84
g66
sg20
g64
sg32
S'auto_794'
p85
sg35
(itheano.gof.utils
scratchpad
p86
(dp87
g38
(lp88
(lp89
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp90
a(g44
I22
g45
S'name="self.W0")'
tp91
aasbsS'get_value_return_ndarray'
p92
I01
sg47
Nsg48
g78
sbsg60
I01
sg61
Nsbag1
(g17
g3
NtRp93
(dp94
g20
S'self.b0'
p95
sg22
Nsg23
g1
(g65
g3
NtRp96
(dp97
g20
g95
sg68
(lp98
g70
(g71
(g72
(I0
tS'b'
tRp99
(I1
(I4
tg74
I00
S'`\xe3\xcc\xb9\xc6\xc9c\xc0\x82I\xdb\xbat\x81m\xbf'
tbtRp100
asg25
I00
sg76
I00
sg48
g1
(g77
g3
NtRp101
(dp102
g52
(I00
tp103
sg20
Nsbsg61
Nsbsg24
I01
sg25
I00
sg26
I01
sg27
I00
sg28
g1
(g81
g3
NtRp104
(dp105
g34
Nsg84
g96
sg20
g95
sg32
S'auto_796'
p106
sg35
(itheano.gof.utils
scratchpad
p107
(dp108
g38
(lp109
(lp110
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp111
a(g44
I28
g45
S'name="self.b0")'
tp112
aasbsg92
I01
sg47
Nsg48
g101
sbsg60
I01
sg61
Nsbag1
(g17
g3
NtRp113
(dp114
g20
S'self.W1'
p115
sg22
Nsg23
g1
(g65
g3
NtRp116
(dp117
g20
g115
sg68
(lp118
g70
(g71
(g72
(I0
tS'b'
tRp119
(I1
(I4
I2
tg74
I00
S'\xc2H\x93:\xfcN\xa1:\x02\xba\xd3\xbf\xdd\x8ay?$\x94\xb7:\x80\x15\xa58sY\xf9?l\xed\xaa\xbd'
tbtRp120
asg25
I00
sg76
I00
sg48
g1
(g77
g3
NtRp121
(dp122
g52
(I00
I00
tp123
sg20
Nsbsg61
Nsbsg24
I01
sg25
I00
sg26
I01
sg27
I00
sg28
g1
(g81
g3
NtRp124
(dp125
g34
Nsg84
g116
sg20
g115
sg32
S'auto_795'
p126
sg35
(itheano.gof.utils
scratchpad
p127
(dp128
g38
(lp129
(lp130
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp131
a(g44
I25
g45
S'name="self.W1")'
tp132
aasbsg92
I01
sg47
Nsg48
g121
sbsg60
I01
sg61
Nsbag1
(g17
g3
NtRp133
(dp134
g20
S'self.b1'
p135
sg22
Nsg23
g1
(g65
g3
NtRp136
(dp137
g20
g135
sg68
(lp138
g70
(g71
(g72
(I0
tS'b'
tRp139
(I1
(I2
tg74
I00
S'\xcbxj\xbe^u\xcd>'
tbtRp140
asg25
I00
sg76
I00
sg48
g1
(g77
g3
NtRp141
(dp142
g52
(I00
tp143
sg20
Nsbsg61
Nsbsg24
I01
sg25
I00
sg26
I01
sg27
I00
sg28
g1
(g81
g3
NtRp144
(dp145
g34
Nsg84
g136
sg20
g135
sg32
S'auto_797'
p146
sg35
(itheano.gof.utils
scratchpad
p147
(dp148
g38
(lp149
(lp150
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp151
a(g44
I31
g45
S'name="self.b1")'
tp152
aasbsg92
I01
sg47
Nsg48
g141
sbsg60
I01
sg61
NsbasS'fgraph'
p153
g1
(ctheano.gof.fg
FunctionGraph
p154
g3
NtRp155
(dp156
g12
Nsg15
(lp157
g1
(g29
g3
NtRp158
(dp159
g34
Nsg20
g21
sg153
g155
sS'clients'
p160
(lp161
(g1
(ctheano.gof.graph
Apply
p162
g3
NtRp163
(dp164
g15
(lp165
g158
ag1
(g29
g3
NtRp166
(dp167
g34
I0
sg20
Nsg153
g155
sg160
(lp168
(g163
I1
tp169
asg32
S'auto_3607'
p170
sg35
(itheano.gof.utils
scratchpad
p171
(dp172
g38
(lp173
(lp174
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp175
a(g44
I34
g45
S'l1 = T.tanh(T.dot(l0,self.W0) + self.b0)'
tp176
aasbsg47
g1
(g162
g3
NtRp177
(dp178
g15
(lp179
g1
(g81
g3
NtRp180
(dp181
g34
Nsg84
g66
sg20
g64
sg153
g155
sg160
(lp182
(g177
I0
tp183
asg32
S'auto_3600'
p184
sg35
(itheano.gof.utils
scratchpad
p185
(dp186
g38
g88
sbsg47
Nsg48
g78
sbasg153
g155
sS'outputs'
p187
(lp188
g166
asg35
(itheano.gof.utils
scratchpad
p189
(dp190
bsS'deps'
p191
(dp192
sS'op'
p193
g1
(ctheano.sandbox.cuda.basic_ops
HostFromGpu
p194
g3
NtRp195
(dp196
S'_op_use_c_code'
p197
S'/usr/bin/g++'
p198
sbsbsg48
g1
(g49
g3
NtRp199
(dp200
g52
(I00
I00
tp201
sg54
S'float32'
p202
sg56
g74
sg59
I00
sg20
Nsbsbasg153
g155
sg187
(lp203
g1
(g29
g3
NtRp204
(dp205
g34
I0
sg20
Nsg153
g155
sg160
(lp206
(g1
(g162
g3
NtRp207
(dp208
g15
(lp209
g204
ag1
(g29
g3
NtRp210
(dp211
g34
I0
sg20
Nsg153
g155
sg160
(lp212
(g207
I1
tp213
asg32
S'auto_3636'
p214
sg35
(itheano.gof.utils
scratchpad
p215
(dp216
g38
(lp217
sbsg47
g1
(g162
g3
NtRp218
(dp219
g15
(lp220
g1
(ctheano.sandbox.cuda.var
CudaNdarrayVariable
p221
g3
NtRp222
(dp223
g34
I0
sg20
Nsg153
g155
sg160
(lp224
(g218
I0
tp225
asg32
S'auto_3635'
p226
sg35
(itheano.gof.utils
scratchpad
p227
(dp228
g38
(lp229
sbsg47
g1
(g162
g3
NtRp230
(dp231
g15
(lp232
g1
(g81
g3
NtRp233
(dp234
g34
Nsg84
g96
sg20
g95
sg153
g155
sg160
(lp235
(g230
I0
tp236
asg32
S'auto_3601'
p237
sg35
(itheano.gof.utils
scratchpad
p238
(dp239
g38
g109
sbsg47
Nsg48
g101
sbasg153
g155
sg187
(lp240
g222
asg35
(itheano.gof.utils
scratchpad
p241
(dp242
bsg191
(dp243
sg193
g1
(ctheano.sandbox.cuda.basic_ops
GpuDimShuffle
p244
g3
NtRp245
(dp246
S'view_map'
p247
(dp248
I0
(lp249
I0
assS'augment'
p250
(lp251
I0
asS'shuffle'
p252
(lp253
I0
asg197
g198
sS'input_broadcastable'
p254
(I00
tp255
sS'new_order'
p256
(S'x'
I0
tp257
sbsbsg48
g1
(g77
g3
NtRp258
(dp259
g52
(I01
I00
tp260
sg20
Nsbsbasg153
g155
sg187
(lp261
g210
asg35
(itheano.gof.utils
scratchpad
p262
(dp263
bsg191
(dp264
sg193
g1
(g194
g3
NtRp265
(dp266
g197
g198
sbsbsg48
g1
(g49
g3
NtRp267
(dp268
g52
(I01
I00
tp269
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg153
g155
sg187
(lp270
g1
(g29
g3
NtRp271
(dp272
g34
I0
sg20
Nsg153
g155
sg160
(lp273
(g1
(g162
g3
NtRp274
(dp275
g15
(lp276
g271
ag1
(g29
g3
NtRp277
(dp278
g34
I0
sg20
Nsg153
g155
sg160
(lp279
(g274
I1
tp280
asg32
S'auto_3605'
p281
sg35
(itheano.gof.utils
scratchpad
p282
(dp283
g38
(lp284
(lp285
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp286
a(g44
I35
g45
S'l2 = T.tanh(T.dot(l1,self.W1) + self.b1)'
tp287
aasbsg47
g1
(g162
g3
NtRp288
(dp289
g15
(lp290
g1
(g81
g3
NtRp291
(dp292
g34
Nsg84
g116
sg20
g115
sg153
g155
sg160
(lp293
(g288
I0
tp294
asg32
S'auto_3602'
p295
sg35
(itheano.gof.utils
scratchpad
p296
(dp297
g38
g129
sbsg47
Nsg48
g121
sbasg153
g155
sg187
(lp298
g277
asg35
(itheano.gof.utils
scratchpad
p299
(dp300
bsg191
(dp301
sg193
g1
(g194
g3
NtRp302
(dp303
g197
g198
sbsbsg48
g1
(g49
g3
NtRp304
(dp305
g52
(I00
I00
tp306
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg153
g155
sg187
(lp307
g1
(g29
g3
NtRp308
(dp309
g34
I0
sg20
Nsg153
g155
sg160
(lp310
(g1
(g162
g3
NtRp311
(dp312
g15
(lp313
g308
ag1
(g29
g3
NtRp314
(dp315
g34
I0
sg20
Nsg153
g155
sg160
(lp316
(g311
I1
tp317
asg32
S'auto_3638'
p318
sg35
(itheano.gof.utils
scratchpad
p319
(dp320
g38
(lp321
sbsg47
g1
(g162
g3
NtRp322
(dp323
g15
(lp324
g1
(g221
g3
NtRp325
(dp326
g34
I0
sg20
Nsg153
g155
sg160
(lp327
(g322
I0
tp328
asg32
S'auto_3637'
p329
sg35
(itheano.gof.utils
scratchpad
p330
(dp331
g38
(lp332
sbsg47
g1
(g162
g3
NtRp333
(dp334
g15
(lp335
g1
(g81
g3
NtRp336
(dp337
g34
Nsg84
g136
sg20
g135
sg153
g155
sg160
(lp338
(g333
I0
tp339
asg32
S'auto_3603'
p340
sg35
(itheano.gof.utils
scratchpad
p341
(dp342
g38
g149
sbsg47
Nsg48
g141
sbasg153
g155
sg187
(lp343
g325
asg35
(itheano.gof.utils
scratchpad
p344
(dp345
bsg191
(dp346
sg193
g1
(g244
g3
NtRp347
(dp348
g247
(dp349
I0
(lp350
I0
assg250
(lp351
I0
asg252
(lp352
I0
asg197
g198
sg254
(I00
tp353
sg256
(S'x'
I0
tp354
sbsbsg48
g1
(g77
g3
NtRp355
(dp356
g52
(I01
I00
tp357
sg20
Nsbsbasg153
g155
sg187
(lp358
g314
asg35
(itheano.gof.utils
scratchpad
p359
(dp360
bsg191
(dp361
sg193
g265
sbsg48
g1
(g49
g3
NtRp362
(dp363
g52
(I01
I00
tp364
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg153
g155
sg187
(lp365
g1
(g29
g3
NtRp366
(dp367
g34
I0
sg20
Nsg153
g155
sg160
(lp368
(S'output'
p369
I0
tp370
asg32
S'auto_3703'
p371
sg35
(itheano.gof.utils
scratchpad
p372
(dp373
g38
(lp374
sbsg47
g311
sg48
g1
(g49
g3
NtRp375
(dp376
g52
(I00
I00
tp377
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p378
(dp379
bsg191
(dp380
sg193
g1
(ctheano.tensor.elemwise
Elemwise
p381
g3
NtRp382
(dp383
g20
NsS'scalar_op'
p384
g1
(ctheano.scalar.basic
Composite
p385
g3
NtRp386
(dp387
g15
(lp388
g1
(ctheano.scalar.basic
ScalarVariable
p389
g3
NtRp390
(dp391
g32
S'auto_3692'
p392
sg34
Nsg35
(itheano.gof.utils
scratchpad
p393
(dp394
bsg20
Nsg47
Nsg48
g1
(ctheano.scalar.basic
Scalar
p395
g3
NtRp396
(dp397
g54
g55
sbsbag1
(g389
g3
NtRp398
(dp399
g32
S'auto_3693'
p400
sg34
Nsg35
(itheano.gof.utils
scratchpad
p401
(dp402
bsg20
Nsg47
Nsg48
g1
(g395
g3
NtRp403
(dp404
g54
g202
sbsbasS'nodenames'
p405
(lp406
S'%(nodename)s_subnode0'
p407
aS'%(nodename)s_subnode1'
p408
asS'nin'
p409
I2
sg20
S'Composite{tanh((i0 + i1))}'
p410
sS'inputs_type'
p411
(g396
g403
tp412
sg187
(lp413
g1
(g389
g3
NtRp414
(dp415
g32
S'auto_3695'
p416
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p417
(dp418
g38
(lp419
sbsg20
Nsg47
g1
(g162
g3
NtRp420
(dp421
g15
(lp422
g1
(g389
g3
NtRp423
(dp424
g32
S'auto_3694'
p425
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p426
(dp427
g38
(lp428
sbsg20
Nsg47
g1
(g162
g3
NtRp429
(dp430
g15
(lp431
g390
ag398
asg35
(itheano.gof.utils
scratchpad
p432
(dp433
bsg187
(lp434
g423
asg193
g1
(ctheano.scalar.basic
Add
p435
g3
NtRp436
(dp437
S'output_types_preference'
p438
ctheano.scalar.basic
upcast_out
p439
sg197
g198
sg20
S'add'
p440
sbsbsg48
g396
sbasg35
(itheano.gof.utils
scratchpad
p441
(dp442
bsg187
(lp443
g414
asg193
g1
(ctheano.scalar.basic
Tanh
p444
g3
NtRp445
(dp446
g438
ctheano.scalar.basic
upgrade_to_float
p447
sg197
g198
sg20
S'tanh'
p448
sbsbsg48
g396
sbasS'_c_code'
p449
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i0)s + %(i1)s;\n%(o0)s = tanh(V%(id)s_tmp1);\n}\n'
p450
sS'outputs_type'
p451
(g396
tp452
sg438
g1
(ctheano.scalar.basic
transfer_type
p453
g3
NtRp454
(dp455
S'transfer'
p456
(I0
tp457
sbsg197
g198
sS'nout'
p458
I1
sbsS'destroy_map'
p459
(dp460
I0
(lp461
I0
assS'nfunc_spec'
p462
NsS'inplace_pattern'
p463
(dp464
I0
I0
ssS'openmp'
p465
I00
sg197
g198
sbsbI0
tp466
asg32
S'auto_3613'
p467
sg35
(itheano.gof.utils
scratchpad
p468
(dp469
g38
(lp470
(lp471
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp472
a(g44
I35
g45
S'l2 = T.tanh(T.dot(l1,self.W1) + self.b1)'
tp473
aasbsg47
g274
sg48
g1
(g49
g3
NtRp474
(dp475
g52
(I00
I00
tp476
sg54
S'float64'
p477
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p478
(dp479
bsg191
(dp480
sg193
g1
(ctheano.tensor.basic
Dot
p481
g3
NtRp482
(dp483
g197
g198
sbsbI0
tp484
asg32
S'auto_3691'
p485
sg35
(itheano.gof.utils
scratchpad
p486
(dp487
g38
(lp488
sbsg47
g207
sg48
g1
(g49
g3
NtRp489
(dp490
g52
(I00
I00
tp491
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p492
(dp493
bsg191
(dp494
sg193
g1
(g381
g3
NtRp495
(dp496
g20
Nsg384
g1
(g385
g3
NtRp497
(dp498
g15
(lp499
g1
(g389
g3
NtRp500
(dp501
g32
S'auto_3680'
p502
sg34
Nsg35
(itheano.gof.utils
scratchpad
p503
(dp504
bsg20
Nsg47
Nsg48
g396
sbag1
(g389
g3
NtRp505
(dp506
g32
S'auto_3681'
p507
sg34
Nsg35
(itheano.gof.utils
scratchpad
p508
(dp509
bsg20
Nsg47
Nsg48
g403
sbasg405
(lp510
S'%(nodename)s_subnode0'
p511
aS'%(nodename)s_subnode1'
p512
asg409
I2
sg20
S'Composite{tanh((i0 + i1))}'
p513
sg411
(g396
g403
tp514
sg187
(lp515
g1
(g389
g3
NtRp516
(dp517
g32
S'auto_3683'
p518
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p519
(dp520
g38
(lp521
sbsg20
Nsg47
g1
(g162
g3
NtRp522
(dp523
g15
(lp524
g1
(g389
g3
NtRp525
(dp526
g32
S'auto_3682'
p527
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p528
(dp529
g38
(lp530
sbsg20
Nsg47
g1
(g162
g3
NtRp531
(dp532
g15
(lp533
g500
ag505
asg35
(itheano.gof.utils
scratchpad
p534
(dp535
bsg187
(lp536
g525
asg193
g436
sbsg48
g396
sbasg35
(itheano.gof.utils
scratchpad
p537
(dp538
bsg187
(lp539
g516
asg193
g445
sbsg48
g396
sbasg449
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i0)s + %(i1)s;\n%(o0)s = tanh(V%(id)s_tmp1);\n}\n'
p540
sg451
(g396
tp541
sg438
g1
(g453
g3
NtRp542
(dp543
g456
(I0
tp544
sbsg197
g198
sg458
I1
sbsg459
(dp545
I0
(lp546
I0
assg462
Nsg463
(dp547
I0
I0
ssg465
I00
sg197
g198
sbsbI0
tp548
asg32
S'auto_3610'
p549
sg35
(itheano.gof.utils
scratchpad
p550
(dp551
g38
(lp552
(lp553
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp554
a(g44
I34
g45
S'l1 = T.tanh(T.dot(l0,self.W0) + self.b0)'
tp555
aasbsg47
g163
sg48
g1
(g49
g3
NtRp556
(dp557
g52
(I00
I00
tp558
sg54
S'float64'
p559
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p560
(dp561
bsg191
(dp562
sg193
g482
sbI0
tp563
asg32
S'auto_3599'
p564
sg35
(itheano.gof.utils
scratchpad
p565
(dp566
g38
g39
sbsg47
Nsg48
g50
sbag180
ag233
ag291
ag336
asS'change_tracker'
p567
(itheano.gof.opt
ChangeTracker
p568
(dp569
S'changed'
p570
I00
sS'nb_imported'
p571
I0
sbsg187
(lp572
g366
asS'update_mapping'
p573
(dp574
sS'merge_feature'
p575
g1
(ctheano.gof.opt
MergeFeature
p576
g3
NtRp577
(dp578
S'scheduled'
p579
(lp580
sS'nodes_seen'
p581
c__builtin__
set
p582
((lp583
g230
ag177
ag274
ag311
ag207
ag322
ag163
ag218
ag333
ag288
atRp584
sS'const_sig_inv'
p585
(itheano.gof.opt
_metadict
p586
(dp587
S'd'
(dp588
sS'l'
(lp589
sbsS'noinput_nodes'
p590
g1
(ctheano.misc.ordered_set
OrderedSet
p591
g3
NtRp592
(dp593
S'_OrderedSet__root'
p594
g1
(ctheano.misc.ordered_set
Link
p595
g3
NtRp596
(lp597
g596
ag596
absS'_OrderedSet__map'
p598
(dp599
sbsS'blacklist'
p600
(lp601
sS'seen_constants'
p602
g582
((ltRp603
sS'const_sig'
p604
(itheano.gof.opt
_metadict
p605
(dp606
S'd'
(dp607
sS'l'
(lp608
sbsbsS'destroy_handler'
p609
g1
(ctheano.gof.destroyhandler
DestroyHandler
p610
g3
NtRp611
(dp612
S'impact'
p613
(dp614
g204
g1
(g591
g3
NtRp615
(dp616
g594
g1
(g595
g3
NtRp617
(lp618
g1
(g595
g3
NtRp619
(lp620
g617
ag617
ag204
abag619
absg598
(dp621
g204
g619
ssbsg308
g1
(g591
g3
NtRp622
(dp623
g594
g1
(g595
g3
NtRp624
(lp625
g1
(g595
g3
NtRp626
(lp627
g624
ag624
ag308
abag626
absg598
(dp628
g308
g626
ssbssS'droot'
p629
(dp630
g204
g204
sg308
g308
ssS'view_o'
p631
ccollections
OrderedDict
p632
((lp633
(lp634
g336
ag1
(g591
g3
NtRp635
(dp636
g594
g1
(g595
g3
NtRp637
(lp638
g1
(g595
g3
NtRp639
(lp640
g637
ag637
ag325
abag639
absg598
(dp641
g325
g639
ssbaa(lp642
g233
ag1
(g591
g3
NtRp643
(dp644
g594
g1
(g595
g3
NtRp645
(lp646
g1
(g595
g3
NtRp647
(lp648
g645
ag645
ag222
abag647
absg598
(dp649
g222
g647
ssbaatRp650
sS'view_i'
p651
g632
((lp652
(lp653
g325
ag336
aa(lp654
g222
ag233
aatRp655
sg153
g155
sS'do_imports_on_attach'
p656
I01
sg160
g632
((lp657
(lp658
g336
ag632
((lp659
(lp660
g333
aI1
aatRp661
aa(lp662
g325
ag632
((lp663
(lp664
g322
aI1
aatRp665
aa(lp666
g291
ag632
((lp667
(lp668
g288
aI1
aatRp669
aa(lp670
g277
ag632
((lp671
(lp672
g274
aI1
aatRp673
aa(lp674
g233
ag632
((lp675
(lp676
g230
aI1
aatRp677
aa(lp678
g222
ag632
((lp679
(lp680
g218
aI1
aatRp681
aa(lp682
g180
ag632
((lp683
(lp684
g177
aI1
aatRp685
aa(lp686
g166
ag632
((lp687
(lp688
g163
aI1
aatRp689
aa(lp690
g314
ag632
((lp691
(lp692
g311
aI1
aatRp693
aa(lp694
g210
ag632
((lp695
(lp696
g207
aI1
aatRp697
aa(lp698
g158
ag632
((lp699
(lp700
g163
aI1
aatRp701
aa(lp702
g204
ag632
((lp703
(lp704
g207
aI1
aatRp705
aa(lp706
g1
(g29
g3
NtRp707
(dp708
g34
I0
sg20
Nsg153
g155
sg160
(lp709
sg32
S'auto_3672'
p710
sg35
(itheano.gof.utils
scratchpad
p711
(dp712
g38
(lp713
sbsg47
g1
(g162
g3
NtRp714
(dp715
g15
(lp716
g204
ag210
asg153
g155
sg187
(lp717
g707
asg35
(itheano.gof.utils
scratchpad
p718
(dp719
bsg191
(dp720
sg193
g1
(g381
g3
NtRp721
(dp722
g20
Nsg384
g1
(g385
g3
NtRp723
(dp724
g15
(lp725
g1
(g389
g3
NtRp726
(dp727
g32
S'auto_3661'
p728
sg34
Nsg35
(itheano.gof.utils
scratchpad
p729
(dp730
bsg20
Nsg47
Nsg48
g396
sbag1
(g389
g3
NtRp731
(dp732
g32
S'auto_3662'
p733
sg34
Nsg35
(itheano.gof.utils
scratchpad
p734
(dp735
bsg20
Nsg47
Nsg48
g403
sbasg405
(lp736
S'%(nodename)s_subnode0'
p737
aS'%(nodename)s_subnode1'
p738
asg409
I2
sg20
S'Composite{tanh((i0 + i1))}'
p739
sg411
(g396
g403
tp740
sg187
(lp741
g1
(g389
g3
NtRp742
(dp743
g32
S'auto_3664'
p744
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p745
(dp746
g38
g521
sbsg20
Nsg47
g1
(g162
g3
NtRp747
(dp748
g15
(lp749
g1
(g389
g3
NtRp750
(dp751
g32
S'auto_3663'
p752
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p753
(dp754
g38
g530
sbsg20
Nsg47
g1
(g162
g3
NtRp755
(dp756
g15
(lp757
g726
ag731
asg35
(itheano.gof.utils
scratchpad
p758
(dp759
bsg187
(lp760
g750
asg193
g436
sbsg48
g396
sbasg35
(itheano.gof.utils
scratchpad
p761
(dp762
bsg187
(lp763
g742
asg193
g445
sbsg48
g396
sbasg449
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i0)s + %(i1)s;\n%(o0)s = tanh(V%(id)s_tmp1);\n}\n'
p764
sg451
(g396
tp765
sg197
g198
sg458
I1
sbsg459
(dp766
sg462
Nsg463
(dp767
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp768
(dp769
g52
(I00
I00
tp770
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag632
((ltRp771
aa(lp772
g308
ag632
((lp773
(lp774
g311
aI1
aatRp775
aa(lp776
g1
(g29
g3
NtRp777
(dp778
g34
I0
sg20
Nsg153
g155
sg160
(lp779
sg32
S'auto_3654'
p780
sg35
(itheano.gof.utils
scratchpad
p781
(dp782
g38
(lp783
sbsg47
g1
(g162
g3
NtRp784
(dp785
g15
(lp786
g308
ag314
asg153
g155
sg187
(lp787
g777
asg35
(itheano.gof.utils
scratchpad
p788
(dp789
bsg191
(dp790
sg193
g1
(g381
g3
NtRp791
(dp792
g20
Nsg384
g1
(g385
g3
NtRp793
(dp794
g15
(lp795
g1
(g389
g3
NtRp796
(dp797
g32
S'auto_3643'
p798
sg34
Nsg35
(itheano.gof.utils
scratchpad
p799
(dp800
bsg20
Nsg47
Nsg48
g396
sbag1
(g389
g3
NtRp801
(dp802
g32
S'auto_3644'
p803
sg34
Nsg35
(itheano.gof.utils
scratchpad
p804
(dp805
bsg20
Nsg47
Nsg48
g403
sbasg405
(lp806
S'%(nodename)s_subnode0'
p807
aS'%(nodename)s_subnode1'
p808
asg409
I2
sg20
S'Composite{tanh((i0 + i1))}'
p809
sg411
(g396
g403
tp810
sg187
(lp811
g1
(g389
g3
NtRp812
(dp813
g32
S'auto_3646'
p814
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p815
(dp816
g38
g419
sbsg20
Nsg47
g1
(g162
g3
NtRp817
(dp818
g15
(lp819
g1
(g389
g3
NtRp820
(dp821
g32
S'auto_3645'
p822
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p823
(dp824
g38
g428
sbsg20
Nsg47
g1
(g162
g3
NtRp825
(dp826
g15
(lp827
g796
ag801
asg35
(itheano.gof.utils
scratchpad
p828
(dp829
bsg187
(lp830
g820
asg193
g436
sbsg48
g396
sbasg35
(itheano.gof.utils
scratchpad
p831
(dp832
bsg187
(lp833
g812
asg193
g445
sbsg48
g396
sbasg449
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i0)s + %(i1)s;\n%(o0)s = tanh(V%(id)s_tmp1);\n}\n'
p834
sg451
(g396
tp835
sg197
g198
sg458
I1
sbsg459
(dp836
sg462
Nsg463
(dp837
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp838
(dp839
g52
(I00
I00
tp840
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag632
((ltRp841
aa(lp842
g1
(g29
g3
NtRp843
(dp844
g34
I0
sg20
Nsg153
g155
sg160
(lp845
sg32
S'auto_3679'
p846
sg35
(itheano.gof.utils
scratchpad
p847
(dp848
g38
(lp849
sbsg47
g1
(g162
g3
NtRp850
(dp851
g15
(lp852
g777
asg153
g155
sg187
(lp853
g843
asg35
(itheano.gof.utils
scratchpad
p854
(dp855
bsg191
(dp856
sg193
g1
(ctheano.compile.ops
OutputGuard
p857
g3
NtRp858
(dp859
g197
g198
sbsbsg48
g838
sbag632
((ltRp860
aa(lp861
g271
ag632
((lp862
(lp863
g274
aI1
aatRp864
aa(lp865
g366
ag632
((ltRp866
aatRp867
sS'root_destroyer'
p868
(dp869
g204
g207
sg308
g311
ssS'debug_all_apps'
p870
g1
(g591
g3
NtRp871
(dp872
g594
g1
(g595
g3
NtRp873
(lp874
g1
(g595
g3
NtRp875
(lp876
g1
(g595
g3
NtRp877
(lp878
g1
(g595
g3
NtRp879
(lp880
g1
(g595
g3
NtRp881
(lp882
g1
(g595
g3
NtRp883
(lp884
g1
(g595
g3
NtRp885
(lp886
g1
(g595
g3
NtRp887
(lp888
g1
(g595
g3
NtRp889
(lp890
g1
(g595
g3
NtRp891
(lp892
g1
(g595
g3
NtRp893
(lp894
g873
ag891
ag333
abag889
ag288
abag887
ag230
abag885
ag177
abag883
ag322
abag881
ag218
abag879
ag163
abag877
ag274
abag875
ag207
abag873
ag311
abag893
absg598
(dp895
g177
g887
sg274
g879
sg230
g889
sg311
g875
sg207
g877
sg333
g893
sg322
g885
sg218
g883
sg163
g881
sg288
g891
ssbsS'destroyers'
p896
g1
(g591
g3
NtRp897
(dp898
g594
g1
(g595
g3
NtRp899
(lp900
g1
(g595
g3
NtRp901
(lp902
g1
(g595
g3
NtRp903
(lp904
g899
ag901
ag207
abag899
ag311
abag903
absg598
(dp905
g207
g903
sg311
g901
ssbsS'stale_droot'
p906
I00
sbsg20
S'mlp.py:51'
p907
sS'execute_callbacks_time'
p908
F0.0020585060119628906
sS'shape_feature'
p909
g1
(ctheano.tensor.opt
ShapeFeature
p910
g3
NtRp911
(dp912
g579
(dp913
sS'shape_of'
p914
(dp915
g1
(g29
g3
NtRp916
(dp917
g34
I0
sg20
Nsg153
g155
sg160
(lp918
sg32
S'auto_3614'
p919
sg35
(itheano.gof.utils
scratchpad
p920
(dp921
g38
(lp922
(lp923
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp924
a(g44
I35
g45
S'l2 = T.tanh(T.dot(l1,self.W1) + self.b1)'
tp925
aasbsg47
g1
(g162
g3
NtRp926
(dp927
g15
(lp928
g308
ag314
asg153
g155
sg187
(lp929
g916
asg35
(itheano.gof.utils
scratchpad
p930
(dp931
bsg191
(dp932
sg193
g1
(g381
g3
NtRp933
(dp934
S'__module__'
p935
S'tensor'
p936
sg384
g436
sg20
S'Elemwise{add,no_inplace}'
p937
sg197
g198
sg459
(dp938
sg462
(S'add'
I2
I1
tp939
sg463
(dp940
sg465
I00
sS'__doc__'
p941
S"elementwise addition\n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Parameters\n    ----------\n    scalar_op\n        An instance of a subclass of scalar.ScalarOp which works uniquely\n        on scalars.\n    inplace_pattern\n        A dictionary that maps the index of an output to the\n        index of an input so the output is calculated inplace using\n        the input's storage. (Just like destroymap, but without the lists.)\n    nfunc_spec\n        Either None or a tuple of three elements,\n        (nfunc_name, nin, nout) such that getattr(numpy, nfunc_name)\n        implements this operation, takes nin inputs and nout outputs.\n        Note that nin cannot always be inferred from the scalar op's\n        own nin field because that value is sometimes 0 (meaning a\n        variable number of inputs), whereas the numpy function may\n        not have varargs.\n\n    Examples\n    --------\n    Elemwise(add) # represents + on tensors (x + y)\n    Elemwise(add, {0 : 0}) # represents the += operation (x += y)\n    Elemwise(add, {0 : 1}) # represents += on the second argument (y += x)\n    Elemwise(mul)(rand(10, 5), rand(1, 5)) # the second input is completed\n    # along the first dimension to match the first input\n    Elemwise(true_div)(rand(10, 5), rand(10, 1)) # same but along the\n    # second dimension\n    Elemwise(int_div)(rand(1, 5), rand(10, 1)) # the output has size (10, 5)\n    Elemwise(log)(rand(3, 4, 5))\n\n    "
p942
sbsbsg48
g1
(g49
g3
NtRp943
(dp944
g52
(I00
I00
tp945
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsb(g1
(g29
g3
NtRp946
(dp947
g32
S'auto_3623'
p948
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p949
(dp950
g38
(lp951
sbsg20
Nsg47
g1
(g162
g3
NtRp952
(dp953
g15
(lp954
g158
asg35
(itheano.gof.utils
scratchpad
p955
(dp956
bsg187
(lp957
g946
asg193
g1
(ctheano.compile.ops
Shape_i
p958
g3
NtRp959
(dp960
S'i'
I0
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp961
(dp962
g52
(tsg54
S'int64'
p963
sg56
g57
(S'i8'
I0
I1
tRp964
(I3
S'<'
NNNI-1
I-1
I0
tbsg59
I00
sg20
Nsbsbg1
(g29
g3
NtRp965
(dp966
g32
S'auto_3619'
p967
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p968
(dp969
g38
(lp970
sbsg20
Nsg47
g1
(g162
g3
NtRp971
(dp972
g15
(lp973
g291
asg35
(itheano.gof.utils
scratchpad
p974
(dp975
bsg187
(lp976
g965
asg193
g1
(g958
g3
NtRp977
(dp978
S'i'
I1
sg197
g198
sbsbsg48
g961
sbtp979
sg1
(g29
g3
NtRp980
(dp981
g34
I0
sg20
Nsg153
g155
sg160
(lp982
sg32
S'auto_3615'
p983
sg35
(itheano.gof.utils
scratchpad
p984
(dp985
g38
(lp986
(lp987
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp988
a(g44
I35
g45
S'l2 = T.tanh(T.dot(l1,self.W1) + self.b1)'
tp989
aasbsg47
g1
(g162
g3
NtRp990
(dp991
g15
(lp992
g916
asg153
g155
sg187
(lp993
g980
asg35
(itheano.gof.utils
scratchpad
p994
(dp995
bsg191
(dp996
sg193
g1
(g381
g3
NtRp997
(dp998
g935
g936
sg384
g445
sg20
S'Elemwise{tanh,no_inplace}'
p999
sg197
g198
sg459
(dp1000
sg462
(S'tanh'
I1
I1
tp1001
sg463
(dp1002
sg465
I00
sg941
S"hyperbolic tangent of a\n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Parameters\n    ----------\n    scalar_op\n        An instance of a subclass of scalar.ScalarOp which works uniquely\n        on scalars.\n    inplace_pattern\n        A dictionary that maps the index of an output to the\n        index of an input so the output is calculated inplace using\n        the input's storage. (Just like destroymap, but without the lists.)\n    nfunc_spec\n        Either None or a tuple of three elements,\n        (nfunc_name, nin, nout) such that getattr(numpy, nfunc_name)\n        implements this operation, takes nin inputs and nout outputs.\n        Note that nin cannot always be inferred from the scalar op's\n        own nin field because that value is sometimes 0 (meaning a\n        variable number of inputs), whereas the numpy function may\n        not have varargs.\n\n    Examples\n    --------\n    Elemwise(add) # represents + on tensors (x + y)\n    Elemwise(add, {0 : 0}) # represents the += operation (x += y)\n    Elemwise(add, {0 : 1}) # represents += on the second argument (y += x)\n    Elemwise(mul)(rand(10, 5), rand(1, 5)) # the second input is completed\n    # along the first dimension to match the first input\n    Elemwise(true_div)(rand(10, 5), rand(10, 1)) # same but along the\n    # second dimension\n    Elemwise(int_div)(rand(1, 5), rand(10, 1)) # the output has size (10, 5)\n    Elemwise(log)(rand(3, 4, 5))\n\n    "
p1003
sbsbsg48
g1
(g49
g3
NtRp1004
(dp1005
g52
(I00
I00
tp1006
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsb(g946
g965
tp1007
sg314
(g1
(ctheano.tensor.var
TensorConstant
p1008
g3
NtRp1009
(dp1010
g32
S'auto_3616'
p1011
sg34
Nsg35
(itheano.gof.utils
scratchpad
p1012
(dp1013
S'unique_value'
p1014
Nsbsg20
Nsg48
g1
(g49
g3
NtRp1015
(dp1016
g52
(tsg54
S'int64'
p1017
sg56
g964
sg59
I00
sg20
NsbsS'data'
p1018
g71
(g72
(I0
tS'b'
tRp1019
(I1
(tg964
I00
S'\x01\x00\x00\x00\x00\x00\x00\x00'
tbsbg1
(g29
g3
NtRp1020
(dp1021
g32
S'auto_3617'
p1022
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1023
(dp1024
g38
(lp1025
sbsg20
Nsg47
g1
(g162
g3
NtRp1026
(dp1027
g15
(lp1028
g336
asg35
(itheano.gof.utils
scratchpad
p1029
(dp1030
bsg187
(lp1031
g1020
asg193
g1
(g958
g3
NtRp1032
(dp1033
S'i'
I0
sg197
g198
sbsbsg48
g961
sbtp1034
sg271
(g946
g1
(g29
g3
NtRp1035
(dp1036
g32
S'auto_3622'
p1037
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1038
(dp1039
g38
(lp1040
sbsg20
Nsg47
g1
(g162
g3
NtRp1041
(dp1042
g15
(lp1043
g180
asg35
(itheano.gof.utils
scratchpad
p1044
(dp1045
bsg187
(lp1046
g1035
asg193
g1
(g958
g3
NtRp1047
(dp1048
S'i'
I1
sg197
g198
sbsbsg48
g961
sbtp1049
sg158
(g946
g1
(g29
g3
NtRp1050
(dp1051
g32
S'auto_3624'
p1052
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1053
(dp1054
g38
(lp1055
sbsg20
Nsg47
g1
(g162
g3
NtRp1056
(dp1057
g15
(lp1058
g158
asg35
(itheano.gof.utils
scratchpad
p1059
(dp1060
bsg187
(lp1061
g1050
asg193
g1
(g958
g3
NtRp1062
(dp1063
S'i'
I1
sg197
g198
sbsbsg48
g961
sbtp1064
sg180
(g1
(g29
g3
NtRp1065
(dp1066
g32
S'auto_3621'
p1067
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1068
(dp1069
g38
(lp1070
sbsg20
Nsg47
g1
(g162
g3
NtRp1071
(dp1072
g15
(lp1073
g180
asg35
(itheano.gof.utils
scratchpad
p1074
(dp1075
bsg187
(lp1076
g1065
asg193
g1
(g958
g3
NtRp1077
(dp1078
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg1035
tp1079
sg233
(g1
(g29
g3
NtRp1080
(dp1081
g32
S'auto_3620'
p1082
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1083
(dp1084
g38
(lp1085
sbsg20
Nsg47
g1
(g162
g3
NtRp1086
(dp1087
g15
(lp1088
g233
asg35
(itheano.gof.utils
scratchpad
p1089
(dp1090
bsg187
(lp1091
g1080
asg193
g1
(g958
g3
NtRp1092
(dp1093
S'i'
I0
sg197
g198
sbsbsg48
g961
sbtp1094
sg291
(g1
(g29
g3
NtRp1095
(dp1096
g32
S'auto_3618'
p1097
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1098
(dp1099
g38
(lp1100
sbsg20
Nsg47
g1
(g162
g3
NtRp1101
(dp1102
g15
(lp1103
g291
asg35
(itheano.gof.utils
scratchpad
p1104
(dp1105
bsg187
(lp1106
g1095
asg193
g1
(g958
g3
NtRp1107
(dp1108
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg965
tp1109
sg843
(g946
g965
tp1110
sg336
(g1020
tp1111
sg1
(g29
g3
NtRp1112
(dp1113
g34
I0
sg20
Nsg153
g155
sg160
(lp1114
sg32
S'auto_3604'
p1115
sg35
(itheano.gof.utils
scratchpad
p1116
(dp1117
g38
(lp1118
(lp1119
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp1120
a(g44
I35
g45
S'l2 = T.tanh(T.dot(l1,self.W1) + self.b1)'
tp1121
aasbsg47
g1
(g162
g3
NtRp1122
(dp1123
g15
(lp1124
g336
asg153
g155
sg187
(lp1125
g1112
asg35
(itheano.gof.utils
scratchpad
p1126
(dp1127
bsg191
(dp1128
sg193
g1
(g194
g3
NtRp1129
(dp1130
g197
g198
sbsbsg48
g1
(g49
g3
NtRp1131
(dp1132
g52
g353
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsb(g1020
tp1133
sg277
(g1095
g965
tp1134
sg1
(g29
g3
NtRp1135
(dp1136
g34
I0
sg20
Nsg153
g155
sg160
(lp1137
sg32
S'auto_3606'
p1138
sg35
(itheano.gof.utils
scratchpad
p1139
(dp1140
g38
(lp1141
(lp1142
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp1143
a(g44
I34
g45
S'l1 = T.tanh(T.dot(l0,self.W0) + self.b0)'
tp1144
aasbsg47
g1
(g162
g3
NtRp1145
(dp1146
g15
(lp1147
g233
asg153
g155
sg187
(lp1148
g1135
asg35
(itheano.gof.utils
scratchpad
p1149
(dp1150
bsg191
(dp1151
sg193
g1
(g194
g3
NtRp1152
(dp1153
g197
g198
sbsbsg48
g1
(g49
g3
NtRp1154
(dp1155
g52
g255
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsb(g1080
tp1156
sg204
(g946
g1035
tp1157
sg166
(g1065
g1035
tp1158
sg325
(g1009
g1020
tp1159
sg777
(g946
g965
tp1160
sg1
(g29
g3
NtRp1161
(dp1162
g34
I0
sg20
Nsg153
g155
sg160
(lp1163
sg32
S'auto_3608'
p1164
sg35
(itheano.gof.utils
scratchpad
p1165
(dp1166
g38
(lp1167
(lp1168
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp1169
a(g44
I35
g45
S'l2 = T.tanh(T.dot(l1,self.W1) + self.b1)'
tp1170
aasbsg47
g1
(g162
g3
NtRp1171
(dp1172
g15
(lp1173
g1112
asg153
g155
sg187
(lp1174
g1161
asg35
(itheano.gof.utils
scratchpad
p1175
(dp1176
bsg191
(dp1177
sg193
g1
(ctheano.tensor.elemwise
DimShuffle
p1178
g3
NtRp1179
(dp1180
S'drop'
p1181
(lp1182
sg252
(lp1183
I0
asg250
(lp1184
I0
asg254
g353
sS'inplace'
p1185
I00
sg256
g354
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp1186
(dp1187
g52
(I01
I00
tp1188
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsb(g1009
g1020
tp1189
sg707
(g946
g1035
tp1190
sg1
(g29
g3
NtRp1191
(dp1192
g34
I0
sg20
Nsg153
g155
sg160
(lp1193
sg32
S'auto_3609'
p1194
sg35
(itheano.gof.utils
scratchpad
p1195
(dp1196
g38
(lp1197
(lp1198
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp1199
a(g44
I34
g45
S'l1 = T.tanh(T.dot(l0,self.W0) + self.b0)'
tp1200
aasbsg47
g1
(g162
g3
NtRp1201
(dp1202
g15
(lp1203
g1135
asg153
g155
sg187
(lp1204
g1191
asg35
(itheano.gof.utils
scratchpad
p1205
(dp1206
bsg191
(dp1207
sg193
g1
(g1178
g3
NtRp1208
(dp1209
g1181
(lp1210
sg252
(lp1211
I0
asg250
(lp1212
I0
asg254
g255
sg1185
I00
sg256
g257
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp1213
(dp1214
g52
(I01
I00
tp1215
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsb(g1009
g1080
tp1216
sg210
(g1009
g1080
tp1217
sg1
(g29
g3
NtRp1218
(dp1219
g34
I0
sg20
Nsg153
g155
sg160
(lp1220
sg32
S'auto_3611'
p1221
sg35
(itheano.gof.utils
scratchpad
p1222
(dp1223
g38
(lp1224
(lp1225
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp1226
a(g44
I34
g45
S'l1 = T.tanh(T.dot(l0,self.W0) + self.b0)'
tp1227
aasbsg47
g1
(g162
g3
NtRp1228
(dp1229
g15
(lp1230
g204
ag210
asg153
g155
sg187
(lp1231
g1218
asg35
(itheano.gof.utils
scratchpad
p1232
(dp1233
bsg191
(dp1234
sg193
g933
sbsg48
g1
(g49
g3
NtRp1235
(dp1236
g52
(I00
I00
tp1237
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsb(g946
g1035
tp1238
sg222
(g1009
g1080
tp1239
sg1
(g29
g3
NtRp1240
(dp1241
g34
I0
sg20
Nsg153
g155
sg160
(lp1242
sg32
S'auto_3612'
p1243
sg35
(itheano.gof.utils
scratchpad
p1244
(dp1245
g38
(lp1246
(lp1247
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp1248
a(g44
I34
g45
S'l1 = T.tanh(T.dot(l0,self.W0) + self.b0)'
tp1249
aasbsg47
g1
(g162
g3
NtRp1250
(dp1251
g15
(lp1252
g1218
asg153
g155
sg187
(lp1253
g1240
asg35
(itheano.gof.utils
scratchpad
p1254
(dp1255
bsg191
(dp1256
sg193
g997
sbsg48
g1
(g49
g3
NtRp1257
(dp1258
g52
(I00
I00
tp1259
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsb(g946
g1035
tp1260
sg308
(g946
g965
tp1261
sg366
(g946
g965
tp1262
ssS'lscalar_one'
p1263
g1009
sS'shape_of_reverse_index'
p1264
(dp1265
g980
g582
((ltRp1266
sg1020
g582
((lp1267
g314
ag336
ag325
ag1161
ag1112
atRp1268
sg1035
g582
((lp1269
g204
ag166
ag1240
ag271
ag1218
ag707
ag180
atRp1270
sg1080
g582
((lp1271
g210
ag233
ag222
ag1191
ag1135
atRp1272
sg843
g582
((ltRp1273
sg1095
g582
((lp1274
g277
ag291
atRp1275
sg1161
g582
((ltRp1276
sg946
g582
((lp1277
g980
ag916
ag204
ag1218
ag843
ag777
ag366
ag1240
ag271
ag308
ag158
ag707
atRp1278
sg1240
g582
((ltRp1279
sg1009
g582
((lp1280
g210
ag325
ag314
ag222
ag1161
ag1191
atRp1281
sg777
g582
((ltRp1282
sg1065
g582
((lp1283
g166
ag180
atRp1284
sg1050
g582
((lp1285
g158
atRp1286
sg965
g582
((lp1287
g916
ag291
ag980
ag777
ag843
ag308
ag277
ag366
atRp1288
sg707
g582
((ltRp1289
sg1191
g582
((ltRp1290
ssbsS'apply_nodes'
p1291
g582
((lp1292
g230
ag177
ag274
ag311
ag207
ag322
ag163
ag218
ag333
ag288
atRp1293
sS'variables'
p1294
g582
((lp1295
g314
ag158
ag180
ag233
ag291
ag336
ag277
ag204
ag166
ag325
ag366
ag271
ag210
ag222
ag308
atRp1296
sS'_features'
p1297
(lp1298
g1
(ctheano.gof.toolbox
ReplaceValidate
p1299
g3
NtRp1300
(dp1301
S'fail_validate'
p1302
I00
sS'_nodes_removed'
p1303
g582
((ltRp1304
sba(itheano.compile.function_module
Supervisor
p1305
(dp1306
S'protected'
p1307
(lp1308
g158
ag180
ag233
ag291
ag336
asbag1
(ctheano.gof.toolbox
PreserveVariableAttributes
p1309
g3
NtRp1310
ag577
ag911
ag611
asbsg187
g1
(ctheano.compile.io
SymbolicOutput
p1311
g3
NtRp1312
(dp1313
g28
g1
(g29
g3
NtRp1314
(dp1315
g32
S'auto_3598'
p1316
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1317
(dp1318
g38
g986
sbsg20
Nsg47
g1
(g162
g3
NtRp1319
(dp1320
g15
(lp1321
g1
(g29
g3
NtRp1322
(dp1323
g32
S'auto_3597'
p1324
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1325
(dp1326
g38
g922
sbsg20
Nsg47
g1
(g162
g3
NtRp1327
(dp1328
g15
(lp1329
g1
(g29
g3
NtRp1330
(dp1331
g32
S'auto_3594'
p1332
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1333
(dp1334
g38
g470
sbsg20
Nsg47
g1
(g162
g3
NtRp1335
(dp1336
g15
(lp1337
g1
(g29
g3
NtRp1338
(dp1339
g32
S'auto_3592'
p1340
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1341
(dp1342
g38
g1246
sbsg20
Nsg47
g1
(g162
g3
NtRp1343
(dp1344
g15
(lp1345
g1
(g29
g3
NtRp1346
(dp1347
g32
S'auto_3591'
p1348
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1349
(dp1350
g38
g1224
sbsg20
Nsg47
g1
(g162
g3
NtRp1351
(dp1352
g15
(lp1353
g1
(g29
g3
NtRp1354
(dp1355
g32
S'auto_3588'
p1356
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1357
(dp1358
g38
g552
sbsg20
Nsg47
g1
(g162
g3
NtRp1359
(dp1360
g15
(lp1361
g30
ag1
(g29
g3
NtRp1362
(dp1363
g32
S'auto_3587'
p1364
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1365
(dp1366
g38
g173
sbsg20
Nsg47
g1
(g162
g3
NtRp1367
(dp1368
g15
(lp1369
g82
asg35
(itheano.gof.utils
scratchpad
p1370
(dp1371
bsg187
(lp1372
g1362
asg193
g195
sbsg48
g199
sbasg35
(itheano.gof.utils
scratchpad
p1373
(dp1374
bsg187
(lp1375
g1354
asg193
g482
sbsg48
g556
sbag1
(g29
g3
NtRp1376
(dp1377
g32
S'auto_3590'
p1378
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1379
(dp1380
g38
g1197
sbsg20
Nsg47
g1
(g162
g3
NtRp1381
(dp1382
g15
(lp1383
g1
(g29
g3
NtRp1384
(dp1385
g32
S'auto_3589'
p1386
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1387
(dp1388
g38
g1141
sbsg20
Nsg47
g1
(g162
g3
NtRp1389
(dp1390
g15
(lp1391
g104
asg35
(itheano.gof.utils
scratchpad
p1392
(dp1393
bsg187
(lp1394
g1384
asg193
g1152
sbsg48
g1154
sbasg35
(itheano.gof.utils
scratchpad
p1395
(dp1396
bsg187
(lp1397
g1376
asg193
g1208
sbsg48
g1213
sbasg35
(itheano.gof.utils
scratchpad
p1398
(dp1399
bsg187
(lp1400
g1346
asg193
g933
sbsg48
g1235
sbasg35
(itheano.gof.utils
scratchpad
p1401
(dp1402
bsg187
(lp1403
g1338
asg193
g997
sbsg48
g1257
sbag1
(g29
g3
NtRp1404
(dp1405
g32
S'auto_3593'
p1406
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1407
(dp1408
g38
g284
sbsg20
Nsg47
g1
(g162
g3
NtRp1409
(dp1410
g15
(lp1411
g124
asg35
(itheano.gof.utils
scratchpad
p1412
(dp1413
bsg187
(lp1414
g1404
asg193
g302
sbsg48
g304
sbasg35
(itheano.gof.utils
scratchpad
p1415
(dp1416
bsg187
(lp1417
g1330
asg193
g482
sbsg48
g474
sbag1
(g29
g3
NtRp1418
(dp1419
g32
S'auto_3596'
p1420
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1421
(dp1422
g38
g1167
sbsg20
Nsg47
g1
(g162
g3
NtRp1423
(dp1424
g15
(lp1425
g1
(g29
g3
NtRp1426
(dp1427
g32
S'auto_3595'
p1428
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1429
(dp1430
g38
g1118
sbsg20
Nsg47
g1
(g162
g3
NtRp1431
(dp1432
g15
(lp1433
g144
asg35
(itheano.gof.utils
scratchpad
p1434
(dp1435
bsg187
(lp1436
g1426
asg193
g1129
sbsg48
g1131
sbasg35
(itheano.gof.utils
scratchpad
p1437
(dp1438
bsg187
(lp1439
g1418
asg193
g1179
sbsg48
g1186
sbasg35
(itheano.gof.utils
scratchpad
p1440
(dp1441
bsg187
(lp1442
g1322
asg193
g933
sbsg48
g943
sbasg35
(itheano.gof.utils
scratchpad
p1443
(dp1444
bsg187
(lp1445
g1314
asg193
g997
sbsg48
g1004
sbsg24
I00
sbsS'on_unused_input'
p1446
NsS'accept_inplace'
p1447
I00
sS'mode'
p1448
g1
(ctheano.compile.mode
Mode
p1449
g3
NtRp1450
(S'cvm'
p1451
g1
(ctheano.gof.optdb
Query
p1452
g3
NtRp1453
(dp1454
g20
S'OPT_FAST_RUN'
p1455
sS'require'
p1456
g1
(g591
g3
NtRp1457
(dp1458
g594
g1
(g595
g3
NtRp1459
(lp1460
g1459
ag1459
absg598
(dp1461
sbsS'subquery'
p1462
(dp1463
sS'position_cutoff'
p1464
NsS'exclude'
p1465
g1
(g591
g3
NtRp1466
(dp1467
g594
g1
(g595
g3
NtRp1468
(lp1469
g1468
ag1468
absg598
(dp1470
sbsS'include'
p1471
g1
(g591
g3
NtRp1472
(dp1473
g594
g1
(g595
g3
NtRp1474
(lp1475
g1
(g595
g3
NtRp1476
(lp1477
g1474
ag1474
aS'fast_run'
p1478
abag1476
absg598
(dp1479
g1478
g1476
ssbsS'extra_optimizations'
p1480
(lp1481
sbtbstRp1482
(lp1483
g1
(g65
g3
NtRp1484
(dp1485
S'provided'
p1486
I0
sg20
g21
sS'required'
p1487
I01
sg68
(lp1488
Nasg26
I00
sg25
I00
sg76
I00
sg48
g50
sg61
Nsbag1
(g65
g3
NtRp1489
(dp1490
g1486
I0
sg20
g64
sg1487
I00
sg68
g69
sg26
I01
sg25
I00
sg76
I00
sg48
g78
sg61
Nsbag1
(g65
g3
NtRp1491
(dp1492
g1486
I0
sg20
g95
sg1487
I00
sg68
g98
sg26
I01
sg25
I00
sg76
I00
sg48
g101
sg61
Nsbag1
(g65
g3
NtRp1493
(dp1494
g1486
I0
sg20
g115
sg1487
I00
sg68
g118
sg26
I01
sg25
I00
sg76
I00
sg48
g121
sg61
Nsbag1
(g65
g3
NtRp1495
(dp1496
g1486
I0
sg20
g135
sg1487
I00
sg68
g138
sg26
I01
sg25
I00
sg76
I00
sg48
g141
sg61
Nsba(lp1497
Nag75
ag100
ag120
ag140
atRp1498
sS'train'
p1499
g9
(g10
((dp1500
g12
Nsg13
g14
sg15
(lp1501
g1
(g17
g3
NtRp1502
(dp1503
g20
g21
sg22
Nsg23
Nsg24
Nsg25
I00
sg26
I00
sg27
I00
sg28
g30
sg60
I00
sg61
Nsbag1
(g17
g3
NtRp1504
(dp1505
g20
S'y'
sg22
Nsg23
Nsg24
Nsg25
I00
sg26
I00
sg27
I00
sg28
g1
(g29
g3
NtRp1506
(dp1507
g32
S'auto_821'
p1508
sg34
Nsg35
(itheano.gof.utils
scratchpad
p1509
(dp1510
g38
(lp1511
(lp1512
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp1513
a(g44
I38
g45
S'y = T.dmatrix("y")'
tp1514
aasbsg20
S'y'
sg47
Nsg48
g50
sbsg60
I00
sg61
Nsbag1
(g17
g3
NtRp1515
(dp1516
g20
g64
sg22
g1
(g221
g3
NtRp1517
(dp1518
g32
S'auto_1876'
p1519
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1520
(dp1521
g38
(lp1522
(lp1523
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp1524
a(g44
I49
g45
S'(self.b1, self.b1-learning_rate*g_b1),'
tp1525
aasbsg20
Nsg47
g1
(g162
g3
NtRp1526
(dp1527
g15
(lp1528
g1
(g29
g3
NtRp1529
(dp1530
g32
S'auto_1875'
p1531
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1532
(dp1533
g38
(lp1534
(lp1535
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp1536
a(g44
I46
g45
S'(self.W0, self.W0-learning_rate*g_W0),'
tp1537
aasbsg20
Nsg47
g1
(g162
g3
NtRp1538
(dp1539
g15
(lp1540
g1
(g29
g3
NtRp1541
(dp1542
g32
S'auto_1837'
p1543
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1544
(dp1545
g38
(lp1546
(lp1547
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp1548
a(g44
I46
g45
S'(self.W0, self.W0-learning_rate*g_W0),'
tp1549
aasbsg20
Nsg47
g1
(g162
g3
NtRp1550
(dp1551
g15
(lp1552
g82
asg35
(itheano.gof.utils
scratchpad
p1553
(dp1554
bsg187
(lp1555
g1541
asg193
g1
(g194
g3
NtRp1556
(dp1557
g197
g198
sbsbsg48
g1
(g49
g3
NtRp1558
(dp1559
g52
(I00
I00
tp1560
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp1561
(dp1562
g32
S'auto_1874'
p1563
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1564
(dp1565
g38
(lp1566
(lp1567
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp1568
a(g44
I46
g45
S'(self.W0, self.W0-learning_rate*g_W0),'
tp1569
aasbsg20
Nsg47
g1
(g162
g3
NtRp1570
(dp1571
g15
(lp1572
g1
(g29
g3
NtRp1573
(dp1574
g32
S'auto_1838'
p1575
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1576
(dp1577
g38
(lp1578
(lp1579
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp1580
a(g44
I46
g45
S'(self.W0, self.W0-learning_rate*g_W0),'
tp1581
aasbsg20
Nsg47
g1
(g162
g3
NtRp1582
(dp1583
g15
(lp1584
g1
(g1008
g3
NtRp1585
(dp1586
g32
S'auto_1762'
p1587
sg34
Nsg35
(itheano.gof.utils
scratchpad
p1588
(dp1589
g1014
Nsbsg20
Nsg48
g1
(g49
g3
NtRp1590
(dp1591
g52
(tsg54
S'float32'
p1592
sg56
g74
sg59
I00
sg20
Nsbsg1018
g71
(g72
(I0
tS'b'
tRp1593
(I1
(tg74
I00
S'\x00\x00\x80>'
tbsbasg35
(itheano.gof.utils
scratchpad
p1594
(dp1595
bsg187
(lp1596
g1573
asg193
g1
(g1178
g3
NtRp1597
(dp1598
g1181
(lp1599
sg252
(lp1600
sg250
(lp1601
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp1602
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp1603
(dp1604
g52
(I01
I01
tp1605
sg54
g1592
sg56
g74
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp1606
(dp1607
g32
S'auto_1873'
p1608
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1609
(dp1610
g38
(lp1611
(lp1612
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp1613
a(g44
I41
g45
S'g_W0 = T.grad(err, self.W0)'
tp1614
a(S'/usr/local/lib/python2.7/dist-packages/theano/gradient.py'
p1615
I561
S'grad'
p1616
S'grad_dict, wrt, cost_name)'
tp1617
a(S'/usr/local/lib/python2.7/dist-packages/theano/gradient.py'
p1618
I1324
S'_populate_grad_dict'
p1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp1620
a(S'/usr/local/lib/python2.7/dist-packages/theano/gradient.py'
p1621
I1311
S'access_grad_cache'
p1622
S'grad_dict[var] = reduce(lambda x, y: x + y, terms)'
tp1623
a(S'/usr/local/lib/python2.7/dist-packages/theano/gradient.py'
p1624
I1311
S'<lambda>'
p1625
S'grad_dict[var] = reduce(lambda x, y: x + y, terms)'
tp1626
aasbsg20
Nsg47
g1
(g162
g3
NtRp1627
(dp1628
g15
(lp1629
g1
(g29
g3
NtRp1630
(dp1631
g32
S'auto_1863'
p1632
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1633
(dp1634
g38
(lp1635
(lp1636
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp1637
a(g44
I41
g45
S'g_W0 = T.grad(err, self.W0)'
tp1638
a(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp1639
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp1640
a(g1621
I1311
g1622
S'grad_dict[var] = reduce(lambda x, y: x + y, terms)'
tp1641
a(g1624
I1311
g1625
S'grad_dict[var] = reduce(lambda x, y: x + y, terms)'
tp1642
aasbsg20
Nsg47
g1
(g162
g3
NtRp1643
(dp1644
g15
(lp1645
g1
(g221
g3
NtRp1646
(dp1647
g32
S'auto_1862'
p1648
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1649
(dp1650
g38
(lp1651
(lp1652
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp1653
a(g44
I41
g45
S'g_W0 = T.grad(err, self.W0)'
tp1654
a(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp1655
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp1656
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp1657
a(S'/usr/local/lib/python2.7/dist-packages/theano/gradient.py'
p1658
I1113
S'access_term_cache'
p1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp1660
aasbsg20
Nsg47
g1
(g162
g3
NtRp1661
(dp1662
g15
(lp1663
g1
(g29
g3
NtRp1664
(dp1665
g32
S'auto_1861'
p1666
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1667
(dp1668
g38
(lp1669
(lp1670
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp1671
a(g44
I41
g45
S'g_W0 = T.grad(err, self.W0)'
tp1672
a(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp1673
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp1674
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp1675
a(g1658
I1065
g1659
S'new_output_grads.append(og.astype(o_dt))'
tp1676
aasbsg20
Nsg47
g1
(g162
g3
NtRp1677
(dp1678
g15
(lp1679
g1
(g29
g3
NtRp1680
(dp1681
g32
S'auto_1860'
p1682
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1683
(dp1684
g38
(lp1685
(lp1686
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp1687
a(g44
I41
g45
S'g_W0 = T.grad(err, self.W0)'
tp1688
a(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp1689
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp1690
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp1691
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp1692
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp1693
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp1694
aasbsg20
Nsg47
g1
(g162
g3
NtRp1695
(dp1696
g15
(lp1697
g1
(g29
g3
NtRp1698
(dp1699
g32
S'auto_1839'
p1700
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1701
(dp1702
g38
(lp1703
(lp1704
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp1705
a(g44
I41
g45
S'g_W0 = T.grad(err, self.W0)'
tp1706
a(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp1707
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp1708
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp1709
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp1710
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp1711
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp1712
aasbsg20
S'l0.T'
p1713
sg47
g1
(g162
g3
NtRp1714
(dp1715
g15
(lp1716
g30
asg35
(itheano.gof.utils
scratchpad
p1717
(dp1718
bsg187
(lp1719
g1698
asg193
g1
(g1178
g3
NtRp1720
(dp1721
g1181
(lp1722
sg252
(lp1723
I1
aI0
asg250
(lp1724
sg254
g53
sg1185
I00
sg256
(I1
I0
tp1725
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp1726
(dp1727
g52
(I00
I00
tp1728
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp1729
(dp1730
g32
S'auto_1859'
p1731
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1732
(dp1733
g38
(lp1734
(lp1735
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp1736
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp1737
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp1738
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp1739
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp1740
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp1741
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp1742
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp1743
aasbsg20
Nsg47
g1
(g162
g3
NtRp1744
(dp1745
g15
(lp1746
g1
(g29
g3
NtRp1747
(dp1748
g32
S'auto_1854'
p1749
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1750
(dp1751
g38
(lp1752
(lp1753
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp1754
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp1755
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp1756
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp1757
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp1758
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp1759
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp1760
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp1761
aasbsg20
Nsg47
g1
(g162
g3
NtRp1762
(dp1763
g15
(lp1764
g1
(g29
g3
NtRp1765
(dp1766
g32
S'auto_1852'
p1767
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1768
(dp1769
g38
(lp1770
(lp1771
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp1772
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp1773
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp1774
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp1775
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp1776
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp1777
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp1778
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp1779
aasbsg20
Nsg47
g1
(g162
g3
NtRp1780
(dp1781
g15
(lp1782
g1
(g29
g3
NtRp1783
(dp1784
g32
S'auto_1847'
p1785
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1786
(dp1787
g38
(lp1788
(lp1789
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp1790
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp1791
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp1792
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp1793
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp1794
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp1795
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp1796
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp1797
aasbsg20
Nsg47
g1
(g162
g3
NtRp1798
(dp1799
g15
(lp1800
g1
(g29
g3
NtRp1801
(dp1802
g32
S'auto_1843'
p1803
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1804
(dp1805
g38
(lp1806
(lp1807
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp1808
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp1809
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp1810
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp1811
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp1812
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp1813
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp1814
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp1815
aasbsg20
Nsg47
g1
(g162
g3
NtRp1816
(dp1817
g15
(lp1818
g1
(g29
g3
NtRp1819
(dp1820
g32
S'auto_1842'
p1821
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1822
(dp1823
g38
(lp1824
(lp1825
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp1826
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp1827
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp1828
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp1829
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp1830
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp1831
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp1832
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp1833
aasbsg20
Nsg47
g1
(g162
g3
NtRp1834
(dp1835
g15
(lp1836
g1
(g29
g3
NtRp1837
(dp1838
g32
S'auto_1826'
p1839
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1840
(dp1841
g38
(lp1842
(lp1843
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp1844
a(g44
I39
g45
S'err = T.sum((l2-y)**2) + 0.01*(abs(self.W0).sum() + abs(self.W1).sum())'
tp1845
aasbsg20
Nsg47
g1
(g162
g3
NtRp1846
(dp1847
g15
(lp1848
g1
(g29
g3
NtRp1849
(dp1850
g32
S'auto_1824'
p1851
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1852
(dp1853
g38
(lp1854
(lp1855
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp1856
a(g44
I39
g45
S'err = T.sum((l2-y)**2) + 0.01*(abs(self.W0).sum() + abs(self.W1).sum())'
tp1857
aasbsg20
Nsg47
g1
(g162
g3
NtRp1858
(dp1859
g15
(lp1860
g1
(g29
g3
NtRp1861
(dp1862
g32
S'auto_1823'
p1863
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1864
(dp1865
g38
g986
sbsg20
Nsg47
g1
(g162
g3
NtRp1866
(dp1867
g15
(lp1868
g1
(g29
g3
NtRp1869
(dp1870
g32
S'auto_1822'
p1871
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1872
(dp1873
g38
g922
sbsg20
Nsg47
g1
(g162
g3
NtRp1874
(dp1875
g15
(lp1876
g1
(g29
g3
NtRp1877
(dp1878
g32
S'auto_1819'
p1879
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1880
(dp1881
g38
g470
sbsg20
Nsg47
g1
(g162
g3
NtRp1882
(dp1883
g15
(lp1884
g1
(g29
g3
NtRp1885
(dp1886
g32
S'auto_1817'
p1887
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1888
(dp1889
g38
g1246
sbsg20
Nsg47
g1
(g162
g3
NtRp1890
(dp1891
g15
(lp1892
g1
(g29
g3
NtRp1893
(dp1894
g32
S'auto_1816'
p1895
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1896
(dp1897
g38
g1224
sbsg20
Nsg47
g1
(g162
g3
NtRp1898
(dp1899
g15
(lp1900
g1
(g29
g3
NtRp1901
(dp1902
g32
S'auto_1813'
p1903
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1904
(dp1905
g38
g552
sbsg20
Nsg47
g1
(g162
g3
NtRp1906
(dp1907
g15
(lp1908
g30
ag1
(g29
g3
NtRp1909
(dp1910
g32
S'auto_1812'
p1911
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1912
(dp1913
g38
g173
sbsg20
Nsg47
g1
(g162
g3
NtRp1914
(dp1915
g15
(lp1916
g82
asg35
(itheano.gof.utils
scratchpad
p1917
(dp1918
bsg187
(lp1919
g1909
asg193
g195
sbsg48
g199
sbasg35
(itheano.gof.utils
scratchpad
p1920
(dp1921
bsg187
(lp1922
g1901
asg193
g482
sbsg48
g556
sbag1
(g29
g3
NtRp1923
(dp1924
g32
S'auto_1815'
p1925
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1926
(dp1927
g38
g1197
sbsg20
Nsg47
g1
(g162
g3
NtRp1928
(dp1929
g15
(lp1930
g1
(g29
g3
NtRp1931
(dp1932
g32
S'auto_1814'
p1933
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1934
(dp1935
g38
g1141
sbsg20
Nsg47
g1
(g162
g3
NtRp1936
(dp1937
g15
(lp1938
g104
asg35
(itheano.gof.utils
scratchpad
p1939
(dp1940
bsg187
(lp1941
g1931
asg193
g1152
sbsg48
g1154
sbasg35
(itheano.gof.utils
scratchpad
p1942
(dp1943
bsg187
(lp1944
g1923
asg193
g1208
sbsg48
g1213
sbasg35
(itheano.gof.utils
scratchpad
p1945
(dp1946
bsg187
(lp1947
g1893
asg193
g933
sbsg48
g1235
sbasg35
(itheano.gof.utils
scratchpad
p1948
(dp1949
bsg187
(lp1950
g1885
asg193
g997
sbsg48
g1257
sbag1
(g29
g3
NtRp1951
(dp1952
g32
S'auto_1818'
p1953
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1954
(dp1955
g38
g284
sbsg20
Nsg47
g1
(g162
g3
NtRp1956
(dp1957
g15
(lp1958
g124
asg35
(itheano.gof.utils
scratchpad
p1959
(dp1960
bsg187
(lp1961
g1951
asg193
g302
sbsg48
g304
sbasg35
(itheano.gof.utils
scratchpad
p1962
(dp1963
bsg187
(lp1964
g1877
asg193
g482
sbsg48
g474
sbag1
(g29
g3
NtRp1965
(dp1966
g32
S'auto_1821'
p1967
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1968
(dp1969
g38
g1167
sbsg20
Nsg47
g1
(g162
g3
NtRp1970
(dp1971
g15
(lp1972
g1
(g29
g3
NtRp1973
(dp1974
g32
S'auto_1820'
p1975
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p1976
(dp1977
g38
g1118
sbsg20
Nsg47
g1
(g162
g3
NtRp1978
(dp1979
g15
(lp1980
g144
asg35
(itheano.gof.utils
scratchpad
p1981
(dp1982
bsg187
(lp1983
g1973
asg193
g1129
sbsg48
g1131
sbasg35
(itheano.gof.utils
scratchpad
p1984
(dp1985
bsg187
(lp1986
g1965
asg193
g1179
sbsg48
g1186
sbasg35
(itheano.gof.utils
scratchpad
p1987
(dp1988
bsg187
(lp1989
g1869
asg193
g933
sbsg48
g943
sbasg35
(itheano.gof.utils
scratchpad
p1990
(dp1991
bsg187
(lp1992
g1861
asg193
g997
sbsg48
g1004
sbag1506
asg35
(itheano.gof.utils
scratchpad
p1993
(dp1994
bsg187
(lp1995
g1849
asg193
g1
(g381
g3
NtRp1996
(dp1997
g935
g936
sg384
g1
(ctheano.scalar.basic
Sub
p1998
g3
NtRp1999
(dp2000
g438
g439
sg197
g198
sg20
S'sub'
p2001
sbsg20
S'Elemwise{sub,no_inplace}'
p2002
sg197
g198
sg459
(dp2003
sg462
(S'subtract'
p2004
I2
I1
tp2005
sg463
(dp2006
sg465
I00
sg941
S"elementwise subtraction\n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Parameters\n    ----------\n    scalar_op\n        An instance of a subclass of scalar.ScalarOp which works uniquely\n        on scalars.\n    inplace_pattern\n        A dictionary that maps the index of an output to the\n        index of an input so the output is calculated inplace using\n        the input's storage. (Just like destroymap, but without the lists.)\n    nfunc_spec\n        Either None or a tuple of three elements,\n        (nfunc_name, nin, nout) such that getattr(numpy, nfunc_name)\n        implements this operation, takes nin inputs and nout outputs.\n        Note that nin cannot always be inferred from the scalar op's\n        own nin field because that value is sometimes 0 (meaning a\n        variable number of inputs), whereas the numpy function may\n        not have varargs.\n\n    Examples\n    --------\n    Elemwise(add) # represents + on tensors (x + y)\n    Elemwise(add, {0 : 0}) # represents the += operation (x += y)\n    Elemwise(add, {0 : 1}) # represents += on the second argument (y += x)\n    Elemwise(mul)(rand(10, 5), rand(1, 5)) # the second input is completed\n    # along the first dimension to match the first input\n    Elemwise(true_div)(rand(10, 5), rand(10, 1)) # same but along the\n    # second dimension\n    Elemwise(int_div)(rand(1, 5), rand(10, 1)) # the output has size (10, 5)\n    Elemwise(log)(rand(3, 4, 5))\n\n    "
p2007
sbsbsg48
g1
(g49
g3
NtRp2008
(dp2009
g52
(I00
I00
tp2010
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp2011
(dp2012
g32
S'auto_1825'
p2013
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2014
(dp2015
g38
(lp2016
(lp2017
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp2018
a(g44
I39
g45
S'err = T.sum((l2-y)**2) + 0.01*(abs(self.W0).sum() + abs(self.W1).sum())'
tp2019
aasbsg20
Nsg47
g1
(g162
g3
NtRp2020
(dp2021
g15
(lp2022
g1
(g1008
g3
NtRp2023
(dp2024
g32
S'auto_826'
p2025
sg34
Nsg35
(itheano.gof.utils
scratchpad
p2026
(dp2027
g1014
Nsbsg20
NsS'cached'
p2028
I01
sg48
g1
(g49
g3
NtRp2029
(dp2030
g52
(tsg54
S'int8'
p2031
sg56
g57
(S'i1'
I0
I1
tRp2032
(I3
S'|'
NNNI-1
I-1
I0
tbsg59
I00
sg20
Nsbsg1018
g71
(g72
(I0
tS'b'
tRp2033
(I1
(tg2032
I00
S'\x02'
tbsbasg35
(itheano.gof.utils
scratchpad
p2034
(dp2035
bsg187
(lp2036
g2011
asg193
g1
(g1178
g3
NtRp2037
(dp2038
g1181
(lp2039
sg252
(lp2040
sg250
(lp2041
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp2042
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp2043
(dp2044
g52
(I01
I01
tp2045
sg54
g2031
sg56
g2032
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p2046
(dp2047
bsg187
(lp2048
g1837
asg193
g1
(g381
g3
NtRp2049
(dp2050
g935
g936
sg384
g1
(ctheano.scalar.basic
Pow
p2051
g3
NtRp2052
(dp2053
g438
g439
sg197
g198
sg20
S'pow'
p2054
sbsg20
S'Elemwise{pow,no_inplace}'
p2055
sg197
g198
sg459
(dp2056
sg462
(S'power'
I2
I1
tp2057
sg463
(dp2058
sg465
I00
sg941
S"elementwise power\n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Parameters\n    ----------\n    scalar_op\n        An instance of a subclass of scalar.ScalarOp which works uniquely\n        on scalars.\n    inplace_pattern\n        A dictionary that maps the index of an output to the\n        index of an input so the output is calculated inplace using\n        the input's storage. (Just like destroymap, but without the lists.)\n    nfunc_spec\n        Either None or a tuple of three elements,\n        (nfunc_name, nin, nout) such that getattr(numpy, nfunc_name)\n        implements this operation, takes nin inputs and nout outputs.\n        Note that nin cannot always be inferred from the scalar op's\n        own nin field because that value is sometimes 0 (meaning a\n        variable number of inputs), whereas the numpy function may\n        not have varargs.\n\n    Examples\n    --------\n    Elemwise(add) # represents + on tensors (x + y)\n    Elemwise(add, {0 : 0}) # represents the += operation (x += y)\n    Elemwise(add, {0 : 1}) # represents += on the second argument (y += x)\n    Elemwise(mul)(rand(10, 5), rand(1, 5)) # the second input is completed\n    # along the first dimension to match the first input\n    Elemwise(true_div)(rand(10, 5), rand(10, 1)) # same but along the\n    # second dimension\n    Elemwise(int_div)(rand(1, 5), rand(10, 1)) # the output has size (10, 5)\n    Elemwise(log)(rand(3, 4, 5))\n\n    "
p2059
sbsbsg48
g1
(g49
g3
NtRp2060
(dp2061
g52
(I00
I00
tp2062
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp2063
(dp2064
g32
S'auto_1841'
p2065
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2066
(dp2067
g38
(lp2068
(lp2069
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2070
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2071
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2072
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2073
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2074
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2075
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2076
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp2077
aasbsg20
Nsg47
g1
(g162
g3
NtRp2078
(dp2079
g15
(lp2080
g1
(g29
g3
NtRp2081
(dp2082
g32
S'auto_1840'
p2083
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2084
(dp2085
g38
(lp2086
(lp2087
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp2088
a(g44
I41
g45
S'g_W0 = T.grad(err, self.W0)'
tp2089
a(g1615
I473
g1616
S'g_cost = _float_ones_like(cost)'
tp2090
a(S'/usr/local/lib/python2.7/dist-packages/theano/gradient.py'
p2091
I1345
S'_float_ones_like'
p2092
S'rval = tensor.ones_like(x)'
tp2093
aasbsg20
Nsg47
g1
(g162
g3
NtRp2094
(dp2095
g15
(lp2096
g1
(g29
g3
NtRp2097
(dp2098
g32
S'auto_1836'
p2099
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2100
(dp2101
g38
(lp2102
(lp2103
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp2104
a(g44
I39
g45
S'err = T.sum((l2-y)**2) + 0.01*(abs(self.W0).sum() + abs(self.W1).sum())'
tp2105
aasbsg20
Nsg47
g1
(g162
g3
NtRp2106
(dp2107
g15
(lp2108
g1
(g29
g3
NtRp2109
(dp2110
g32
S'auto_1827'
p2111
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2112
(dp2113
g38
(lp2114
(lp2115
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp2116
a(g44
I39
g45
S'err = T.sum((l2-y)**2) + 0.01*(abs(self.W0).sum() + abs(self.W1).sum())'
tp2117
aasbsg20
Nsg47
g1
(g162
g3
NtRp2118
(dp2119
g15
(lp2120
g1837
asg35
(itheano.gof.utils
scratchpad
p2121
(dp2122
bsg187
(lp2123
g2109
asg193
g1
(ctheano.tensor.elemwise
Sum
p2124
g3
NtRp2125
(dp2126
S'acc_dtype'
p2127
g55
sg54
g55
sg197
g198
sg384
g436
sS'axis'
p2128
Nsbsbsg48
g1
(g49
g3
NtRp2129
(dp2130
g52
(tsg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp2131
(dp2132
g32
S'auto_1835'
p2133
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2134
(dp2135
g38
(lp2136
(lp2137
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp2138
a(g44
I39
g45
S'err = T.sum((l2-y)**2) + 0.01*(abs(self.W0).sum() + abs(self.W1).sum())'
tp2139
aasbsg20
Nsg47
g1
(g162
g3
NtRp2140
(dp2141
g15
(lp2142
g1
(g1008
g3
NtRp2143
(dp2144
g32
S'auto_847'
p2145
sg34
Nsg35
(itheano.gof.utils
scratchpad
p2146
(dp2147
g1014
Nsbsg20
Nsg48
g1
(g49
g3
NtRp2148
(dp2149
g52
(tsg54
S'float32'
p2150
sg56
g74
sg59
I00
sg20
Nsbsg1018
g71
(g72
(I0
tS'b'
tRp2151
(I1
(tg74
I00
S'\n\xd7#<'
tbsbag1
(g29
g3
NtRp2152
(dp2153
g32
S'auto_1834'
p2154
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2155
(dp2156
g38
(lp2157
(lp2158
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp2159
a(g44
I39
g45
S'err = T.sum((l2-y)**2) + 0.01*(abs(self.W0).sum() + abs(self.W1).sum())'
tp2160
aasbsg20
Nsg47
g1
(g162
g3
NtRp2161
(dp2162
g15
(lp2163
g1
(g29
g3
NtRp2164
(dp2165
g32
S'auto_1830'
p2166
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2167
(dp2168
g38
(lp2169
(lp2170
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp2171
a(g44
I39
g45
S'err = T.sum((l2-y)**2) + 0.01*(abs(self.W0).sum() + abs(self.W1).sum())'
tp2172
aasbsg20
Nsg47
g1
(g162
g3
NtRp2173
(dp2174
g15
(lp2175
g1
(g29
g3
NtRp2176
(dp2177
g32
S'auto_1829'
p2178
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2179
(dp2180
g38
(lp2181
(lp2182
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp2183
a(g44
I39
g45
S'err = T.sum((l2-y)**2) + 0.01*(abs(self.W0).sum() + abs(self.W1).sum())'
tp2184
aasbsg20
Nsg47
g1
(g162
g3
NtRp2185
(dp2186
g15
(lp2187
g1
(g29
g3
NtRp2188
(dp2189
g32
S'auto_1828'
p2190
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2191
(dp2192
g38
(lp2193
(lp2194
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp2195
a(g44
I39
g45
S'err = T.sum((l2-y)**2) + 0.01*(abs(self.W0).sum() + abs(self.W1).sum())'
tp2196
aasbsg20
Nsg47
g1
(g162
g3
NtRp2197
(dp2198
g15
(lp2199
g82
asg35
(itheano.gof.utils
scratchpad
p2200
(dp2201
bsg187
(lp2202
g2188
asg193
g1
(g194
g3
NtRp2203
(dp2204
g197
g198
sbsbsg48
g1
(g49
g3
NtRp2205
(dp2206
g52
(I00
I00
tp2207
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p2208
(dp2209
bsg187
(lp2210
g2176
asg193
g1
(g381
g3
NtRp2211
(dp2212
g935
g936
sg384
g1
(ctheano.scalar.basic
Abs
p2213
g3
NtRp2214
(dp2215
g438
ctheano.scalar.basic
same_out
p2216
sg197
g198
sg20
Nsbsg20
S'Elemwise{abs_,no_inplace}'
p2217
sg197
g198
sg459
(dp2218
sg462
(S'abs'
I1
I1
tp2219
sg463
(dp2220
sg465
I00
sg941
S"|`a`|\n\n    TensorVariable overloads the `TensorVariable.__abs__` operator so that\n    this function is called when you type abs(a).\n\n    \n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Parameters\n    ----------\n    scalar_op\n        An instance of a subclass of scalar.ScalarOp which works uniquely\n        on scalars.\n    inplace_pattern\n        A dictionary that maps the index of an output to the\n        index of an input so the output is calculated inplace using\n        the input's storage. (Just like destroymap, but without the lists.)\n    nfunc_spec\n        Either None or a tuple of three elements,\n        (nfunc_name, nin, nout) such that getattr(numpy, nfunc_name)\n        implements this operation, takes nin inputs and nout outputs.\n        Note that nin cannot always be inferred from the scalar op's\n        own nin field because that value is sometimes 0 (meaning a\n        variable number of inputs), whereas the numpy function may\n        not have varargs.\n\n    Examples\n    --------\n    Elemwise(add) # represents + on tensors (x + y)\n    Elemwise(add, {0 : 0}) # represents the += operation (x += y)\n    Elemwise(add, {0 : 1}) # represents += on the second argument (y += x)\n    Elemwise(mul)(rand(10, 5), rand(1, 5)) # the second input is completed\n    # along the first dimension to match the first input\n    Elemwise(true_div)(rand(10, 5), rand(10, 1)) # same but along the\n    # second dimension\n    Elemwise(int_div)(rand(1, 5), rand(10, 1)) # the output has size (10, 5)\n    Elemwise(log)(rand(3, 4, 5))\n\n    "
p2221
sbsbsg48
g1
(g49
g3
NtRp2222
(dp2223
g52
(I00
I00
tp2224
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p2225
(dp2226
bsg187
(lp2227
g2164
asg193
g1
(g2124
g3
NtRp2228
(dp2229
g2127
g55
sg54
g202
sg197
g198
sg384
g436
sg2128
Nsbsbsg48
g1
(g49
g3
NtRp2230
(dp2231
g52
(tsg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp2232
(dp2233
g32
S'auto_1833'
p2234
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2235
(dp2236
g38
(lp2237
(lp2238
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp2239
a(g44
I39
g45
S'err = T.sum((l2-y)**2) + 0.01*(abs(self.W0).sum() + abs(self.W1).sum())'
tp2240
aasbsg20
Nsg47
g1
(g162
g3
NtRp2241
(dp2242
g15
(lp2243
g1
(g29
g3
NtRp2244
(dp2245
g32
S'auto_1832'
p2246
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2247
(dp2248
g38
(lp2249
(lp2250
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp2251
a(g44
I39
g45
S'err = T.sum((l2-y)**2) + 0.01*(abs(self.W0).sum() + abs(self.W1).sum())'
tp2252
aasbsg20
Nsg47
g1
(g162
g3
NtRp2253
(dp2254
g15
(lp2255
g1
(g29
g3
NtRp2256
(dp2257
g32
S'auto_1831'
p2258
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2259
(dp2260
g38
(lp2261
(lp2262
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp2263
a(g44
I39
g45
S'err = T.sum((l2-y)**2) + 0.01*(abs(self.W0).sum() + abs(self.W1).sum())'
tp2264
aasbsg20
Nsg47
g1
(g162
g3
NtRp2265
(dp2266
g15
(lp2267
g124
asg35
(itheano.gof.utils
scratchpad
p2268
(dp2269
bsg187
(lp2270
g2256
asg193
g1
(g194
g3
NtRp2271
(dp2272
g197
g198
sbsbsg48
g1
(g49
g3
NtRp2273
(dp2274
g52
(I00
I00
tp2275
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p2276
(dp2277
bsg187
(lp2278
g2244
asg193
g2211
sbsg48
g1
(g49
g3
NtRp2279
(dp2280
g52
(I00
I00
tp2281
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p2282
(dp2283
bsg187
(lp2284
g2232
asg193
g1
(g2124
g3
NtRp2285
(dp2286
g2127
g55
sg54
g202
sg197
g198
sg384
g436
sg2128
Nsbsbsg48
g1
(g49
g3
NtRp2287
(dp2288
g52
(tsg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p2289
(dp2290
bsg187
(lp2291
g2152
asg193
g933
sbsg48
g1
(g49
g3
NtRp2292
(dp2293
g52
(tsg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p2294
(dp2295
bsg187
(lp2296
g2131
asg193
g1
(g381
g3
NtRp2297
(dp2298
g935
g936
sg384
g1
(ctheano.scalar.basic
Mul
p2299
g3
NtRp2300
(dp2301
g438
g439
sg197
g198
sg20
S'mul'
p2302
sbsg20
S'Elemwise{mul,no_inplace}'
p2303
sg197
g198
sg459
(dp2304
sg462
(S'multiply'
p2305
I2
I1
tp2306
sg463
(dp2307
sg465
I00
sg941
S"elementwise multiplication\n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Parameters\n    ----------\n    scalar_op\n        An instance of a subclass of scalar.ScalarOp which works uniquely\n        on scalars.\n    inplace_pattern\n        A dictionary that maps the index of an output to the\n        index of an input so the output is calculated inplace using\n        the input's storage. (Just like destroymap, but without the lists.)\n    nfunc_spec\n        Either None or a tuple of three elements,\n        (nfunc_name, nin, nout) such that getattr(numpy, nfunc_name)\n        implements this operation, takes nin inputs and nout outputs.\n        Note that nin cannot always be inferred from the scalar op's\n        own nin field because that value is sometimes 0 (meaning a\n        variable number of inputs), whereas the numpy function may\n        not have varargs.\n\n    Examples\n    --------\n    Elemwise(add) # represents + on tensors (x + y)\n    Elemwise(add, {0 : 0}) # represents the += operation (x += y)\n    Elemwise(add, {0 : 1}) # represents += on the second argument (y += x)\n    Elemwise(mul)(rand(10, 5), rand(1, 5)) # the second input is completed\n    # along the first dimension to match the first input\n    Elemwise(true_div)(rand(10, 5), rand(10, 1)) # same but along the\n    # second dimension\n    Elemwise(int_div)(rand(1, 5), rand(10, 1)) # the output has size (10, 5)\n    Elemwise(log)(rand(3, 4, 5))\n\n    "
p2308
sbsbsg48
g1
(g49
g3
NtRp2309
(dp2310
g52
(tsg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p2311
(dp2312
bsg187
(lp2313
g2097
asg193
g933
sbsg48
g1
(g49
g3
NtRp2314
(dp2315
g52
(tsg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag1
(g1008
g3
NtRp2316
(dp2317
g32
S'auto_856'
p2318
sg34
Nsg35
(itheano.gof.utils
scratchpad
p2319
(dp2320
g1014
Nsbsg20
Nsg2028
I01
sg48
g1
(g49
g3
NtRp2321
(dp2322
g52
(tsg54
S'float64'
p2323
sg56
g58
sg59
I00
sg20
Nsbsg1018
g71
(g72
(I0
tS'b'
tRp2324
(I1
(tg58
I00
S'\x00\x00\x00\x00\x00\x00\xf0?'
tbsbasg35
(itheano.gof.utils
scratchpad
p2325
(dp2326
bsg187
(lp2327
g2081
asg193
g1
(g381
g3
NtRp2328
(dp2329
g935
g936
sg384
g1
(ctheano.scalar.basic
Second
p2330
g3
NtRp2331
(dp2332
g438
g1
(g453
g3
NtRp2333
(dp2334
g456
(I1
tp2335
sbsg197
g198
sg20
S'second'
p2336
sbsg20
S'Elemwise{second,no_inplace}'
p2337
sg197
g198
sg459
(dp2338
sg462
Nsg463
(dp2339
sg465
I00
sg941
S"Create a matrix by filling the shape of a with b\n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Parameters\n    ----------\n    scalar_op\n        An instance of a subclass of scalar.ScalarOp which works uniquely\n        on scalars.\n    inplace_pattern\n        A dictionary that maps the index of an output to the\n        index of an input so the output is calculated inplace using\n        the input's storage. (Just like destroymap, but without the lists.)\n    nfunc_spec\n        Either None or a tuple of three elements,\n        (nfunc_name, nin, nout) such that getattr(numpy, nfunc_name)\n        implements this operation, takes nin inputs and nout outputs.\n        Note that nin cannot always be inferred from the scalar op's\n        own nin field because that value is sometimes 0 (meaning a\n        variable number of inputs), whereas the numpy function may\n        not have varargs.\n\n    Examples\n    --------\n    Elemwise(add) # represents + on tensors (x + y)\n    Elemwise(add, {0 : 0}) # represents the += operation (x += y)\n    Elemwise(add, {0 : 1}) # represents += on the second argument (y += x)\n    Elemwise(mul)(rand(10, 5), rand(1, 5)) # the second input is completed\n    # along the first dimension to match the first input\n    Elemwise(true_div)(rand(10, 5), rand(10, 1)) # same but along the\n    # second dimension\n    Elemwise(int_div)(rand(1, 5), rand(10, 1)) # the output has size (10, 5)\n    Elemwise(log)(rand(3, 4, 5))\n\n    "
p2340
sbsbsg48
g1
(g49
g3
NtRp2341
(dp2342
g52
(tsg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p2343
(dp2344
bsg187
(lp2345
g2063
asg193
g1
(g1178
g3
NtRp2346
(dp2347
g1181
(lp2348
sg252
(lp2349
sg250
(lp2350
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp2351
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp2352
(dp2353
g52
(I01
I01
tp2354
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p2355
(dp2356
bsg187
(lp2357
g1819
asg193
g1
(g381
g3
NtRp2358
(dp2359
g20
Nsg384
g2331
sg459
(dp2360
sg462
Nsg463
(dp2361
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp2362
(dp2363
g52
(I00
I00
tp2364
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag2011
asg35
(itheano.gof.utils
scratchpad
p2365
(dp2366
bsg187
(lp2367
g1801
asg193
g1
(g381
g3
NtRp2368
(dp2369
g20
Nsg384
g2300
sg459
(dp2370
sg462
g2306
sg463
(dp2371
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp2372
(dp2373
g52
(I00
I00
tp2374
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp2375
(dp2376
g32
S'auto_1846'
p2377
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2378
(dp2379
g38
(lp2380
(lp2381
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2382
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2383
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2384
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2385
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2386
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2387
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2388
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp2389
aasbsg20
Nsg47
g1
(g162
g3
NtRp2390
(dp2391
g15
(lp2392
g1849
ag1
(g29
g3
NtRp2393
(dp2394
g32
S'auto_1845'
p2395
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2396
(dp2397
g38
(lp2398
(lp2399
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2400
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2401
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2402
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2403
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2404
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2405
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2406
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp2407
aasbsg20
Nsg47
g1
(g162
g3
NtRp2408
(dp2409
g15
(lp2410
g2011
ag1
(g29
g3
NtRp2411
(dp2412
g32
S'auto_1844'
p2413
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2414
(dp2415
g38
(lp2416
(lp2417
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2418
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2419
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2420
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2421
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2422
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2423
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2424
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp2425
aasbsg20
Nsg47
g1
(g162
g3
NtRp2426
(dp2427
g15
(lp2428
g1
(g1008
g3
NtRp2429
(dp2430
g32
S'auto_906'
p2431
sg34
Nsg35
(itheano.gof.utils
scratchpad
p2432
(dp2433
g1014
Nsbsg20
Nsg2028
I01
sg48
g1
(g49
g3
NtRp2434
(dp2435
g52
(tsg54
S'int8'
p2436
sg56
g2032
sg59
I00
sg20
Nsbsg1018
g71
(g72
(I0
tS'b'
tRp2437
(I1
(tg2032
I00
S'\x01'
tbsbasg35
(itheano.gof.utils
scratchpad
p2438
(dp2439
bsg187
(lp2440
g2411
asg193
g1
(g1178
g3
NtRp2441
(dp2442
g1181
(lp2443
sg252
(lp2444
sg250
(lp2445
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp2446
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp2447
(dp2448
g52
(I01
I01
tp2449
sg54
g2436
sg56
g2032
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p2450
(dp2451
bsg187
(lp2452
g2393
asg193
g1
(g381
g3
NtRp2453
(dp2454
g20
Nsg384
g1999
sg459
(dp2455
sg462
g2005
sg463
(dp2456
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp2457
(dp2458
g52
(I01
I01
tp2459
sg54
S'int8'
p2460
sg56
g2032
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p2461
(dp2462
bsg187
(lp2463
g2375
asg193
g1
(g381
g3
NtRp2464
(dp2465
g20
Nsg384
g2052
sg459
(dp2466
sg462
g2057
sg463
(dp2467
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp2468
(dp2469
g52
(I00
I00
tp2470
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p2471
(dp2472
bsg187
(lp2473
g1783
asg193
g1
(g381
g3
NtRp2474
(dp2475
g20
Nsg384
g2300
sg459
(dp2476
sg462
g2306
sg463
(dp2477
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp2478
(dp2479
g52
(I00
I00
tp2480
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp2481
(dp2482
g32
S'auto_1851'
p2483
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2484
(dp2485
g38
(lp2486
(lp2487
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2488
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2489
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2490
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2491
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2492
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2493
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2494
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp2495
aasbsg20
Nsg47
g1
(g162
g3
NtRp2496
(dp2497
g15
(lp2498
g1
(g29
g3
NtRp2499
(dp2500
g32
S'auto_1848'
p2501
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2502
(dp2503
g38
(lp2504
(lp2505
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2506
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2507
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2508
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2509
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2510
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2511
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2512
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp2513
aasbsg20
Nsg47
g1
(g162
g3
NtRp2514
(dp2515
g15
(lp2516
g2429
asg35
(itheano.gof.utils
scratchpad
p2517
(dp2518
bsg187
(lp2519
g2499
asg193
g1
(g1178
g3
NtRp2520
(dp2521
g1181
(lp2522
sg252
(lp2523
sg250
(lp2524
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp2525
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp2526
(dp2527
g52
(I01
I01
tp2528
sg54
g2436
sg56
g2032
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp2529
(dp2530
g32
S'auto_1850'
p2531
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2532
(dp2533
g38
(lp2534
(lp2535
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2536
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2537
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2538
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2539
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2540
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2541
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2542
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp2543
aasbsg20
Nsg47
g1
(g162
g3
NtRp2544
(dp2545
g15
(lp2546
g1
(g29
g3
NtRp2547
(dp2548
g32
S'auto_1849'
p2549
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2550
(dp2551
g38
(lp2552
(lp2553
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2554
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2555
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2556
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2557
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2558
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2559
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2560
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp2561
aasbsg20
Nsg47
g1
(g162
g3
NtRp2562
(dp2563
g15
(lp2564
g1869
asg35
(itheano.gof.utils
scratchpad
p2565
(dp2566
bsg187
(lp2567
g2547
asg193
g1
(g381
g3
NtRp2568
(dp2569
g20
Nsg384
g445
sg459
(dp2570
sg462
g1001
sg463
(dp2571
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp2572
(dp2573
g52
(I00
I00
tp2574
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p2575
(dp2576
bsg187
(lp2577
g2529
asg193
g1
(g381
g3
NtRp2578
(dp2579
g20
Nsg384
g1
(ctheano.scalar.basic
Sqr
p2580
g3
NtRp2581
(dp2582
g438
g2216
sg197
g198
sg20
S'sqr'
p2583
sbsg459
(dp2584
sg462
(S'square'
p2585
I1
I1
tp2586
sg463
(dp2587
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp2588
(dp2589
g52
(I00
I00
tp2590
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p2591
(dp2592
bsg187
(lp2593
g2481
asg193
g1
(g381
g3
NtRp2594
(dp2595
g20
Nsg384
g1999
sg459
(dp2596
sg462
g2005
sg463
(dp2597
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp2598
(dp2599
g52
(I00
I00
tp2600
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p2601
(dp2602
bsg187
(lp2603
g1765
asg193
g1
(g381
g3
NtRp2604
(dp2605
g20
Nsg384
g2300
sg459
(dp2606
sg462
g2306
sg463
(dp2607
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp2608
(dp2609
g52
(I00
I00
tp2610
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp2611
(dp2612
g32
S'auto_1853'
p2613
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2614
(dp2615
g38
(lp2616
(lp2617
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2618
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2619
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2620
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2621
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2622
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2623
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2624
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp2625
aasbsg20
Nsg47
g1
(g162
g3
NtRp2626
(dp2627
g15
(lp2628
g1951
asg35
(itheano.gof.utils
scratchpad
p2629
(dp2630
bsg187
(lp2631
g2611
asg193
g1
(g1178
g3
NtRp2632
(dp2633
g1181
(lp2634
sg252
(lp2635
I1
aI0
asg250
(lp2636
sg254
g306
sg1185
I00
sg256
(I1
I0
tp2637
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp2638
(dp2639
g52
(I00
I00
tp2640
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p2641
(dp2642
bsg187
(lp2643
g1747
asg193
g482
sbsg48
g1
(g49
g3
NtRp2644
(dp2645
g52
(I00
I00
tp2646
sg54
S'float64'
p2647
sg56
g58
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp2648
(dp2649
g32
S'auto_1858'
p2650
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2651
(dp2652
g38
(lp2653
(lp2654
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2655
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2656
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2657
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2658
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2659
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2660
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2661
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp2662
aasbsg20
Nsg47
g1
(g162
g3
NtRp2663
(dp2664
g15
(lp2665
g1
(g29
g3
NtRp2666
(dp2667
g32
S'auto_1855'
p2668
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2669
(dp2670
g38
(lp2671
(lp2672
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2673
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2674
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2675
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2676
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2677
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2678
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2679
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp2680
aasbsg20
Nsg47
g1
(g162
g3
NtRp2681
(dp2682
g15
(lp2683
g2429
asg35
(itheano.gof.utils
scratchpad
p2684
(dp2685
bsg187
(lp2686
g2666
asg193
g1
(g1178
g3
NtRp2687
(dp2688
g1181
(lp2689
sg252
(lp2690
sg250
(lp2691
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp2692
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp2693
(dp2694
g52
(I01
I01
tp2695
sg54
g2436
sg56
g2032
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp2696
(dp2697
g32
S'auto_1857'
p2698
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2699
(dp2700
g38
(lp2701
(lp2702
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2703
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2704
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2705
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2706
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2707
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2708
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2709
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp2710
aasbsg20
Nsg47
g1
(g162
g3
NtRp2711
(dp2712
g15
(lp2713
g1
(g29
g3
NtRp2714
(dp2715
g32
S'auto_1856'
p2716
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2717
(dp2718
g38
(lp2719
(lp2720
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2721
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2722
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2723
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2724
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2725
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2726
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2727
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp2728
aasbsg20
Nsg47
g1
(g162
g3
NtRp2729
(dp2730
g15
(lp2731
g1893
asg35
(itheano.gof.utils
scratchpad
p2732
(dp2733
bsg187
(lp2734
g2714
asg193
g1
(g381
g3
NtRp2735
(dp2736
g20
Nsg384
g445
sg459
(dp2737
sg462
g1001
sg463
(dp2738
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp2739
(dp2740
g52
(I00
I00
tp2741
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p2742
(dp2743
bsg187
(lp2744
g2696
asg193
g1
(g381
g3
NtRp2745
(dp2746
g20
Nsg384
g2581
sg459
(dp2747
sg462
g2586
sg463
(dp2748
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp2749
(dp2750
g52
(I00
I00
tp2751
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p2752
(dp2753
bsg187
(lp2754
g2648
asg193
g1
(g381
g3
NtRp2755
(dp2756
g20
Nsg384
g1999
sg459
(dp2757
sg462
g2005
sg463
(dp2758
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp2759
(dp2760
g52
(I00
I00
tp2761
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p2762
(dp2763
bsg187
(lp2764
g1729
asg193
g1
(g381
g3
NtRp2765
(dp2766
g20
Nsg384
g2300
sg459
(dp2767
sg462
g2306
sg463
(dp2768
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp2769
(dp2770
g52
(I00
I00
tp2771
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p2772
(dp2773
bsg187
(lp2774
g1680
asg193
g482
sbsg48
g1
(g49
g3
NtRp2775
(dp2776
g52
(I00
I00
tp2777
sg54
S'float64'
p2778
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p2779
(dp2780
bsg187
(lp2781
g1664
asg193
g1
(g381
g3
NtRp2782
(dp2783
g935
S'tensor.basic'
p2784
sg20
Nsg384
g1
(ctheano.scalar.basic
Cast
p2785
g3
NtRp2786
(dp2787
g438
g1
(ctheano.scalar.basic
specific_out
p2788
g3
NtRp2789
(dp2790
S'spec'
p2791
(g403
tp2792
sbsg197
g198
sS'o_type'
p2793
g403
sg20
S'convert_to_float32'
p2794
sS'ctor'
p2795
cnumpy
float32
p2796
sbsg459
(dp2797
sg462
Nsg463
(dp2798
sS'__oplist_tags'
p2799
(lp2800
S'casting'
p2801
asg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp2802
(dp2803
g52
(I00
I00
tp2804
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p2805
(dp2806
bsg187
(lp2807
g1646
asg193
g1
(ctheano.sandbox.cuda.basic_ops
GpuFromHost
p2808
g3
NtRp2809
(dp2810
g197
g198
sbsbsg48
g1
(g77
g3
NtRp2811
(dp2812
g52
(I00
I00
tp2813
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p2814
(dp2815
bsg187
(lp2816
g1630
asg193
g1
(g194
g3
NtRp2817
(dp2818
g197
g198
sbsbsg48
g1
(g49
g3
NtRp2819
(dp2820
g52
(I00
I00
tp2821
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp2822
(dp2823
g32
S'auto_1872'
p2824
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2825
(dp2826
g38
(lp2827
(lp2828
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp2829
a(g44
I41
g45
S'g_W0 = T.grad(err, self.W0)'
tp2830
a(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp2831
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp2832
a(g1621
I1311
g1622
S'grad_dict[var] = reduce(lambda x, y: x + y, terms)'
tp2833
a(g1624
I1311
g1625
S'grad_dict[var] = reduce(lambda x, y: x + y, terms)'
tp2834
aasbsg20
Nsg47
g1
(g162
g3
NtRp2835
(dp2836
g15
(lp2837
g1
(g221
g3
NtRp2838
(dp2839
g32
S'auto_1871'
p2840
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2841
(dp2842
g38
(lp2843
(lp2844
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp2845
a(g44
I41
g45
S'g_W0 = T.grad(err, self.W0)'
tp2846
a(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp2847
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp2848
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2849
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp2850
aasbsg20
Nsg47
g1
(g162
g3
NtRp2851
(dp2852
g15
(lp2853
g1
(g29
g3
NtRp2854
(dp2855
g32
S'auto_1870'
p2856
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2857
(dp2858
g38
(lp2859
(lp2860
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp2861
a(g44
I41
g45
S'g_W0 = T.grad(err, self.W0)'
tp2862
a(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp2863
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp2864
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2865
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2866
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2867
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp2868
aasbsg20
Nsg47
g1
(g162
g3
NtRp2869
(dp2870
g15
(lp2871
g1
(g29
g3
NtRp2872
(dp2873
g32
S'auto_1868'
p2874
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2875
(dp2876
g38
(lp2877
(lp2878
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp2879
a(g44
I41
g45
S'g_W0 = T.grad(err, self.W0)'
tp2880
a(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp2881
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp2882
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2883
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2884
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2885
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp2886
aasbsg20
Nsg47
g1
(g162
g3
NtRp2887
(dp2888
g15
(lp2889
g1
(g29
g3
NtRp2890
(dp2891
g32
S'auto_1867'
p2892
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2893
(dp2894
g38
(lp2895
(lp2896
(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp2897
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp2898
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2899
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2900
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2901
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2902
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2903
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp2904
aasbsg20
Nsg47
g1
(g162
g3
NtRp2905
(dp2906
g15
(lp2907
g2176
ag1
(g29
g3
NtRp2908
(dp2909
g32
S'auto_1866'
p2910
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2911
(dp2912
g38
(lp2913
(lp2914
(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp2915
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp2916
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2917
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2918
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2919
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2920
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2921
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp2922
aasbsg20
Nsg47
g1
(g162
g3
NtRp2923
(dp2924
g15
(lp2925
g1
(g29
g3
NtRp2926
(dp2927
g32
S'auto_1865'
p2928
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2929
(dp2930
g38
(lp2931
(lp2932
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2933
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2934
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2935
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2936
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2937
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2938
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2939
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp2940
aasbsg20
Nsg47
g1
(g162
g3
NtRp2941
(dp2942
g15
(lp2943
g1
(g29
g3
NtRp2944
(dp2945
g32
S'auto_1864'
p2946
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p2947
(dp2948
g38
(lp2949
(lp2950
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2951
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2952
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2953
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2954
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2955
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp2956
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp2957
a(g1658
I1065
g1659
S'new_output_grads.append(og.astype(o_dt))'
tp2958
aasbsg20
Nsg47
g1
(g162
g3
NtRp2959
(dp2960
g15
(lp2961
g2081
asg35
(itheano.gof.utils
scratchpad
p2962
(dp2963
bsg187
(lp2964
g2944
asg193
g2782
sbsg48
g1
(g49
g3
NtRp2965
(dp2966
g52
(tsg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbag2143
asg35
(itheano.gof.utils
scratchpad
p2967
(dp2968
bsg187
(lp2969
g2926
asg193
g1
(g381
g3
NtRp2970
(dp2971
g20
Nsg384
g2300
sg459
(dp2972
sg462
g2306
sg463
(dp2973
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp2974
(dp2975
g52
(tsg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p2976
(dp2977
bsg187
(lp2978
g2908
asg193
g1
(g1178
g3
NtRp2979
(dp2980
g1181
(lp2981
sg252
(lp2982
sg250
(lp2983
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp2984
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp2985
(dp2986
g52
(I01
I01
tp2987
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p2988
(dp2989
bsg187
(lp2990
g2890
asg193
g1
(g381
g3
NtRp2991
(dp2992
g20
Nsg384
g2331
sg459
(dp2993
sg462
Nsg463
(dp2994
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp2995
(dp2996
g52
(I00
I00
tp2997
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbag2188
asg35
(itheano.gof.utils
scratchpad
p2998
(dp2999
bsg187
(lp3000
g2872
asg193
g1
(g381
g3
NtRp3001
(dp3002
g20
Nsg384
g2300
sg459
(dp3003
sg462
g2306
sg463
(dp3004
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp3005
(dp3006
g52
(I00
I00
tp3007
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp3008
(dp3009
g32
S'auto_1869'
p3010
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3011
(dp3012
g38
(lp3013
(lp3014
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp3015
a(g44
I41
g45
S'g_W0 = T.grad(err, self.W0)'
tp3016
a(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp3017
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp3018
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3019
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3020
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3021
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp3022
aasbsg20
Nsg47
g1
(g162
g3
NtRp3023
(dp3024
g15
(lp3025
g2188
asg35
(itheano.gof.utils
scratchpad
p3026
(dp3027
bsg187
(lp3028
g3008
asg193
g1
(g381
g3
NtRp3029
(dp3030
g20
Nsg384
g2214
sg459
(dp3031
sg462
g2219
sg463
(dp3032
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp3033
(dp3034
g52
(I00
I00
tp3035
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p3036
(dp3037
bsg187
(lp3038
g2854
asg193
g1
(g381
g3
NtRp3039
(dp3040
g20
Nsg384
g1
(ctheano.scalar.basic
TrueDiv
p3041
g3
NtRp3042
(dp3043
g438
g439
sg197
g198
sg20
S'true_div'
p3044
sbsg459
(dp3045
sg462
(S'true_divide'
p3046
I2
I1
tp3047
sg463
(dp3048
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp3049
(dp3050
g52
(I00
I00
tp3051
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p3052
(dp3053
bsg187
(lp3054
g2838
asg193
g2809
sbsg48
g1
(g77
g3
NtRp3055
(dp3056
g52
(I00
I00
tp3057
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p3058
(dp3059
bsg187
(lp3060
g2822
asg193
g1
(g194
g3
NtRp3061
(dp3062
g197
g198
sbsbsg48
g1
(g49
g3
NtRp3063
(dp3064
g52
(I00
I00
tp3065
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p3066
(dp3067
bsg187
(lp3068
g1606
asg193
g933
sbsg48
g1
(g49
g3
NtRp3069
(dp3070
g52
(I00
I00
tp3071
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p3072
(dp3073
bsg187
(lp3074
g1561
asg193
g2297
sbsg48
g1
(g49
g3
NtRp3075
(dp3076
g52
(I00
I00
tp3077
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p3078
(dp3079
bsg187
(lp3080
g1529
asg193
g1996
sbsg48
g1
(g49
g3
NtRp3081
(dp3082
g52
(I00
I00
tp3083
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p3084
(dp3085
bsg187
(lp3086
g1517
asg193
g1
(g2808
g3
NtRp3087
(dp3088
g197
g198
sbsbsg48
g1
(g77
g3
NtRp3089
(dp3090
g52
(I00
I00
tp3091
sg20
Nsbsbsg23
g66
sg24
I01
sg25
I00
sg26
I01
sg27
I01
sg28
g82
sg60
I01
sg61
Nsbag1
(g17
g3
NtRp3092
(dp3093
g20
g95
sg22
g1
(g221
g3
NtRp3094
(dp3095
g32
S'auto_1941'
p3096
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3097
(dp3098
g38
(lp3099
(lp3100
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp3101
a(g44
I49
g45
S'(self.b1, self.b1-learning_rate*g_b1),'
tp3102
aasbsg20
Nsg47
g1
(g162
g3
NtRp3103
(dp3104
g15
(lp3105
g1
(g29
g3
NtRp3106
(dp3107
g32
S'auto_1940'
p3108
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3109
(dp3110
g38
(lp3111
(lp3112
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp3113
a(g44
I48
g45
S'(self.b0, self.b0-learning_rate*g_b0),'
tp3114
aasbsg20
Nsg47
g1
(g162
g3
NtRp3115
(dp3116
g15
(lp3117
g1
(g29
g3
NtRp3118
(dp3119
g32
S'auto_1910'
p3120
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3121
(dp3122
g38
(lp3123
(lp3124
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp3125
a(g44
I48
g45
S'(self.b0, self.b0-learning_rate*g_b0),'
tp3126
aasbsg20
Nsg47
g1
(g162
g3
NtRp3127
(dp3128
g15
(lp3129
g104
asg35
(itheano.gof.utils
scratchpad
p3130
(dp3131
bsg187
(lp3132
g3118
asg193
g1
(g194
g3
NtRp3133
(dp3134
g197
g198
sbsbsg48
g1
(g49
g3
NtRp3135
(dp3136
g52
(I00
tp3137
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp3138
(dp3139
g32
S'auto_1939'
p3140
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3141
(dp3142
g38
(lp3143
(lp3144
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp3145
a(g44
I48
g45
S'(self.b0, self.b0-learning_rate*g_b0),'
tp3146
aasbsg20
Nsg47
g1
(g162
g3
NtRp3147
(dp3148
g15
(lp3149
g1
(g29
g3
NtRp3150
(dp3151
g32
S'auto_1911'
p3152
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3153
(dp3154
g38
(lp3155
(lp3156
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp3157
a(g44
I48
g45
S'(self.b0, self.b0-learning_rate*g_b0),'
tp3158
aasbsg20
Nsg47
g1
(g162
g3
NtRp3159
(dp3160
g15
(lp3161
g1
(g1008
g3
NtRp3162
(dp3163
g32
S'auto_1784'
p3164
sg34
Nsg35
(itheano.gof.utils
scratchpad
p3165
(dp3166
g1014
Nsbsg20
Nsg48
g1
(g49
g3
NtRp3167
(dp3168
g52
(tsg54
S'float32'
p3169
sg56
g74
sg59
I00
sg20
Nsbsg1018
g71
(g72
(I0
tS'b'
tRp3170
(I1
(tg74
I00
S'\x00\x00\x80>'
tbsbasg35
(itheano.gof.utils
scratchpad
p3171
(dp3172
bsg187
(lp3173
g3150
asg193
g1
(g1178
g3
NtRp3174
(dp3175
g1181
(lp3176
sg252
(lp3177
sg250
(lp3178
I0
asg254
(tsg1185
I00
sg256
(S'x'
tp3179
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp3180
(dp3181
g52
(I01
tp3182
sg54
g3169
sg56
g74
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp3183
(dp3184
g32
S'auto_1938'
p3185
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3186
(dp3187
g38
(lp3188
(lp3189
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp3190
a(g44
I48
g45
S'(self.b0, self.b0-learning_rate*g_b0),'
tp3191
aasbsg20
Nsg47
g1
(g162
g3
NtRp3192
(dp3193
g15
(lp3194
g1
(g221
g3
NtRp3195
(dp3196
g32
S'auto_1937'
p3197
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3198
(dp3199
g38
(lp3200
(lp3201
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp3202
a(g44
I43
g45
S'g_b0 = T.grad(err, self.b0)'
tp3203
a(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp3204
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp3205
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3206
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp3207
aasbsg20
Nsg47
g1
(g162
g3
NtRp3208
(dp3209
g15
(lp3210
g1
(g29
g3
NtRp3211
(dp3212
g32
S'auto_1936'
p3213
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3214
(dp3215
g38
(lp3216
(lp3217
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp3218
a(g44
I43
g45
S'g_b0 = T.grad(err, self.b0)'
tp3219
a(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp3220
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp3221
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3222
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3223
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3224
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp3225
aasbsg20
Nsg47
g1
(g162
g3
NtRp3226
(dp3227
g15
(lp3228
g1
(g29
g3
NtRp3229
(dp3230
g32
S'auto_1935'
p3231
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3232
(dp3233
g38
(lp3234
(lp3235
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp3236
a(g44
I43
g45
S'g_b0 = T.grad(err, self.b0)'
tp3237
a(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp3238
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp3239
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3240
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3241
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3242
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp3243
aasbsg20
Nsg47
g1
(g162
g3
NtRp3244
(dp3245
g15
(lp3246
g1
(g29
g3
NtRp3247
(dp3248
g32
S'auto_1934'
p3249
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3250
(dp3251
g38
(lp3252
(lp3253
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp3254
a(g44
I43
g45
S'g_b0 = T.grad(err, self.b0)'
tp3255
a(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp3256
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp3257
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3258
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3259
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3260
a(g1658
I1065
g1659
S'new_output_grads.append(og.astype(o_dt))'
tp3261
aasbsg20
Nsg47
g1
(g162
g3
NtRp3262
(dp3263
g15
(lp3264
g1
(g29
g3
NtRp3265
(dp3266
g32
S'auto_1933'
p3267
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3268
(dp3269
g38
(lp3270
(lp3271
(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp3272
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp3273
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3274
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3275
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3276
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3277
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3278
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp3279
aasbsg20
Nsg47
g1
(g162
g3
NtRp3280
(dp3281
g15
(lp3282
g1
(g29
g3
NtRp3283
(dp3284
g32
S'auto_1932'
p3285
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3286
(dp3287
g38
(lp3288
(lp3289
(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp3290
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp3291
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3292
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3293
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3294
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3295
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3296
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp3297
aasbsg20
Nsg47
g1
(g162
g3
NtRp3298
(dp3299
g15
(lp3300
g1
(g29
g3
NtRp3301
(dp3302
g32
S'auto_1931'
p3303
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3304
(dp3305
g38
(lp3306
(lp3307
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3308
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3309
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3310
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3311
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3312
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3313
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3314
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp3315
aasbsg20
Nsg47
g1
(g162
g3
NtRp3316
(dp3317
g15
(lp3318
g1
(g29
g3
NtRp3319
(dp3320
g32
S'auto_1926'
p3321
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3322
(dp3323
g38
(lp3324
(lp3325
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3326
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3327
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3328
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3329
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3330
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3331
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3332
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp3333
aasbsg20
Nsg47
g1
(g162
g3
NtRp3334
(dp3335
g15
(lp3336
g1
(g29
g3
NtRp3337
(dp3338
g32
S'auto_1924'
p3339
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3340
(dp3341
g38
(lp3342
(lp3343
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3344
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3345
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3346
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3347
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3348
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3349
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3350
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp3351
aasbsg20
Nsg47
g1
(g162
g3
NtRp3352
(dp3353
g15
(lp3354
g1
(g29
g3
NtRp3355
(dp3356
g32
S'auto_1919'
p3357
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3358
(dp3359
g38
(lp3360
(lp3361
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3362
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3363
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3364
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3365
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3366
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3367
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3368
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp3369
aasbsg20
Nsg47
g1
(g162
g3
NtRp3370
(dp3371
g15
(lp3372
g1
(g29
g3
NtRp3373
(dp3374
g32
S'auto_1915'
p3375
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3376
(dp3377
g38
(lp3378
(lp3379
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3380
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3381
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3382
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3383
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3384
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3385
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3386
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp3387
aasbsg20
Nsg47
g1
(g162
g3
NtRp3388
(dp3389
g15
(lp3390
g1
(g29
g3
NtRp3391
(dp3392
g32
S'auto_1914'
p3393
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3394
(dp3395
g38
(lp3396
(lp3397
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3398
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3399
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3400
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3401
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3402
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3403
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3404
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp3405
aasbsg20
Nsg47
g1
(g162
g3
NtRp3406
(dp3407
g15
(lp3408
g1837
ag1
(g29
g3
NtRp3409
(dp3410
g32
S'auto_1913'
p3411
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3412
(dp3413
g38
(lp3414
(lp3415
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3416
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3417
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3418
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3419
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3420
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3421
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3422
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp3423
aasbsg20
Nsg47
g1
(g162
g3
NtRp3424
(dp3425
g15
(lp3426
g1
(g29
g3
NtRp3427
(dp3428
g32
S'auto_1912'
p3429
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3430
(dp3431
g38
(lp3432
(lp3433
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp3434
a(g44
I43
g45
S'g_b0 = T.grad(err, self.b0)'
tp3435
a(g1615
I473
g1616
S'g_cost = _float_ones_like(cost)'
tp3436
a(g2091
I1345
g2092
S'rval = tensor.ones_like(x)'
tp3437
aasbsg20
Nsg47
g1
(g162
g3
NtRp3438
(dp3439
g15
(lp3440
g2097
ag2316
asg35
(itheano.gof.utils
scratchpad
p3441
(dp3442
bsg187
(lp3443
g3427
asg193
g2328
sbsg48
g1
(g49
g3
NtRp3444
(dp3445
g52
(tsg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p3446
(dp3447
bsg187
(lp3448
g3409
asg193
g1
(g1178
g3
NtRp3449
(dp3450
g1181
(lp3451
sg252
(lp3452
sg250
(lp3453
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp3454
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp3455
(dp3456
g52
(I01
I01
tp3457
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p3458
(dp3459
bsg187
(lp3460
g3391
asg193
g1
(g381
g3
NtRp3461
(dp3462
g20
Nsg384
g2331
sg459
(dp3463
sg462
Nsg463
(dp3464
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp3465
(dp3466
g52
(I00
I00
tp3467
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag2011
asg35
(itheano.gof.utils
scratchpad
p3468
(dp3469
bsg187
(lp3470
g3373
asg193
g1
(g381
g3
NtRp3471
(dp3472
g20
Nsg384
g2300
sg459
(dp3473
sg462
g2306
sg463
(dp3474
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp3475
(dp3476
g52
(I00
I00
tp3477
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp3478
(dp3479
g32
S'auto_1918'
p3480
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3481
(dp3482
g38
(lp3483
(lp3484
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3485
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3486
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3487
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3488
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3489
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3490
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3491
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp3492
aasbsg20
Nsg47
g1
(g162
g3
NtRp3493
(dp3494
g15
(lp3495
g1849
ag1
(g29
g3
NtRp3496
(dp3497
g32
S'auto_1917'
p3498
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3499
(dp3500
g38
(lp3501
(lp3502
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3503
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3504
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3505
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3506
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3507
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3508
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3509
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp3510
aasbsg20
Nsg47
g1
(g162
g3
NtRp3511
(dp3512
g15
(lp3513
g2011
ag1
(g29
g3
NtRp3514
(dp3515
g32
S'auto_1916'
p3516
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3517
(dp3518
g38
(lp3519
(lp3520
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3521
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3522
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3523
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3524
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3525
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3526
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3527
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp3528
aasbsg20
Nsg47
g1
(g162
g3
NtRp3529
(dp3530
g15
(lp3531
g2429
asg35
(itheano.gof.utils
scratchpad
p3532
(dp3533
bsg187
(lp3534
g3514
asg193
g1
(g1178
g3
NtRp3535
(dp3536
g1181
(lp3537
sg252
(lp3538
sg250
(lp3539
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp3540
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp3541
(dp3542
g52
(I01
I01
tp3543
sg54
g2436
sg56
g2032
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p3544
(dp3545
bsg187
(lp3546
g3496
asg193
g1
(g381
g3
NtRp3547
(dp3548
g20
Nsg384
g1999
sg459
(dp3549
sg462
g2005
sg463
(dp3550
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp3551
(dp3552
g52
(I01
I01
tp3553
sg54
g2460
sg56
g2032
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p3554
(dp3555
bsg187
(lp3556
g3478
asg193
g1
(g381
g3
NtRp3557
(dp3558
g20
Nsg384
g2052
sg459
(dp3559
sg462
g2057
sg463
(dp3560
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp3561
(dp3562
g52
(I00
I00
tp3563
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p3564
(dp3565
bsg187
(lp3566
g3355
asg193
g1
(g381
g3
NtRp3567
(dp3568
g20
Nsg384
g2300
sg459
(dp3569
sg462
g2306
sg463
(dp3570
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp3571
(dp3572
g52
(I00
I00
tp3573
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp3574
(dp3575
g32
S'auto_1923'
p3576
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3577
(dp3578
g38
(lp3579
(lp3580
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3581
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3582
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3583
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3584
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3585
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3586
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3587
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp3588
aasbsg20
Nsg47
g1
(g162
g3
NtRp3589
(dp3590
g15
(lp3591
g1
(g29
g3
NtRp3592
(dp3593
g32
S'auto_1920'
p3594
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3595
(dp3596
g38
(lp3597
(lp3598
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3599
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3600
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3601
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3602
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3603
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3604
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3605
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp3606
aasbsg20
Nsg47
g1
(g162
g3
NtRp3607
(dp3608
g15
(lp3609
g2429
asg35
(itheano.gof.utils
scratchpad
p3610
(dp3611
bsg187
(lp3612
g3592
asg193
g1
(g1178
g3
NtRp3613
(dp3614
g1181
(lp3615
sg252
(lp3616
sg250
(lp3617
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp3618
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp3619
(dp3620
g52
(I01
I01
tp3621
sg54
g2436
sg56
g2032
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp3622
(dp3623
g32
S'auto_1922'
p3624
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3625
(dp3626
g38
(lp3627
(lp3628
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3629
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3630
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3631
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3632
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3633
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3634
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3635
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp3636
aasbsg20
Nsg47
g1
(g162
g3
NtRp3637
(dp3638
g15
(lp3639
g1
(g29
g3
NtRp3640
(dp3641
g32
S'auto_1921'
p3642
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3643
(dp3644
g38
(lp3645
(lp3646
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3647
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3648
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3649
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3650
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3651
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3652
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3653
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp3654
aasbsg20
Nsg47
g1
(g162
g3
NtRp3655
(dp3656
g15
(lp3657
g1869
asg35
(itheano.gof.utils
scratchpad
p3658
(dp3659
bsg187
(lp3660
g3640
asg193
g1
(g381
g3
NtRp3661
(dp3662
g20
Nsg384
g445
sg459
(dp3663
sg462
g1001
sg463
(dp3664
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp3665
(dp3666
g52
(I00
I00
tp3667
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p3668
(dp3669
bsg187
(lp3670
g3622
asg193
g1
(g381
g3
NtRp3671
(dp3672
g20
Nsg384
g2581
sg459
(dp3673
sg462
g2586
sg463
(dp3674
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp3675
(dp3676
g52
(I00
I00
tp3677
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p3678
(dp3679
bsg187
(lp3680
g3574
asg193
g1
(g381
g3
NtRp3681
(dp3682
g20
Nsg384
g1999
sg459
(dp3683
sg462
g2005
sg463
(dp3684
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp3685
(dp3686
g52
(I00
I00
tp3687
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p3688
(dp3689
bsg187
(lp3690
g3337
asg193
g1
(g381
g3
NtRp3691
(dp3692
g20
Nsg384
g2300
sg459
(dp3693
sg462
g2306
sg463
(dp3694
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp3695
(dp3696
g52
(I00
I00
tp3697
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp3698
(dp3699
g32
S'auto_1925'
p3700
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3701
(dp3702
g38
(lp3703
(lp3704
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3705
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3706
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3707
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3708
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3709
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3710
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3711
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp3712
aasbsg20
Nsg47
g1
(g162
g3
NtRp3713
(dp3714
g15
(lp3715
g1951
asg35
(itheano.gof.utils
scratchpad
p3716
(dp3717
bsg187
(lp3718
g3698
asg193
g1
(g1178
g3
NtRp3719
(dp3720
g1181
(lp3721
sg252
(lp3722
I1
aI0
asg250
(lp3723
sg254
g306
sg1185
I00
sg256
(I1
I0
tp3724
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp3725
(dp3726
g52
(I00
I00
tp3727
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p3728
(dp3729
bsg187
(lp3730
g3319
asg193
g482
sbsg48
g1
(g49
g3
NtRp3731
(dp3732
g52
(I00
I00
tp3733
sg54
S'float64'
p3734
sg56
g58
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp3735
(dp3736
g32
S'auto_1930'
p3737
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3738
(dp3739
g38
(lp3740
(lp3741
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3742
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3743
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3744
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3745
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3746
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3747
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3748
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp3749
aasbsg20
Nsg47
g1
(g162
g3
NtRp3750
(dp3751
g15
(lp3752
g1
(g29
g3
NtRp3753
(dp3754
g32
S'auto_1927'
p3755
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3756
(dp3757
g38
(lp3758
(lp3759
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3760
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3761
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3762
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3763
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3764
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3765
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3766
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp3767
aasbsg20
Nsg47
g1
(g162
g3
NtRp3768
(dp3769
g15
(lp3770
g2429
asg35
(itheano.gof.utils
scratchpad
p3771
(dp3772
bsg187
(lp3773
g3753
asg193
g1
(g1178
g3
NtRp3774
(dp3775
g1181
(lp3776
sg252
(lp3777
sg250
(lp3778
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp3779
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp3780
(dp3781
g52
(I01
I01
tp3782
sg54
g2436
sg56
g2032
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp3783
(dp3784
g32
S'auto_1929'
p3785
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3786
(dp3787
g38
(lp3788
(lp3789
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3790
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3791
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3792
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3793
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3794
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3795
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3796
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp3797
aasbsg20
Nsg47
g1
(g162
g3
NtRp3798
(dp3799
g15
(lp3800
g1
(g29
g3
NtRp3801
(dp3802
g32
S'auto_1928'
p3803
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3804
(dp3805
g38
(lp3806
(lp3807
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3808
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3809
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3810
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3811
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3812
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp3813
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp3814
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp3815
aasbsg20
Nsg47
g1
(g162
g3
NtRp3816
(dp3817
g15
(lp3818
g1893
asg35
(itheano.gof.utils
scratchpad
p3819
(dp3820
bsg187
(lp3821
g3801
asg193
g1
(g381
g3
NtRp3822
(dp3823
g20
Nsg384
g445
sg459
(dp3824
sg462
g1001
sg463
(dp3825
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp3826
(dp3827
g52
(I00
I00
tp3828
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p3829
(dp3830
bsg187
(lp3831
g3783
asg193
g1
(g381
g3
NtRp3832
(dp3833
g20
Nsg384
g2581
sg459
(dp3834
sg462
g2586
sg463
(dp3835
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp3836
(dp3837
g52
(I00
I00
tp3838
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p3839
(dp3840
bsg187
(lp3841
g3735
asg193
g1
(g381
g3
NtRp3842
(dp3843
g20
Nsg384
g1999
sg459
(dp3844
sg462
g2005
sg463
(dp3845
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp3846
(dp3847
g52
(I00
I00
tp3848
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p3849
(dp3850
bsg187
(lp3851
g3301
asg193
g1
(g381
g3
NtRp3852
(dp3853
g20
Nsg384
g2300
sg459
(dp3854
sg462
g2306
sg463
(dp3855
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp3856
(dp3857
g52
(I00
I00
tp3858
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p3859
(dp3860
bsg187
(lp3861
g3283
asg193
g1
(g2124
g3
NtRp3862
(dp3863
g2127
g55
sg54
g55
sg197
g198
sg384
g436
sg2128
(I0
tp3864
sbsbsg48
g1
(g49
g3
NtRp3865
(dp3866
g52
(I00
tp3867
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p3868
(dp3869
bsg187
(lp3870
g3265
asg193
g1
(g1178
g3
NtRp3871
(dp3872
g1181
(lp3873
sg252
(lp3874
I0
asg250
(lp3875
I0
asg254
(I00
tp3876
sg1185
I00
sg256
(S'x'
I0
tp3877
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp3878
(dp3879
g52
(I01
I00
tp3880
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p3881
(dp3882
bsg187
(lp3883
g3247
asg193
g2782
sbsg48
g1
(g49
g3
NtRp3884
(dp3885
g52
(I01
I00
tp3886
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p3887
(dp3888
bsg187
(lp3889
g3229
asg193
g1
(g381
g3
NtRp3890
(dp3891
g20
Nsg384
g1
(ctheano.scalar.basic
Identity
p3892
g3
NtRp3893
(dp3894
g438
g2216
sg197
g198
sg20
S'identity'
p3895
sbsg459
(dp3896
sg462
Nsg463
(dp3897
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp3898
(dp3899
g52
(I01
I00
tp3900
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p3901
(dp3902
bsg187
(lp3903
g3211
asg193
g1
(g1178
g3
NtRp3904
(dp3905
g1181
(lp3906
I0
asg252
(lp3907
I1
asg250
(lp3908
sg254
g3886
sg1185
I00
sg256
(I1
tp3909
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp3910
(dp3911
g52
(I00
tp3912
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p3913
(dp3914
bsg187
(lp3915
g3195
asg193
g2809
sbsg48
g1
(g77
g3
NtRp3916
(dp3917
g52
(I00
tp3918
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p3919
(dp3920
bsg187
(lp3921
g3183
asg193
g1
(g194
g3
NtRp3922
(dp3923
g197
g198
sbsbsg48
g1
(g49
g3
NtRp3924
(dp3925
g52
(I00
tp3926
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p3927
(dp3928
bsg187
(lp3929
g3138
asg193
g2297
sbsg48
g1
(g49
g3
NtRp3930
(dp3931
g52
(I00
tp3932
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p3933
(dp3934
bsg187
(lp3935
g3106
asg193
g1996
sbsg48
g1
(g49
g3
NtRp3936
(dp3937
g52
(I00
tp3938
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p3939
(dp3940
bsg187
(lp3941
g3094
asg193
g1
(g2808
g3
NtRp3942
(dp3943
g197
g198
sbsbsg48
g1
(g77
g3
NtRp3944
(dp3945
g52
(I00
tp3946
sg20
Nsbsbsg23
g96
sg24
I01
sg25
I00
sg26
I01
sg27
I01
sg28
g104
sg60
I01
sg61
Nsbag1
(g17
g3
NtRp3947
(dp3948
g20
g115
sg22
g1
(g221
g3
NtRp3949
(dp3950
g32
S'auto_1909'
p3951
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3952
(dp3953
g38
(lp3954
(lp3955
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp3956
a(g44
I49
g45
S'(self.b1, self.b1-learning_rate*g_b1),'
tp3957
aasbsg20
Nsg47
g1
(g162
g3
NtRp3958
(dp3959
g15
(lp3960
g1
(g29
g3
NtRp3961
(dp3962
g32
S'auto_1908'
p3963
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3964
(dp3965
g38
(lp3966
(lp3967
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp3968
a(g44
I47
g45
S'(self.W1, self.W1-learning_rate*g_W1),'
tp3969
aasbsg20
Nsg47
g1
(g162
g3
NtRp3970
(dp3971
g15
(lp3972
g1
(g29
g3
NtRp3973
(dp3974
g32
S'auto_1877'
p3975
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3976
(dp3977
g38
(lp3978
(lp3979
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp3980
a(g44
I47
g45
S'(self.W1, self.W1-learning_rate*g_W1),'
tp3981
aasbsg20
Nsg47
g1
(g162
g3
NtRp3982
(dp3983
g15
(lp3984
g124
asg35
(itheano.gof.utils
scratchpad
p3985
(dp3986
bsg187
(lp3987
g3973
asg193
g1
(g194
g3
NtRp3988
(dp3989
g197
g198
sbsbsg48
g1
(g49
g3
NtRp3990
(dp3991
g52
(I00
I00
tp3992
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp3993
(dp3994
g32
S'auto_1907'
p3995
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p3996
(dp3997
g38
(lp3998
(lp3999
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp4000
a(g44
I47
g45
S'(self.W1, self.W1-learning_rate*g_W1),'
tp4001
aasbsg20
Nsg47
g1
(g162
g3
NtRp4002
(dp4003
g15
(lp4004
g1
(g29
g3
NtRp4005
(dp4006
g32
S'auto_1878'
p4007
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4008
(dp4009
g38
(lp4010
(lp4011
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp4012
a(g44
I47
g45
S'(self.W1, self.W1-learning_rate*g_W1),'
tp4013
aasbsg20
Nsg47
g1
(g162
g3
NtRp4014
(dp4015
g15
(lp4016
g1
(g1008
g3
NtRp4017
(dp4018
g32
S'auto_1773'
p4019
sg34
Nsg35
(itheano.gof.utils
scratchpad
p4020
(dp4021
g1014
Nsbsg20
Nsg48
g1
(g49
g3
NtRp4022
(dp4023
g52
(tsg54
S'float32'
p4024
sg56
g74
sg59
I00
sg20
Nsbsg1018
g71
(g72
(I0
tS'b'
tRp4025
(I1
(tg74
I00
S'\x00\x00\x80>'
tbsbasg35
(itheano.gof.utils
scratchpad
p4026
(dp4027
bsg187
(lp4028
g4005
asg193
g1
(g1178
g3
NtRp4029
(dp4030
g1181
(lp4031
sg252
(lp4032
sg250
(lp4033
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp4034
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp4035
(dp4036
g52
(I01
I01
tp4037
sg54
g4024
sg56
g74
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp4038
(dp4039
g32
S'auto_1906'
p4040
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4041
(dp4042
g38
(lp4043
(lp4044
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp4045
a(g44
I42
g45
S'g_W1 = T.grad(err, self.W1)'
tp4046
a(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp4047
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp4048
a(g1621
I1311
g1622
S'grad_dict[var] = reduce(lambda x, y: x + y, terms)'
tp4049
a(g1624
I1311
g1625
S'grad_dict[var] = reduce(lambda x, y: x + y, terms)'
tp4050
aasbsg20
Nsg47
g1
(g162
g3
NtRp4051
(dp4052
g15
(lp4053
g1
(g29
g3
NtRp4054
(dp4055
g32
S'auto_1896'
p4056
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4057
(dp4058
g38
(lp4059
(lp4060
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp4061
a(g44
I42
g45
S'g_W1 = T.grad(err, self.W1)'
tp4062
a(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp4063
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp4064
a(g1621
I1311
g1622
S'grad_dict[var] = reduce(lambda x, y: x + y, terms)'
tp4065
a(g1624
I1311
g1625
S'grad_dict[var] = reduce(lambda x, y: x + y, terms)'
tp4066
aasbsg20
Nsg47
g1
(g162
g3
NtRp4067
(dp4068
g15
(lp4069
g1
(g221
g3
NtRp4070
(dp4071
g32
S'auto_1895'
p4072
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4073
(dp4074
g38
(lp4075
(lp4076
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp4077
a(g44
I42
g45
S'g_W1 = T.grad(err, self.W1)'
tp4078
a(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp4079
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp4080
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4081
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp4082
aasbsg20
Nsg47
g1
(g162
g3
NtRp4083
(dp4084
g15
(lp4085
g1
(g29
g3
NtRp4086
(dp4087
g32
S'auto_1894'
p4088
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4089
(dp4090
g38
(lp4091
(lp4092
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp4093
a(g44
I42
g45
S'g_W1 = T.grad(err, self.W1)'
tp4094
a(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp4095
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp4096
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4097
a(g1658
I1065
g1659
S'new_output_grads.append(og.astype(o_dt))'
tp4098
aasbsg20
Nsg47
g1
(g162
g3
NtRp4099
(dp4100
g15
(lp4101
g1
(g29
g3
NtRp4102
(dp4103
g32
S'auto_1893'
p4104
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4105
(dp4106
g38
(lp4107
(lp4108
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp4109
a(g44
I42
g45
S'g_W1 = T.grad(err, self.W1)'
tp4110
a(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp4111
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp4112
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4113
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4114
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4115
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp4116
aasbsg20
Nsg47
g1
(g162
g3
NtRp4117
(dp4118
g15
(lp4119
g1
(g29
g3
NtRp4120
(dp4121
g32
S'auto_1879'
p4122
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4123
(dp4124
g38
(lp4125
(lp4126
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp4127
a(g44
I42
g45
S'g_W1 = T.grad(err, self.W1)'
tp4128
a(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp4129
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp4130
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4131
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4132
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4133
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp4134
aasbsg20
Nsg47
g1
(g162
g3
NtRp4135
(dp4136
g15
(lp4137
g1885
asg35
(itheano.gof.utils
scratchpad
p4138
(dp4139
bsg187
(lp4140
g4120
asg193
g1
(g1178
g3
NtRp4141
(dp4142
g1181
(lp4143
sg252
(lp4144
I1
aI0
asg250
(lp4145
sg254
g1259
sg1185
I00
sg256
(I1
I0
tp4146
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp4147
(dp4148
g52
(I00
I00
tp4149
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp4150
(dp4151
g32
S'auto_1892'
p4152
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4153
(dp4154
g38
(lp4155
(lp4156
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4157
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4158
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4159
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4160
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4161
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4162
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4163
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp4164
aasbsg20
Nsg47
g1
(g162
g3
NtRp4165
(dp4166
g15
(lp4167
g1
(g29
g3
NtRp4168
(dp4169
g32
S'auto_1887'
p4170
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4171
(dp4172
g38
(lp4173
(lp4174
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4175
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4176
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4177
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4178
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4179
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4180
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4181
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp4182
aasbsg20
Nsg47
g1
(g162
g3
NtRp4183
(dp4184
g15
(lp4185
g1
(g29
g3
NtRp4186
(dp4187
g32
S'auto_1883'
p4188
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4189
(dp4190
g38
(lp4191
(lp4192
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4193
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4194
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4195
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4196
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4197
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4198
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4199
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp4200
aasbsg20
Nsg47
g1
(g162
g3
NtRp4201
(dp4202
g15
(lp4203
g1
(g29
g3
NtRp4204
(dp4205
g32
S'auto_1882'
p4206
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4207
(dp4208
g38
(lp4209
(lp4210
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4211
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4212
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4213
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4214
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4215
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4216
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4217
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp4218
aasbsg20
Nsg47
g1
(g162
g3
NtRp4219
(dp4220
g15
(lp4221
g1837
ag1
(g29
g3
NtRp4222
(dp4223
g32
S'auto_1881'
p4224
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4225
(dp4226
g38
(lp4227
(lp4228
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4229
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4230
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4231
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4232
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4233
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4234
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4235
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp4236
aasbsg20
Nsg47
g1
(g162
g3
NtRp4237
(dp4238
g15
(lp4239
g1
(g29
g3
NtRp4240
(dp4241
g32
S'auto_1880'
p4242
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4243
(dp4244
g38
(lp4245
(lp4246
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp4247
a(g44
I42
g45
S'g_W1 = T.grad(err, self.W1)'
tp4248
a(g1615
I473
g1616
S'g_cost = _float_ones_like(cost)'
tp4249
a(g2091
I1345
g2092
S'rval = tensor.ones_like(x)'
tp4250
aasbsg20
Nsg47
g1
(g162
g3
NtRp4251
(dp4252
g15
(lp4253
g2097
ag2316
asg35
(itheano.gof.utils
scratchpad
p4254
(dp4255
bsg187
(lp4256
g4240
asg193
g2328
sbsg48
g1
(g49
g3
NtRp4257
(dp4258
g52
(tsg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p4259
(dp4260
bsg187
(lp4261
g4222
asg193
g1
(g1178
g3
NtRp4262
(dp4263
g1181
(lp4264
sg252
(lp4265
sg250
(lp4266
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp4267
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp4268
(dp4269
g52
(I01
I01
tp4270
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p4271
(dp4272
bsg187
(lp4273
g4204
asg193
g1
(g381
g3
NtRp4274
(dp4275
g20
Nsg384
g2331
sg459
(dp4276
sg462
Nsg463
(dp4277
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp4278
(dp4279
g52
(I00
I00
tp4280
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag2011
asg35
(itheano.gof.utils
scratchpad
p4281
(dp4282
bsg187
(lp4283
g4186
asg193
g1
(g381
g3
NtRp4284
(dp4285
g20
Nsg384
g2300
sg459
(dp4286
sg462
g2306
sg463
(dp4287
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp4288
(dp4289
g52
(I00
I00
tp4290
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp4291
(dp4292
g32
S'auto_1886'
p4293
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4294
(dp4295
g38
(lp4296
(lp4297
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4298
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4299
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4300
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4301
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4302
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4303
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4304
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp4305
aasbsg20
Nsg47
g1
(g162
g3
NtRp4306
(dp4307
g15
(lp4308
g1849
ag1
(g29
g3
NtRp4309
(dp4310
g32
S'auto_1885'
p4311
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4312
(dp4313
g38
(lp4314
(lp4315
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4316
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4317
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4318
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4319
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4320
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4321
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4322
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp4323
aasbsg20
Nsg47
g1
(g162
g3
NtRp4324
(dp4325
g15
(lp4326
g2011
ag1
(g29
g3
NtRp4327
(dp4328
g32
S'auto_1884'
p4329
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4330
(dp4331
g38
(lp4332
(lp4333
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4334
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4335
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4336
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4337
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4338
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4339
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4340
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp4341
aasbsg20
Nsg47
g1
(g162
g3
NtRp4342
(dp4343
g15
(lp4344
g2429
asg35
(itheano.gof.utils
scratchpad
p4345
(dp4346
bsg187
(lp4347
g4327
asg193
g1
(g1178
g3
NtRp4348
(dp4349
g1181
(lp4350
sg252
(lp4351
sg250
(lp4352
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp4353
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp4354
(dp4355
g52
(I01
I01
tp4356
sg54
g2436
sg56
g2032
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p4357
(dp4358
bsg187
(lp4359
g4309
asg193
g1
(g381
g3
NtRp4360
(dp4361
g20
Nsg384
g1999
sg459
(dp4362
sg462
g2005
sg463
(dp4363
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp4364
(dp4365
g52
(I01
I01
tp4366
sg54
g2460
sg56
g2032
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p4367
(dp4368
bsg187
(lp4369
g4291
asg193
g1
(g381
g3
NtRp4370
(dp4371
g20
Nsg384
g2052
sg459
(dp4372
sg462
g2057
sg463
(dp4373
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp4374
(dp4375
g52
(I00
I00
tp4376
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p4377
(dp4378
bsg187
(lp4379
g4168
asg193
g1
(g381
g3
NtRp4380
(dp4381
g20
Nsg384
g2300
sg459
(dp4382
sg462
g2306
sg463
(dp4383
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp4384
(dp4385
g52
(I00
I00
tp4386
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp4387
(dp4388
g32
S'auto_1891'
p4389
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4390
(dp4391
g38
(lp4392
(lp4393
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4394
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4395
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4396
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4397
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4398
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4399
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4400
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp4401
aasbsg20
Nsg47
g1
(g162
g3
NtRp4402
(dp4403
g15
(lp4404
g1
(g29
g3
NtRp4405
(dp4406
g32
S'auto_1888'
p4407
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4408
(dp4409
g38
(lp4410
(lp4411
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4412
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4413
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4414
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4415
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4416
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4417
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4418
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp4419
aasbsg20
Nsg47
g1
(g162
g3
NtRp4420
(dp4421
g15
(lp4422
g2429
asg35
(itheano.gof.utils
scratchpad
p4423
(dp4424
bsg187
(lp4425
g4405
asg193
g1
(g1178
g3
NtRp4426
(dp4427
g1181
(lp4428
sg252
(lp4429
sg250
(lp4430
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp4431
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp4432
(dp4433
g52
(I01
I01
tp4434
sg54
g2436
sg56
g2032
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp4435
(dp4436
g32
S'auto_1890'
p4437
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4438
(dp4439
g38
(lp4440
(lp4441
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4442
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4443
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4444
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4445
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4446
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4447
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4448
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp4449
aasbsg20
Nsg47
g1
(g162
g3
NtRp4450
(dp4451
g15
(lp4452
g1
(g29
g3
NtRp4453
(dp4454
g32
S'auto_1889'
p4455
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4456
(dp4457
g38
(lp4458
(lp4459
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4460
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4461
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4462
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4463
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4464
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4465
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4466
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp4467
aasbsg20
Nsg47
g1
(g162
g3
NtRp4468
(dp4469
g15
(lp4470
g1869
asg35
(itheano.gof.utils
scratchpad
p4471
(dp4472
bsg187
(lp4473
g4453
asg193
g1
(g381
g3
NtRp4474
(dp4475
g20
Nsg384
g445
sg459
(dp4476
sg462
g1001
sg463
(dp4477
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp4478
(dp4479
g52
(I00
I00
tp4480
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p4481
(dp4482
bsg187
(lp4483
g4435
asg193
g1
(g381
g3
NtRp4484
(dp4485
g20
Nsg384
g2581
sg459
(dp4486
sg462
g2586
sg463
(dp4487
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp4488
(dp4489
g52
(I00
I00
tp4490
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p4491
(dp4492
bsg187
(lp4493
g4387
asg193
g1
(g381
g3
NtRp4494
(dp4495
g20
Nsg384
g1999
sg459
(dp4496
sg462
g2005
sg463
(dp4497
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp4498
(dp4499
g52
(I00
I00
tp4500
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p4501
(dp4502
bsg187
(lp4503
g4150
asg193
g1
(g381
g3
NtRp4504
(dp4505
g20
Nsg384
g2300
sg459
(dp4506
sg462
g2306
sg463
(dp4507
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp4508
(dp4509
g52
(I00
I00
tp4510
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p4511
(dp4512
bsg187
(lp4513
g4102
asg193
g482
sbsg48
g1
(g49
g3
NtRp4514
(dp4515
g52
(I00
I00
tp4516
sg54
S'float64'
p4517
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p4518
(dp4519
bsg187
(lp4520
g4086
asg193
g2782
sbsg48
g1
(g49
g3
NtRp4521
(dp4522
g52
(I00
I00
tp4523
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p4524
(dp4525
bsg187
(lp4526
g4070
asg193
g2809
sbsg48
g1
(g77
g3
NtRp4527
(dp4528
g52
(I00
I00
tp4529
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p4530
(dp4531
bsg187
(lp4532
g4054
asg193
g1
(g194
g3
NtRp4533
(dp4534
g197
g198
sbsbsg48
g1
(g49
g3
NtRp4535
(dp4536
g52
(I00
I00
tp4537
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp4538
(dp4539
g32
S'auto_1905'
p4540
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4541
(dp4542
g38
(lp4543
(lp4544
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp4545
a(g44
I42
g45
S'g_W1 = T.grad(err, self.W1)'
tp4546
a(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp4547
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp4548
a(g1621
I1311
g1622
S'grad_dict[var] = reduce(lambda x, y: x + y, terms)'
tp4549
a(g1624
I1311
g1625
S'grad_dict[var] = reduce(lambda x, y: x + y, terms)'
tp4550
aasbsg20
Nsg47
g1
(g162
g3
NtRp4551
(dp4552
g15
(lp4553
g1
(g221
g3
NtRp4554
(dp4555
g32
S'auto_1904'
p4556
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4557
(dp4558
g38
(lp4559
(lp4560
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp4561
a(g44
I42
g45
S'g_W1 = T.grad(err, self.W1)'
tp4562
a(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp4563
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp4564
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4565
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp4566
aasbsg20
Nsg47
g1
(g162
g3
NtRp4567
(dp4568
g15
(lp4569
g1
(g29
g3
NtRp4570
(dp4571
g32
S'auto_1903'
p4572
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4573
(dp4574
g38
(lp4575
(lp4576
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp4577
a(g44
I42
g45
S'g_W1 = T.grad(err, self.W1)'
tp4578
a(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp4579
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp4580
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4581
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4582
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4583
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp4584
aasbsg20
Nsg47
g1
(g162
g3
NtRp4585
(dp4586
g15
(lp4587
g1
(g29
g3
NtRp4588
(dp4589
g32
S'auto_1901'
p4590
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4591
(dp4592
g38
(lp4593
(lp4594
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp4595
a(g44
I42
g45
S'g_W1 = T.grad(err, self.W1)'
tp4596
a(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp4597
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp4598
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4599
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4600
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4601
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp4602
aasbsg20
Nsg47
g1
(g162
g3
NtRp4603
(dp4604
g15
(lp4605
g1
(g29
g3
NtRp4606
(dp4607
g32
S'auto_1900'
p4608
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4609
(dp4610
g38
(lp4611
(lp4612
(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp4613
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp4614
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4615
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4616
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4617
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4618
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4619
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp4620
aasbsg20
Nsg47
g1
(g162
g3
NtRp4621
(dp4622
g15
(lp4623
g2244
ag1
(g29
g3
NtRp4624
(dp4625
g32
S'auto_1899'
p4626
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4627
(dp4628
g38
(lp4629
(lp4630
(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp4631
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp4632
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4633
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4634
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4635
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4636
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4637
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp4638
aasbsg20
Nsg47
g1
(g162
g3
NtRp4639
(dp4640
g15
(lp4641
g1
(g29
g3
NtRp4642
(dp4643
g32
S'auto_1898'
p4644
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4645
(dp4646
g38
(lp4647
(lp4648
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4649
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4650
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4651
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4652
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4653
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4654
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4655
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp4656
aasbsg20
Nsg47
g1
(g162
g3
NtRp4657
(dp4658
g15
(lp4659
g1
(g29
g3
NtRp4660
(dp4661
g32
S'auto_1897'
p4662
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4663
(dp4664
g38
(lp4665
(lp4666
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4667
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4668
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4669
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4670
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4671
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4672
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4673
a(g1658
I1065
g1659
S'new_output_grads.append(og.astype(o_dt))'
tp4674
aasbsg20
Nsg47
g1
(g162
g3
NtRp4675
(dp4676
g15
(lp4677
g4240
asg35
(itheano.gof.utils
scratchpad
p4678
(dp4679
bsg187
(lp4680
g4660
asg193
g2782
sbsg48
g1
(g49
g3
NtRp4681
(dp4682
g52
(tsg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbag2143
asg35
(itheano.gof.utils
scratchpad
p4683
(dp4684
bsg187
(lp4685
g4642
asg193
g1
(g381
g3
NtRp4686
(dp4687
g20
Nsg384
g2300
sg459
(dp4688
sg462
g2306
sg463
(dp4689
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp4690
(dp4691
g52
(tsg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p4692
(dp4693
bsg187
(lp4694
g4624
asg193
g1
(g1178
g3
NtRp4695
(dp4696
g1181
(lp4697
sg252
(lp4698
sg250
(lp4699
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp4700
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp4701
(dp4702
g52
(I01
I01
tp4703
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p4704
(dp4705
bsg187
(lp4706
g4606
asg193
g1
(g381
g3
NtRp4707
(dp4708
g20
Nsg384
g2331
sg459
(dp4709
sg462
Nsg463
(dp4710
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp4711
(dp4712
g52
(I00
I00
tp4713
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbag2256
asg35
(itheano.gof.utils
scratchpad
p4714
(dp4715
bsg187
(lp4716
g4588
asg193
g1
(g381
g3
NtRp4717
(dp4718
g20
Nsg384
g2300
sg459
(dp4719
sg462
g2306
sg463
(dp4720
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp4721
(dp4722
g52
(I00
I00
tp4723
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp4724
(dp4725
g32
S'auto_1902'
p4726
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4727
(dp4728
g38
(lp4729
(lp4730
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp4731
a(g44
I42
g45
S'g_W1 = T.grad(err, self.W1)'
tp4732
a(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp4733
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp4734
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4735
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4736
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4737
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp4738
aasbsg20
Nsg47
g1
(g162
g3
NtRp4739
(dp4740
g15
(lp4741
g2256
asg35
(itheano.gof.utils
scratchpad
p4742
(dp4743
bsg187
(lp4744
g4724
asg193
g1
(g381
g3
NtRp4745
(dp4746
g20
Nsg384
g2214
sg459
(dp4747
sg462
g2219
sg463
(dp4748
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp4749
(dp4750
g52
(I00
I00
tp4751
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p4752
(dp4753
bsg187
(lp4754
g4570
asg193
g1
(g381
g3
NtRp4755
(dp4756
g20
Nsg384
g3042
sg459
(dp4757
sg462
g3047
sg463
(dp4758
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp4759
(dp4760
g52
(I00
I00
tp4761
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p4762
(dp4763
bsg187
(lp4764
g4554
asg193
g2809
sbsg48
g1
(g77
g3
NtRp4765
(dp4766
g52
(I00
I00
tp4767
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p4768
(dp4769
bsg187
(lp4770
g4538
asg193
g1
(g194
g3
NtRp4771
(dp4772
g197
g198
sbsbsg48
g1
(g49
g3
NtRp4773
(dp4774
g52
(I00
I00
tp4775
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p4776
(dp4777
bsg187
(lp4778
g4038
asg193
g933
sbsg48
g1
(g49
g3
NtRp4779
(dp4780
g52
(I00
I00
tp4781
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p4782
(dp4783
bsg187
(lp4784
g3993
asg193
g2297
sbsg48
g1
(g49
g3
NtRp4785
(dp4786
g52
(I00
I00
tp4787
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p4788
(dp4789
bsg187
(lp4790
g3961
asg193
g1996
sbsg48
g1
(g49
g3
NtRp4791
(dp4792
g52
(I00
I00
tp4793
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p4794
(dp4795
bsg187
(lp4796
g3949
asg193
g1
(g2808
g3
NtRp4797
(dp4798
g197
g198
sbsbsg48
g1
(g77
g3
NtRp4799
(dp4800
g52
(I00
I00
tp4801
sg20
Nsbsbsg23
g116
sg24
I01
sg25
I00
sg26
I01
sg27
I01
sg28
g124
sg60
I01
sg61
Nsbag1
(g17
g3
NtRp4802
(dp4803
g20
g135
sg22
g1
(g221
g3
NtRp4804
(dp4805
g32
S'auto_1966'
p4806
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4807
(dp4808
g38
(lp4809
(lp4810
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp4811
a(g44
I49
g45
S'(self.b1, self.b1-learning_rate*g_b1),'
tp4812
aasbsg20
Nsg47
g1
(g162
g3
NtRp4813
(dp4814
g15
(lp4815
g1
(g29
g3
NtRp4816
(dp4817
g32
S'auto_1965'
p4818
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4819
(dp4820
g38
(lp4821
(lp4822
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp4823
a(g44
I49
g45
S'(self.b1, self.b1-learning_rate*g_b1),'
tp4824
aasbsg20
Nsg47
g1
(g162
g3
NtRp4825
(dp4826
g15
(lp4827
g1
(g29
g3
NtRp4828
(dp4829
g32
S'auto_1942'
p4830
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4831
(dp4832
g38
(lp4833
(lp4834
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp4835
a(g44
I49
g45
S'(self.b1, self.b1-learning_rate*g_b1),'
tp4836
aasbsg20
Nsg47
g1
(g162
g3
NtRp4837
(dp4838
g15
(lp4839
g144
asg35
(itheano.gof.utils
scratchpad
p4840
(dp4841
bsg187
(lp4842
g4828
asg193
g1
(g194
g3
NtRp4843
(dp4844
g197
g198
sbsbsg48
g1
(g49
g3
NtRp4845
(dp4846
g52
(I00
tp4847
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp4848
(dp4849
g32
S'auto_1964'
p4850
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4851
(dp4852
g38
(lp4853
(lp4854
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp4855
a(g44
I49
g45
S'(self.b1, self.b1-learning_rate*g_b1),'
tp4856
aasbsg20
Nsg47
g1
(g162
g3
NtRp4857
(dp4858
g15
(lp4859
g1
(g29
g3
NtRp4860
(dp4861
g32
S'auto_1943'
p4862
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4863
(dp4864
g38
(lp4865
(lp4866
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp4867
a(g44
I49
g45
S'(self.b1, self.b1-learning_rate*g_b1),'
tp4868
aasbsg20
Nsg47
g1
(g162
g3
NtRp4869
(dp4870
g15
(lp4871
g1
(g1008
g3
NtRp4872
(dp4873
g32
S'auto_1796'
p4874
sg34
Nsg35
(itheano.gof.utils
scratchpad
p4875
(dp4876
g1014
Nsbsg20
Nsg48
g1
(g49
g3
NtRp4877
(dp4878
g52
(tsg54
S'float32'
p4879
sg56
g74
sg59
I00
sg20
Nsbsg1018
g71
(g72
(I0
tS'b'
tRp4880
(I1
(tg74
I00
S'\x00\x00\x80>'
tbsbasg35
(itheano.gof.utils
scratchpad
p4881
(dp4882
bsg187
(lp4883
g4860
asg193
g1
(g1178
g3
NtRp4884
(dp4885
g1181
(lp4886
sg252
(lp4887
sg250
(lp4888
I0
asg254
(tsg1185
I00
sg256
(S'x'
tp4889
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp4890
(dp4891
g52
(I01
tp4892
sg54
g4879
sg56
g74
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp4893
(dp4894
g32
S'auto_1963'
p4895
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4896
(dp4897
g38
(lp4898
(lp4899
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp4900
a(g44
I49
g45
S'(self.b1, self.b1-learning_rate*g_b1),'
tp4901
aasbsg20
Nsg47
g1
(g162
g3
NtRp4902
(dp4903
g15
(lp4904
g1
(g221
g3
NtRp4905
(dp4906
g32
S'auto_1962'
p4907
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4908
(dp4909
g38
(lp4910
(lp4911
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp4912
a(g44
I44
g45
S'g_b1 = T.grad(err, self.b1)'
tp4913
a(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp4914
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp4915
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4916
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp4917
aasbsg20
Nsg47
g1
(g162
g3
NtRp4918
(dp4919
g15
(lp4920
g1
(g29
g3
NtRp4921
(dp4922
g32
S'auto_1961'
p4923
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4924
(dp4925
g38
(lp4926
(lp4927
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp4928
a(g44
I44
g45
S'g_b1 = T.grad(err, self.b1)'
tp4929
a(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp4930
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp4931
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4932
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4933
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4934
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp4935
aasbsg20
Nsg47
g1
(g162
g3
NtRp4936
(dp4937
g15
(lp4938
g1
(g29
g3
NtRp4939
(dp4940
g32
S'auto_1960'
p4941
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4942
(dp4943
g38
(lp4944
(lp4945
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp4946
a(g44
I44
g45
S'g_b1 = T.grad(err, self.b1)'
tp4947
a(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp4948
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp4949
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4950
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4951
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4952
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp4953
aasbsg20
Nsg47
g1
(g162
g3
NtRp4954
(dp4955
g15
(lp4956
g1
(g29
g3
NtRp4957
(dp4958
g32
S'auto_1959'
p4959
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4960
(dp4961
g38
(lp4962
(lp4963
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp4964
a(g44
I44
g45
S'g_b1 = T.grad(err, self.b1)'
tp4965
a(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp4966
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp4967
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4968
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4969
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4970
a(g1658
I1065
g1659
S'new_output_grads.append(og.astype(o_dt))'
tp4971
aasbsg20
Nsg47
g1
(g162
g3
NtRp4972
(dp4973
g15
(lp4974
g1
(g29
g3
NtRp4975
(dp4976
g32
S'auto_1958'
p4977
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4978
(dp4979
g38
(lp4980
(lp4981
(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp4982
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp4983
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4984
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4985
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4986
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp4987
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp4988
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp4989
aasbsg20
Nsg47
g1
(g162
g3
NtRp4990
(dp4991
g15
(lp4992
g1
(g29
g3
NtRp4993
(dp4994
g32
S'auto_1957'
p4995
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p4996
(dp4997
g38
(lp4998
(lp4999
(g1615
I561
g1616
S'grad_dict, wrt, cost_name)'
tp5000
a(g1618
I1324
g1619
S'rval = [access_grad_cache(elem) for elem in wrt]'
tp5001
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5002
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5003
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5004
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5005
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5006
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp5007
aasbsg20
Nsg47
g1
(g162
g3
NtRp5008
(dp5009
g15
(lp5010
g1
(g29
g3
NtRp5011
(dp5012
g32
S'auto_1956'
p5013
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p5014
(dp5015
g38
(lp5016
(lp5017
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5018
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5019
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5020
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5021
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5022
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5023
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5024
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp5025
aasbsg20
Nsg47
g1
(g162
g3
NtRp5026
(dp5027
g15
(lp5028
g1
(g29
g3
NtRp5029
(dp5030
g32
S'auto_1951'
p5031
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p5032
(dp5033
g38
(lp5034
(lp5035
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5036
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5037
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5038
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5039
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5040
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5041
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5042
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp5043
aasbsg20
Nsg47
g1
(g162
g3
NtRp5044
(dp5045
g15
(lp5046
g1
(g29
g3
NtRp5047
(dp5048
g32
S'auto_1947'
p5049
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p5050
(dp5051
g38
(lp5052
(lp5053
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5054
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5055
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5056
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5057
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5058
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5059
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5060
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp5061
aasbsg20
Nsg47
g1
(g162
g3
NtRp5062
(dp5063
g15
(lp5064
g1
(g29
g3
NtRp5065
(dp5066
g32
S'auto_1946'
p5067
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p5068
(dp5069
g38
(lp5070
(lp5071
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5072
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5073
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5074
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5075
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5076
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5077
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5078
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp5079
aasbsg20
Nsg47
g1
(g162
g3
NtRp5080
(dp5081
g15
(lp5082
g1837
ag1
(g29
g3
NtRp5083
(dp5084
g32
S'auto_1945'
p5085
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p5086
(dp5087
g38
(lp5088
(lp5089
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5090
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5091
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5092
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5093
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5094
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5095
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5096
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp5097
aasbsg20
Nsg47
g1
(g162
g3
NtRp5098
(dp5099
g15
(lp5100
g1
(g29
g3
NtRp5101
(dp5102
g32
S'auto_1944'
p5103
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p5104
(dp5105
g38
(lp5106
(lp5107
(g41
I86
g42
S'mlp = MLP(2, 4, 2)'
tp5108
a(g44
I44
g45
S'g_b1 = T.grad(err, self.b1)'
tp5109
a(g1615
I473
g1616
S'g_cost = _float_ones_like(cost)'
tp5110
a(g2091
I1345
g2092
S'rval = tensor.ones_like(x)'
tp5111
aasbsg20
Nsg47
g1
(g162
g3
NtRp5112
(dp5113
g15
(lp5114
g2097
ag2316
asg35
(itheano.gof.utils
scratchpad
p5115
(dp5116
bsg187
(lp5117
g5101
asg193
g2328
sbsg48
g1
(g49
g3
NtRp5118
(dp5119
g52
(tsg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p5120
(dp5121
bsg187
(lp5122
g5083
asg193
g1
(g1178
g3
NtRp5123
(dp5124
g1181
(lp5125
sg252
(lp5126
sg250
(lp5127
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp5128
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp5129
(dp5130
g52
(I01
I01
tp5131
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p5132
(dp5133
bsg187
(lp5134
g5065
asg193
g1
(g381
g3
NtRp5135
(dp5136
g20
Nsg384
g2331
sg459
(dp5137
sg462
Nsg463
(dp5138
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp5139
(dp5140
g52
(I00
I00
tp5141
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag2011
asg35
(itheano.gof.utils
scratchpad
p5142
(dp5143
bsg187
(lp5144
g5047
asg193
g1
(g381
g3
NtRp5145
(dp5146
g20
Nsg384
g2300
sg459
(dp5147
sg462
g2306
sg463
(dp5148
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp5149
(dp5150
g52
(I00
I00
tp5151
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp5152
(dp5153
g32
S'auto_1950'
p5154
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p5155
(dp5156
g38
(lp5157
(lp5158
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5159
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5160
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5161
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5162
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5163
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5164
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5165
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp5166
aasbsg20
Nsg47
g1
(g162
g3
NtRp5167
(dp5168
g15
(lp5169
g1849
ag1
(g29
g3
NtRp5170
(dp5171
g32
S'auto_1949'
p5172
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p5173
(dp5174
g38
(lp5175
(lp5176
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5177
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5178
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5179
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5180
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5181
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5182
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5183
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp5184
aasbsg20
Nsg47
g1
(g162
g3
NtRp5185
(dp5186
g15
(lp5187
g2011
ag1
(g29
g3
NtRp5188
(dp5189
g32
S'auto_1948'
p5190
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p5191
(dp5192
g38
(lp5193
(lp5194
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5195
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5196
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5197
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5198
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5199
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5200
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5201
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp5202
aasbsg20
Nsg47
g1
(g162
g3
NtRp5203
(dp5204
g15
(lp5205
g2429
asg35
(itheano.gof.utils
scratchpad
p5206
(dp5207
bsg187
(lp5208
g5188
asg193
g1
(g1178
g3
NtRp5209
(dp5210
g1181
(lp5211
sg252
(lp5212
sg250
(lp5213
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp5214
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp5215
(dp5216
g52
(I01
I01
tp5217
sg54
g2436
sg56
g2032
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p5218
(dp5219
bsg187
(lp5220
g5170
asg193
g1
(g381
g3
NtRp5221
(dp5222
g20
Nsg384
g1999
sg459
(dp5223
sg462
g2005
sg463
(dp5224
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp5225
(dp5226
g52
(I01
I01
tp5227
sg54
g2460
sg56
g2032
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p5228
(dp5229
bsg187
(lp5230
g5152
asg193
g1
(g381
g3
NtRp5231
(dp5232
g20
Nsg384
g2052
sg459
(dp5233
sg462
g2057
sg463
(dp5234
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp5235
(dp5236
g52
(I00
I00
tp5237
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p5238
(dp5239
bsg187
(lp5240
g5029
asg193
g1
(g381
g3
NtRp5241
(dp5242
g20
Nsg384
g2300
sg459
(dp5243
sg462
g2306
sg463
(dp5244
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp5245
(dp5246
g52
(I00
I00
tp5247
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp5248
(dp5249
g32
S'auto_1955'
p5250
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p5251
(dp5252
g38
(lp5253
(lp5254
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5255
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5256
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5257
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5258
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5259
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5260
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5261
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp5262
aasbsg20
Nsg47
g1
(g162
g3
NtRp5263
(dp5264
g15
(lp5265
g1
(g29
g3
NtRp5266
(dp5267
g32
S'auto_1952'
p5268
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p5269
(dp5270
g38
(lp5271
(lp5272
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5273
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5274
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5275
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5276
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5277
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5278
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5279
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp5280
aasbsg20
Nsg47
g1
(g162
g3
NtRp5281
(dp5282
g15
(lp5283
g2429
asg35
(itheano.gof.utils
scratchpad
p5284
(dp5285
bsg187
(lp5286
g5266
asg193
g1
(g1178
g3
NtRp5287
(dp5288
g1181
(lp5289
sg252
(lp5290
sg250
(lp5291
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp5292
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp5293
(dp5294
g52
(I01
I01
tp5295
sg54
g2436
sg56
g2032
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp5296
(dp5297
g32
S'auto_1954'
p5298
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p5299
(dp5300
g38
(lp5301
(lp5302
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5303
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5304
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5305
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5306
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5307
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5308
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5309
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp5310
aasbsg20
Nsg47
g1
(g162
g3
NtRp5311
(dp5312
g15
(lp5313
g1
(g29
g3
NtRp5314
(dp5315
g32
S'auto_1953'
p5316
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p5317
(dp5318
g38
(lp5319
(lp5320
(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5321
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5322
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5323
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5324
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5325
a(g1658
I973
g1659
S'output_grads = [access_grad_cache(var) for var in node.outputs]'
tp5326
a(g1621
I1279
g1622
S'term = access_term_cache(node)[idx]'
tp5327
a(g1658
I1113
g1659
S'input_grads = node.op.grad(inputs, new_output_grads)'
tp5328
aasbsg20
Nsg47
g1
(g162
g3
NtRp5329
(dp5330
g15
(lp5331
g1869
asg35
(itheano.gof.utils
scratchpad
p5332
(dp5333
bsg187
(lp5334
g5314
asg193
g1
(g381
g3
NtRp5335
(dp5336
g20
Nsg384
g445
sg459
(dp5337
sg462
g1001
sg463
(dp5338
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp5339
(dp5340
g52
(I00
I00
tp5341
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p5342
(dp5343
bsg187
(lp5344
g5296
asg193
g1
(g381
g3
NtRp5345
(dp5346
g20
Nsg384
g2581
sg459
(dp5347
sg462
g2586
sg463
(dp5348
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp5349
(dp5350
g52
(I00
I00
tp5351
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p5352
(dp5353
bsg187
(lp5354
g5248
asg193
g1
(g381
g3
NtRp5355
(dp5356
g20
Nsg384
g1999
sg459
(dp5357
sg462
g2005
sg463
(dp5358
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp5359
(dp5360
g52
(I00
I00
tp5361
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p5362
(dp5363
bsg187
(lp5364
g5011
asg193
g1
(g381
g3
NtRp5365
(dp5366
g20
Nsg384
g2300
sg459
(dp5367
sg462
g2306
sg463
(dp5368
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp5369
(dp5370
g52
(I00
I00
tp5371
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p5372
(dp5373
bsg187
(lp5374
g4993
asg193
g1
(g2124
g3
NtRp5375
(dp5376
g2127
g55
sg54
g55
sg197
g198
sg384
g436
sg2128
(I0
tp5377
sbsbsg48
g1
(g49
g3
NtRp5378
(dp5379
g52
(I00
tp5380
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p5381
(dp5382
bsg187
(lp5383
g4975
asg193
g1
(g1178
g3
NtRp5384
(dp5385
g1181
(lp5386
sg252
(lp5387
I0
asg250
(lp5388
I0
asg254
(I00
tp5389
sg1185
I00
sg256
(S'x'
I0
tp5390
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp5391
(dp5392
g52
(I01
I00
tp5393
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p5394
(dp5395
bsg187
(lp5396
g4957
asg193
g2782
sbsg48
g1
(g49
g3
NtRp5397
(dp5398
g52
(I01
I00
tp5399
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p5400
(dp5401
bsg187
(lp5402
g4939
asg193
g1
(g381
g3
NtRp5403
(dp5404
g20
Nsg384
g3893
sg459
(dp5405
sg462
Nsg463
(dp5406
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp5407
(dp5408
g52
(I01
I00
tp5409
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p5410
(dp5411
bsg187
(lp5412
g4921
asg193
g1
(g1178
g3
NtRp5413
(dp5414
g1181
(lp5415
I0
asg252
(lp5416
I1
asg250
(lp5417
sg254
g5399
sg1185
I00
sg256
(I1
tp5418
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp5419
(dp5420
g52
(I00
tp5421
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p5422
(dp5423
bsg187
(lp5424
g4905
asg193
g2809
sbsg48
g1
(g77
g3
NtRp5425
(dp5426
g52
(I00
tp5427
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p5428
(dp5429
bsg187
(lp5430
g4893
asg193
g1
(g194
g3
NtRp5431
(dp5432
g197
g198
sbsbsg48
g1
(g49
g3
NtRp5433
(dp5434
g52
(I00
tp5435
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p5436
(dp5437
bsg187
(lp5438
g4848
asg193
g2297
sbsg48
g1
(g49
g3
NtRp5439
(dp5440
g52
(I00
tp5441
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p5442
(dp5443
bsg187
(lp5444
g4816
asg193
g1996
sbsg48
g1
(g49
g3
NtRp5445
(dp5446
g52
(I00
tp5447
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p5448
(dp5449
bsg187
(lp5450
g4804
asg193
g1
(g2808
g3
NtRp5451
(dp5452
g197
g198
sbsbsg48
g1
(g77
g3
NtRp5453
(dp5454
g52
(I00
tp5455
sg20
Nsbsbsg23
g136
sg24
I01
sg25
I00
sg26
I01
sg27
I01
sg28
g144
sg60
I01
sg61
Nsbasg153
g1
(g154
g3
NtRp5456
(dp5457
g12
Nsg15
(lp5458
g1
(g29
g3
NtRp5459
(dp5460
g34
Nsg20
g21
sg153
g5456
sg160
(lp5461
(g1
(g162
g3
NtRp5462
(dp5463
g15
(lp5464
g5459
ag1
(g29
g3
NtRp5465
(dp5466
g34
I0
sg20
Nsg153
g5456
sg160
(lp5467
(g5462
I1
tp5468
asg32
S'auto_1980'
p5469
sg35
(itheano.gof.utils
scratchpad
p5470
(dp5471
g38
g173
sbsg47
g1
(g162
g3
NtRp5472
(dp5473
g15
(lp5474
g1
(g81
g3
NtRp5475
(dp5476
g34
Nsg84
g66
sg20
g64
sg153
g5456
sg160
(lp5477
(g5472
I0
tp5478
a(g1
(g162
g3
NtRp5479
(dp5480
g15
(lp5481
g5475
asg153
g5456
sg187
(lp5482
g1
(g221
g3
NtRp5483
(dp5484
g34
I0
sg20
Nsg153
g5456
sg160
(lp5485
(g1
(g162
g3
NtRp5486
(dp5487
g15
(lp5488
g5483
asg153
g5456
sg187
(lp5489
g1
(g221
g3
NtRp5490
(dp5491
g34
I0
sg20
Nsg153
g5456
sg160
(lp5492
(g1
(g162
g3
NtRp5493
(dp5494
g15
(lp5495
g1
(ctheano.sandbox.cuda.var
CudaNdarrayConstant
p5496
g3
NtRp5497
(dp5498
g34
Nsg20
Nsg153
g5456
sg48
g1
(g77
g3
NtRp5499
(dp5500
g52
(tsg20
Nsbsg160
(lp5501
(g5493
I0
tp5502
asg32
S'auto_2809'
p5503
sg35
(itheano.gof.utils
scratchpad
p5504
(dp5505
g38
(lp5506
sbsg1018
g70
(g71
(g72
(I0
tS'b'
tRp5507
(I1
(tg74
I00
S'\n\xd7#<'
tbtRp5508
sbag5490
ag1
(g221
g3
NtRp5509
(dp5510
g34
I0
sg20
Nsg153
g5456
sg160
(lp5511
(g5493
I2
tp5512
asg32
S'auto_2797'
p5513
sg35
(itheano.gof.utils
scratchpad
p5514
(dp5515
g38
(lp5516
sbsg47
g1
(g162
g3
NtRp5517
(dp5518
g15
(lp5519
g1
(g221
g3
NtRp5520
(dp5521
g34
I0
sg20
Nsg153
g5456
sg160
(lp5522
(g5517
I0
tp5523
asg32
S'auto_3273'
p5524
sg35
(itheano.gof.utils
scratchpad
p5525
(dp5526
g38
(lp5527
sbsg47
g1
(g162
g3
NtRp5528
(dp5529
g15
(lp5530
g1
(g81
g3
NtRp5531
(dp5532
g34
Nsg84
g116
sg20
g115
sg153
g5456
sg160
(lp5533
(g1
(g162
g3
NtRp5534
(dp5535
g15
(lp5536
g5531
asg153
g5456
sg187
(lp5537
g1
(g29
g3
NtRp5538
(dp5539
g34
I0
sg20
Nsg153
g5456
sg160
(lp5540
(g1
(g162
g3
NtRp5541
(dp5542
g15
(lp5543
g1
(g29
g3
NtRp5544
(dp5545
g34
I0
sg20
Nsg153
g5456
sg160
(lp5546
(g5541
I0
tp5547
a(g1
(g162
g3
NtRp5548
(dp5549
g15
(lp5550
g5544
asg153
g5456
sg187
(lp5551
g1
(g29
g3
NtRp5552
(dp5553
g34
I0
sg20
Nsg153
g5456
sg160
(lp5554
(g1
(g162
g3
NtRp5555
(dp5556
g15
(lp5557
g5552
ag1
(g29
g3
NtRp5558
(dp5559
g34
I0
sg20
Nsg153
g5456
sg160
(lp5560
(g5555
I1
tp5561
a(g1
(g162
g3
NtRp5562
(dp5563
g15
(lp5564
g5558
ag1
(g29
g3
NtRp5565
(dp5566
g34
I0
sg20
Nsg153
g5456
sg160
(lp5567
(g5562
I1
tp5568
asg32
S'auto_2622'
p5569
sg35
(itheano.gof.utils
scratchpad
p5570
(dp5571
g38
(lp5572
sbsg47
g1
(g162
g3
NtRp5573
(dp5574
g15
(lp5575
g1
(g221
g3
NtRp5576
(dp5577
g34
I0
sg20
Nsg153
g5456
sg160
(lp5578
(g5573
I0
tp5579
asg32
S'auto_2621'
p5580
sg35
(itheano.gof.utils
scratchpad
p5581
(dp5582
g38
(lp5583
sbsg47
g1
(g162
g3
NtRp5584
(dp5585
g15
(lp5586
g5531
asg153
g5456
sg187
(lp5587
g5576
asg35
(itheano.gof.utils
scratchpad
p5588
(dp5589
bsg191
(dp5590
sg193
g1
(g244
g3
NtRp5591
(dp5592
g247
(dp5593
I0
(lp5594
I0
assg250
(lp5595
sg252
(lp5596
I1
aI0
asg197
g198
sg254
g306
sg256
g3724
sbsbsg48
g1
(g77
g3
NtRp5597
(dp5598
g52
(I00
I00
tp5599
sg20
Nsbsbasg153
g5456
sg187
(lp5600
g5565
asg35
(itheano.gof.utils
scratchpad
p5601
(dp5602
bsg191
(dp5603
sg193
g265
sbsg48
g1
(g49
g3
NtRp5604
(dp5605
g52
(I00
I00
tp5606
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg153
g5456
sg187
(lp5607
g1
(g29
g3
NtRp5608
(dp5609
g34
I0
sg20
Nsg153
g5456
sg160
(lp5610
(g1
(g162
g3
NtRp5611
(dp5612
g15
(lp5613
g5608
ag1
(g1008
g3
NtRp5614
(dp5615
g34
Nsg20
Nsg153
g5456
sg48
g1
(g49
g3
NtRp5616
(dp5617
g52
(I01
I01
tp5618
sg54
g2323
sg56
g58
sg59
I00
sg20
Nsbsg160
(lp5619
(g1
(g162
g3
NtRp5620
(dp5621
g15
(lp5622
g5614
ag1
(g29
g3
NtRp5623
(dp5624
g34
I0
sg20
Nsg153
g5456
sg160
(lp5625
(g1
(g162
g3
NtRp5626
(dp5627
g15
(lp5628
g5623
ag1
(g29
g3
NtRp5629
(dp5630
g34
Nsg20
S'y'
sg153
g5456
sg160
(lp5631
(g5626
I1
tp5632
asg32
S'auto_1968'
p5633
sg35
(itheano.gof.utils
scratchpad
p5634
(dp5635
g38
g1511
sbsg47
Nsg48
g50
sbasg153
g5456
sg187
(lp5636
g1
(g29
g3
NtRp5637
(dp5638
g34
I0
sg20
Nsg153
g5456
sg160
(lp5639
(g1
(g162
g3
NtRp5640
(dp5641
g15
(lp5642
g5637
asg153
g5456
sg187
(lp5643
g1
(g29
g3
NtRp5644
(dp5645
g34
I0
sg20
Nsg153
g5456
sg160
(lp5646
(g1
(g162
g3
NtRp5647
(dp5648
g15
(lp5649
g5644
asg153
g5456
sg187
(lp5650
g1
(g29
g3
NtRp5651
(dp5652
g34
I0
sg20
Nsg153
g5456
sg160
(lp5653
(g1
(g162
g3
NtRp5654
(dp5655
g15
(lp5656
g5651
ag1
(g29
g3
NtRp5657
(dp5658
g34
I0
sg20
Nsg153
g5456
sg160
(lp5659
(g5654
I1
tp5660
asg32
S'auto_2806'
p5661
sg35
(itheano.gof.utils
scratchpad
p5662
(dp5663
g38
(lp5664
sbsg47
g1
(g162
g3
NtRp5665
(dp5666
g15
(lp5667
g1
(g221
g3
NtRp5668
(dp5669
g34
I0
sg20
Nsg153
g5456
sg160
(lp5670
(g5665
I0
tp5671
asg32
S'auto_3289'
p5672
sg35
(itheano.gof.utils
scratchpad
p5673
(dp5674
g38
(lp5675
sbsg47
g5493
sg48
g1
(g77
g3
NtRp5676
(dp5677
g52
(tsg20
Nsbsbasg153
g5456
sg187
(lp5678
g5657
asg35
(itheano.gof.utils
scratchpad
p5679
(dp5680
bsg191
(dp5681
sg193
g265
sbsg48
g1
(g49
g3
NtRp5682
(dp5683
g52
(tsg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p5684
(dp5685
bsg191
(dp5686
sg153
g5456
sg187
(lp5687
g1
(g29
g3
NtRp5688
(dp5689
g34
I0
sg20
Nsg153
g5456
sg160
(lp5690
(g369
I0
tp5691
asg32
S'auto_3421'
p5692
sg35
(itheano.gof.utils
scratchpad
p5693
(dp5694
g38
(lp5695
sbsg47
g5654
sg48
g1
(g49
g3
NtRp5696
(dp5697
g52
(tsg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg193
g1
(g381
g3
NtRp5698
(dp5699
g20
Nsg384
g1
(g435
g3
NtRp5700
(dp5701
g438
g1
(g453
g3
NtRp5702
(dp5703
g456
(I0
tp5704
sbsg197
g198
sg20
Nsbsg459
(dp5705
I0
(lp5706
I0
assg462
g939
sg463
(dp5707
I0
I0
ssg465
I00
sg197
g198
sbsbI0
tp5708
asg32
S'auto_2053'
p5709
sg35
(itheano.gof.utils
scratchpad
p5710
(dp5711
g38
g2114
sbsg47
g5647
sg48
g2129
sbasg35
(itheano.gof.utils
scratchpad
p5712
(dp5713
bsg191
(dp5714
sg193
g2125
sbI0
tp5715
asg32
S'auto_2522'
p5716
sg35
(itheano.gof.utils
scratchpad
p5717
(dp5718
g38
(lp5719
sbsg47
g5640
sg48
g1
(g49
g3
NtRp5720
(dp5721
g52
(I00
I00
tp5722
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p5723
(dp5724
bsg191
(dp5725
sg193
g1
(g381
g3
NtRp5726
(dp5727
g935
g936
sg384
g2581
sg20
S'Elemwise{sqr,no_inplace}'
p5728
sg197
g198
sg459
(dp5729
sg462
g2586
sg463
(dp5730
sg465
I00
sg941
S"square of a\n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Parameters\n    ----------\n    scalar_op\n        An instance of a subclass of scalar.ScalarOp which works uniquely\n        on scalars.\n    inplace_pattern\n        A dictionary that maps the index of an output to the\n        index of an input so the output is calculated inplace using\n        the input's storage. (Just like destroymap, but without the lists.)\n    nfunc_spec\n        Either None or a tuple of three elements,\n        (nfunc_name, nin, nout) such that getattr(numpy, nfunc_name)\n        implements this operation, takes nin inputs and nout outputs.\n        Note that nin cannot always be inferred from the scalar op's\n        own nin field because that value is sometimes 0 (meaning a\n        variable number of inputs), whereas the numpy function may\n        not have varargs.\n\n    Examples\n    --------\n    Elemwise(add) # represents + on tensors (x + y)\n    Elemwise(add, {0 : 0}) # represents the += operation (x += y)\n    Elemwise(add, {0 : 1}) # represents += on the second argument (y += x)\n    Elemwise(mul)(rand(10, 5), rand(1, 5)) # the second input is completed\n    # along the first dimension to match the first input\n    Elemwise(true_div)(rand(10, 5), rand(10, 1)) # same but along the\n    # second dimension\n    Elemwise(int_div)(rand(1, 5), rand(10, 1)) # the output has size (10, 5)\n    Elemwise(log)(rand(3, 4, 5))\n\n    "
p5731
sbsbI0
tp5732
a(g1
(g162
g3
NtRp5733
(dp5734
g15
(lp5735
g5637
ag1
(g29
g3
NtRp5736
(dp5737
g34
I0
sg20
Nsg153
g5456
sg160
(lp5738
(g5733
I1
tp5739
a(g1
(g162
g3
NtRp5740
(dp5741
g15
(lp5742
g1
(g1008
g3
NtRp5743
(dp5744
g34
Nsg20
Nsg153
g5456
sg48
g1
(g49
g3
NtRp5745
(dp5746
g52
(I01
I01
tp5747
sg54
S'float64'
p5748
sg56
g58
sg59
I00
sg20
Nsbsg160
(lp5749
(g5740
I0
tp5750
asg32
S'auto_2305'
p5751
sg35
(itheano.gof.utils
scratchpad
p5752
(dp5753
g38
(lp5754
sg1014
cnumpy.core.multiarray
scalar
p5755
(g58
S'\x00\x00\x00\x00\x00\x00\x00@'
tRp5756
sbsg1018
g71
(g72
(I0
tS'b'
tRp5757
(I1
(I1
I1
tg58
I00
S'\x00\x00\x00\x00\x00\x00\x00@'
tbsbag5637
ag5736
asg35
(itheano.gof.utils
scratchpad
p5758
(dp5759
bsg191
(dp5760
sg153
g5456
sg187
(lp5761
g5558
asg193
g2297
sbI2
tp5762
asg32
S'auto_3391'
p5763
sg35
(itheano.gof.utils
scratchpad
p5764
(dp5765
g38
(lp5766
sbsg47
g5620
sg48
g1
(g49
g3
NtRp5767
(dp5768
g52
(I00
I00
tp5769
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p5770
(dp5771
bsg191
(dp5772
sg153
g5456
sg187
(lp5773
g1
(g29
g3
NtRp5774
(dp5775
g34
I0
sg20
Nsg153
g5456
sg160
(lp5776
(g1
(g162
g3
NtRp5777
(dp5778
g15
(lp5779
g5774
asg153
g5456
sg187
(lp5780
g1
(g29
g3
NtRp5781
(dp5782
g34
I0
sg20
Nsg153
g5456
sg160
(lp5783
(g1
(g162
g3
NtRp5784
(dp5785
g15
(lp5786
g1
(g1008
g3
NtRp5787
(dp5788
g34
Nsg20
Nsg153
g5456
sg48
g1
(g49
g3
NtRp5789
(dp5790
g52
(I01
tp5791
sg54
g5748
sg56
g58
sg59
I00
sg20
Nsbsg160
(lp5792
(g5784
I0
tp5793
asg32
S'auto_2530'
p5794
sg35
(itheano.gof.utils
scratchpad
p5795
(dp5796
g38
(lp5797
sg1014
g5755
(g58
S'\x00\x00\x00\x00\x00\x00\x00@'
tRp5798
sbsg1018
g71
(g72
(I0
tS'b'
tRp5799
(I1
(I1
tg58
I00
S'\x00\x00\x00\x00\x00\x00\x00@'
tbsbag5781
asg153
g5456
sg187
(lp5800
g1
(g29
g3
NtRp5801
(dp5802
g34
I0
sg20
Nsg153
g5456
sg160
(lp5803
(g1
(g162
g3
NtRp5804
(dp5805
g15
(lp5806
g5801
asg153
g5456
sg187
(lp5807
g1
(g221
g3
NtRp5808
(dp5809
g34
I0
sg20
Nsg153
g5456
sg160
(lp5810
(g1
(g162
g3
NtRp5811
(dp5812
g15
(lp5813
g1
(g81
g3
NtRp5814
(dp5815
g34
Nsg84
g136
sg20
g135
sg153
g5456
sg160
(lp5816
(g1
(g162
g3
NtRp5817
(dp5818
g15
(lp5819
g5814
asg153
g5456
sg187
(lp5820
g1
(g221
g3
NtRp5821
(dp5822
g34
I0
sg20
Nsg153
g5456
sg160
(lp5823
(g1
(g162
g3
NtRp5824
(dp5825
g15
(lp5826
g5821
asg153
g5456
sg187
(lp5827
g1
(g29
g3
NtRp5828
(dp5829
g34
I0
sg20
Nsg153
g5456
sg160
(lp5830
(g1
(g162
g3
NtRp5831
(dp5832
g15
(lp5833
g1
(g29
g3
NtRp5834
(dp5835
g34
I0
sg20
Nsg153
g5456
sg160
(lp5836
(g5831
I0
tp5837
asg32
S'auto_2025'
p5838
sg35
(itheano.gof.utils
scratchpad
p5839
(dp5840
g38
g470
sbsg47
g5541
sg48
g474
sbag5828
asg153
g5456
sg187
(lp5841
g5623
asg35
(itheano.gof.utils
scratchpad
p5842
(dp5843
bsg191
(dp5844
sg193
g1
(g381
g3
NtRp5845
(dp5846
g20
Nsg384
g1
(g385
g3
NtRp5847
(dp5848
g15
(lp5849
g1
(g389
g3
NtRp5850
(dp5851
g32
S'auto_3368'
p5852
sg34
Nsg35
(itheano.gof.utils
scratchpad
p5853
(dp5854
bsg20
Nsg47
Nsg48
g396
sbag1
(g389
g3
NtRp5855
(dp5856
g32
S'auto_3369'
p5857
sg34
Nsg35
(itheano.gof.utils
scratchpad
p5858
(dp5859
bsg20
Nsg47
Nsg48
g403
sbasg405
(lp5860
S'%(nodename)s_subnode0'
p5861
aS'%(nodename)s_subnode1'
p5862
asg409
I2
sg20
S'Composite{tanh((i0 + i1))}'
p5863
sg411
(g396
g403
tp5864
sg187
(lp5865
g1
(g389
g3
NtRp5866
(dp5867
g32
S'auto_3371'
p5868
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p5869
(dp5870
g38
(lp5871
sbsg20
Nsg47
g1
(g162
g3
NtRp5872
(dp5873
g15
(lp5874
g1
(g389
g3
NtRp5875
(dp5876
g32
S'auto_3370'
p5877
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p5878
(dp5879
g38
(lp5880
sbsg20
Nsg47
g1
(g162
g3
NtRp5881
(dp5882
g15
(lp5883
g5850
ag5855
asg35
(itheano.gof.utils
scratchpad
p5884
(dp5885
bsg187
(lp5886
g5875
asg193
g436
sbsg48
g396
sbasg35
(itheano.gof.utils
scratchpad
p5887
(dp5888
bsg187
(lp5889
g5866
asg193
g445
sbsg48
g396
sbasg449
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i0)s + %(i1)s;\n%(o0)s = tanh(V%(id)s_tmp1);\n}\n'
p5890
sg451
(g396
tp5891
sg438
g1
(g453
g3
NtRp5892
(dp5893
g456
(I0
tp5894
sbsg197
g198
sg458
I1
sbsg459
(dp5895
I0
(lp5896
I0
assg462
Nsg463
(dp5897
I0
I0
ssg465
I00
sg197
g198
sbsbI1
tp5898
asg32
S'auto_2624'
p5899
sg35
(itheano.gof.utils
scratchpad
p5900
(dp5901
g38
(lp5902
sbsg47
g5824
sg48
g1
(g49
g3
NtRp5903
(dp5904
g52
(I01
I00
tp5905
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p5906
(dp5907
bsg191
(dp5908
sg193
g265
sbI0
tp5909
asg32
S'auto_2623'
p5910
sg35
(itheano.gof.utils
scratchpad
p5911
(dp5912
g38
(lp5913
sbsg47
g5817
sg48
g1
(g77
g3
NtRp5914
(dp5915
g52
(I01
I00
tp5916
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p5917
(dp5918
bsg191
(dp5919
sg193
g1
(g244
g3
NtRp5920
(dp5921
g247
(dp5922
I0
(lp5923
I0
assg250
(lp5924
I0
asg252
(lp5925
I0
asg197
g198
sg254
g353
sg256
g354
sbsbI0
tp5926
a(g5811
I0
tp5927
asg32
S'auto_1972'
p5928
sg35
(itheano.gof.utils
scratchpad
p5929
(dp5930
g38
g149
sbsg47
Nsg48
g141
sbag1
(g5496
g3
NtRp5931
(dp5932
g34
Nsg20
Nsg153
g5456
sg48
g1
(g77
g3
NtRp5933
(dp5934
g52
(I01
tp5935
sg20
Nsbsg160
(lp5936
(g5811
I1
tp5937
a(g1
(g162
g3
NtRp5938
(dp5939
g15
(lp5940
g1
(g81
g3
NtRp5941
(dp5942
g34
Nsg84
g96
sg20
g95
sg153
g5456
sg160
(lp5943
(g1
(g162
g3
NtRp5944
(dp5945
g15
(lp5946
g5941
asg153
g5456
sg187
(lp5947
g1
(g221
g3
NtRp5948
(dp5949
g34
I0
sg20
Nsg153
g5456
sg160
(lp5950
(g1
(g162
g3
NtRp5951
(dp5952
g15
(lp5953
g5948
asg153
g5456
sg187
(lp5954
g1
(g29
g3
NtRp5955
(dp5956
g34
I0
sg20
Nsg153
g5456
sg160
(lp5957
(g1
(g162
g3
NtRp5958
(dp5959
g15
(lp5960
g1
(g29
g3
NtRp5961
(dp5962
g34
I0
sg20
Nsg153
g5456
sg160
(lp5963
(g5958
I0
tp5964
asg32
S'auto_2011'
p5965
sg35
(itheano.gof.utils
scratchpad
p5966
(dp5967
g38
g552
sbsg47
g5462
sg48
g556
sbag5955
asg153
g5456
sg187
(lp5968
g5544
asg35
(itheano.gof.utils
scratchpad
p5969
(dp5970
bsg191
(dp5971
sg193
g1
(g381
g3
NtRp5972
(dp5973
g20
Nsg384
g1
(g385
g3
NtRp5974
(dp5975
g15
(lp5976
g1
(g389
g3
NtRp5977
(dp5978
g32
S'auto_3356'
p5979
sg34
Nsg35
(itheano.gof.utils
scratchpad
p5980
(dp5981
bsg20
Nsg47
Nsg48
g396
sbag1
(g389
g3
NtRp5982
(dp5983
g32
S'auto_3357'
p5984
sg34
Nsg35
(itheano.gof.utils
scratchpad
p5985
(dp5986
bsg20
Nsg47
Nsg48
g403
sbasg405
(lp5987
S'%(nodename)s_subnode0'
p5988
aS'%(nodename)s_subnode1'
p5989
asg409
I2
sg20
S'Composite{tanh((i0 + i1))}'
p5990
sg411
(g396
g403
tp5991
sg187
(lp5992
g1
(g389
g3
NtRp5993
(dp5994
g32
S'auto_3359'
p5995
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p5996
(dp5997
g38
(lp5998
sbsg20
Nsg47
g1
(g162
g3
NtRp5999
(dp6000
g15
(lp6001
g1
(g389
g3
NtRp6002
(dp6003
g32
S'auto_3358'
p6004
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p6005
(dp6006
g38
(lp6007
sbsg20
Nsg47
g1
(g162
g3
NtRp6008
(dp6009
g15
(lp6010
g5977
ag5982
asg35
(itheano.gof.utils
scratchpad
p6011
(dp6012
bsg187
(lp6013
g6002
asg193
g436
sbsg48
g396
sbasg35
(itheano.gof.utils
scratchpad
p6014
(dp6015
bsg187
(lp6016
g5993
asg193
g445
sbsg48
g396
sbasg449
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i0)s + %(i1)s;\n%(o0)s = tanh(V%(id)s_tmp1);\n}\n'
p6017
sg451
(g396
tp6018
sg438
g1
(g453
g3
NtRp6019
(dp6020
g456
(I0
tp6021
sbsg197
g198
sg458
I1
sbsg459
(dp6022
I0
(lp6023
I0
assg462
Nsg463
(dp6024
I0
I0
ssg465
I00
sg197
g198
sbsbI1
tp6025
asg32
S'auto_2615'
p6026
sg35
(itheano.gof.utils
scratchpad
p6027
(dp6028
g38
(lp6029
sbsg47
g5951
sg48
g1
(g49
g3
NtRp6030
(dp6031
g52
(I01
I00
tp6032
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p6033
(dp6034
bsg191
(dp6035
sg193
g265
sbI0
tp6036
asg32
S'auto_2614'
p6037
sg35
(itheano.gof.utils
scratchpad
p6038
(dp6039
g38
(lp6040
sbsg47
g5944
sg48
g1
(g77
g3
NtRp6041
(dp6042
g52
(I01
I00
tp6043
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p6044
(dp6045
bsg191
(dp6046
sg193
g1
(g244
g3
NtRp6047
(dp6048
g247
(dp6049
I0
(lp6050
I0
assg250
(lp6051
I0
asg252
(lp6052
I0
asg197
g198
sg254
g255
sg256
g257
sbsbI0
tp6053
a(g5938
I0
tp6054
asg32
S'auto_1970'
p6055
sg35
(itheano.gof.utils
scratchpad
p6056
(dp6057
g38
g109
sbsg47
Nsg48
g101
sbag5931
ag1
(g221
g3
NtRp6058
(dp6059
g34
I0
sg20
Nsg153
g5456
sg160
(lp6060
(g5938
I2
tp6061
asg32
S'auto_2565'
p6062
sg35
(itheano.gof.utils
scratchpad
p6063
(dp6064
g38
(lp6065
sbsg47
g1
(g162
g3
NtRp6066
(dp6067
g15
(lp6068
g1
(g29
g3
NtRp6069
(dp6070
g34
I0
sg20
Nsg153
g5456
sg160
(lp6071
(g6066
I0
tp6072
asg32
S'auto_2154'
p6073
sg35
(itheano.gof.utils
scratchpad
p6074
(dp6075
g38
(lp6076
g3217
asbsg47
g1
(g162
g3
NtRp6077
(dp6078
g15
(lp6079
g1
(g29
g3
NtRp6080
(dp6081
g34
I0
sg20
Nsg153
g5456
sg160
(lp6082
(g6077
I0
tp6083
asg32
S'auto_2105'
p6084
sg35
(itheano.gof.utils
scratchpad
p6085
(dp6086
g38
(lp6087
g3289
asbsg47
g1
(g162
g3
NtRp6088
(dp6089
g15
(lp6090
g1
(g29
g3
NtRp6091
(dp6092
g34
I0
sg20
Nsg153
g5456
sg160
(lp6093
(g6088
I0
tp6094
a(g1
(g162
g3
NtRp6095
(dp6096
g15
(lp6097
g1
(g29
g3
NtRp6098
(dp6099
g34
I0
sg20
g1713
sg153
g5456
sg160
(lp6100
(g6095
I0
tp6101
asg32
S'auto_3271'
p6102
sg35
(itheano.gof.utils
scratchpad
p6103
(dp6104
g38
(lp6105
g1704
asbsg47
g1
(g162
g3
NtRp6106
(dp6107
g15
(lp6108
g5459
asg153
g5456
sg187
(lp6109
g6098
asg35
(itheano.gof.utils
scratchpad
p6110
(dp6111
bsg191
(dp6112
sg193
g1
(g1178
g3
NtRp6113
(dp6114
g1181
(lp6115
sg252
(lp6116
I1
aI0
asg250
(lp6117
sg254
g53
sg1185
I01
sg256
g1725
sg247
(dp6118
I0
(lp6119
I0
assg197
g198
sbsbsg48
g1
(g49
g3
NtRp6120
(dp6121
g52
(I00
I00
tp6122
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag6091
asg153
g5456
sg187
(lp6123
g1
(g29
g3
NtRp6124
(dp6125
g34
I0
sg20
Nsg153
g5456
sg160
(lp6126
(g1
(g162
g3
NtRp6127
(dp6128
g15
(lp6129
g6124
asg153
g5456
sg187
(lp6130
g1
(g29
g3
NtRp6131
(dp6132
g34
I0
sg20
Nsg153
g5456
sg160
(lp6133
(g1
(g162
g3
NtRp6134
(dp6135
g15
(lp6136
g6131
asg153
g5456
sg187
(lp6137
g1
(g221
g3
NtRp6138
(dp6139
g34
I0
sg20
Nsg153
g5456
sg160
(lp6140
(g1
(g162
g3
NtRp6141
(dp6142
g15
(lp6143
g5475
ag1
(g5496
g3
NtRp6144
(dp6145
g34
Nsg20
Nsg153
g5456
sg48
g1
(g77
g3
NtRp6146
(dp6147
g52
(I01
I01
tp6148
sg20
Nsbsg160
(lp6149
(g1
(g162
g3
NtRp6150
(dp6151
g15
(lp6152
g5531
ag6144
ag1
(g221
g3
NtRp6153
(dp6154
g34
I0
sg20
Nsg153
g5456
sg160
(lp6155
(g6150
I2
tp6156
asg32
S'auto_2583'
p6157
sg35
(itheano.gof.utils
scratchpad
p6158
(dp6159
g38
(lp6160
sbsg47
g1
(g162
g3
NtRp6161
(dp6162
g15
(lp6163
g1
(g29
g3
NtRp6164
(dp6165
g34
I0
sg20
Nsg153
g5456
sg160
(lp6166
(g6161
I0
tp6167
asg32
S'auto_2098'
p6168
sg35
(itheano.gof.utils
scratchpad
p6169
(dp6170
g38
g4091
sbsg47
g1
(g162
g3
NtRp6171
(dp6172
g15
(lp6173
g1
(g29
g3
NtRp6174
(dp6175
g34
I0
sg20
Nsg153
g5456
sg160
(lp6176
(g6171
I0
tp6177
asg32
S'auto_2416'
p6178
sg35
(itheano.gof.utils
scratchpad
p6179
(dp6180
g38
(lp6181
sbsg47
g5555
sg48
g1
(g49
g3
NtRp6182
(dp6183
g52
(I00
I00
tp6184
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg153
g5456
sg187
(lp6185
g6164
asg35
(itheano.gof.utils
scratchpad
p6186
(dp6187
bsg191
(dp6188
sg193
g2782
sbsg48
g4521
sbasg153
g5456
sg187
(lp6189
g6153
asg35
(itheano.gof.utils
scratchpad
p6190
(dp6191
bsg191
(dp6192
sg193
g2809
sbsg48
g1
(g77
g3
NtRp6193
(dp6194
g52
(I00
I00
tp6195
sg20
Nsbsbag1
(g5496
g3
NtRp6196
(dp6197
g34
Nsg20
Nsg153
g5456
sg48
g1
(g77
g3
NtRp6198
(dp6199
g52
(I01
I01
tp6200
sg20
Nsbsg160
(lp6201
(g6150
I3
tp6202
a(g6141
I3
tp6203
asg32
S'auto_2557'
p6204
sg35
(itheano.gof.utils
scratchpad
p6205
(dp6206
g38
(lp6207
sbsg1018
g70
(g71
(g72
(I0
tS'b'
tRp6208
(I1
(I1
I1
tg74
I00
S'\n\xd7#<'
tbtRp6209
sbasg153
g5456
sg187
(lp6210
g1
(g221
g3
NtRp6211
(dp6212
g34
I0
sg20
Nsg153
g5456
sg160
(lp6213
(g369
I3
tp6214
asg32
S'auto_3320'
p6215
sg35
(itheano.gof.utils
scratchpad
p6216
(dp6217
g38
(lp6218
sbsg47
g6150
sg48
g1
(g77
g3
NtRp6219
(dp6220
g52
(I00
I00
tp6221
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p6222
(dp6223
bsg191
(dp6224
sg193
g1
(ctheano.sandbox.cuda.basic_ops
GpuElemwise
p6225
g3
NtRp6226
(dp6227
g463
(dp6228
I0
I2
ssg197
g198
sg384
g1
(g385
g3
NtRp6229
(dp6230
g15
(lp6231
g1
(g389
g3
NtRp6232
(dp6233
g32
S'auto_3302'
p6234
sg34
Nsg35
(itheano.gof.utils
scratchpad
p6235
(dp6236
bsg20
Nsg47
Nsg48
g403
sbag1
(g389
g3
NtRp6237
(dp6238
g32
S'auto_3303'
p6239
sg34
Nsg35
(itheano.gof.utils
scratchpad
p6240
(dp6241
bsg20
Nsg47
Nsg48
g403
sbag1
(g389
g3
NtRp6242
(dp6243
g32
S'auto_3304'
p6244
sg34
Nsg35
(itheano.gof.utils
scratchpad
p6245
(dp6246
bsg20
Nsg47
Nsg48
g403
sbag1
(g389
g3
NtRp6247
(dp6248
g32
S'auto_3305'
p6249
sg34
Nsg35
(itheano.gof.utils
scratchpad
p6250
(dp6251
bsg20
Nsg47
Nsg48
g403
sbasg405
(lp6252
S'%(nodename)s_subnode0'
p6253
aS'%(nodename)s_subnode1'
p6254
aS'%(nodename)s_subnode2'
p6255
aS'%(nodename)s_subnode3'
p6256
aS'%(nodename)s_subnode4'
p6257
asg409
I4
sg20
S'Composite{(i0 - (i1 * (i2 + (i3 * sgn(i0)))))}'
p6258
sg411
(g403
g403
g403
g403
tp6259
sg187
(lp6260
g1
(g389
g3
NtRp6261
(dp6262
g32
S'auto_3310'
p6263
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p6264
(dp6265
g38
(lp6266
sbsg20
Nsg47
g1
(g162
g3
NtRp6267
(dp6268
g15
(lp6269
g6232
ag1
(g389
g3
NtRp6270
(dp6271
g32
S'auto_3309'
p6272
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p6273
(dp6274
g38
(lp6275
sbsg20
Nsg47
g1
(g162
g3
NtRp6276
(dp6277
g15
(lp6278
g6237
ag1
(g389
g3
NtRp6279
(dp6280
g32
S'auto_3308'
p6281
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p6282
(dp6283
g38
(lp6284
sbsg20
Nsg47
g1
(g162
g3
NtRp6285
(dp6286
g15
(lp6287
g6242
ag1
(g389
g3
NtRp6288
(dp6289
g32
S'auto_3307'
p6290
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p6291
(dp6292
g38
(lp6293
sbsg20
Nsg47
g1
(g162
g3
NtRp6294
(dp6295
g15
(lp6296
g6247
ag1
(g389
g3
NtRp6297
(dp6298
g32
S'auto_3306'
p6299
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p6300
(dp6301
g38
(lp6302
sbsg20
Nsg47
g1
(g162
g3
NtRp6303
(dp6304
g15
(lp6305
g6232
asg35
(itheano.gof.utils
scratchpad
p6306
(dp6307
bsg187
(lp6308
g6297
asg193
g1
(ctheano.scalar.basic
Sgn
p6309
g3
NtRp6310
(dp6311
g438
ctheano.scalar.basic
same_out_nocomplex
p6312
sg197
g198
sg20
S'sgn'
p6313
sbsbsg48
g403
sbasg35
(itheano.gof.utils
scratchpad
p6314
(dp6315
bsg187
(lp6316
g6288
asg193
g2300
sbsg48
g403
sbasg35
(itheano.gof.utils
scratchpad
p6317
(dp6318
bsg187
(lp6319
g6279
asg193
g436
sbsg48
g403
sbasg35
(itheano.gof.utils
scratchpad
p6320
(dp6321
bsg187
(lp6322
g6270
asg193
g2300
sbsg48
g403
sbasg35
(itheano.gof.utils
scratchpad
p6323
(dp6324
bsg187
(lp6325
g6261
asg193
g1999
sbsg48
g403
sbasg449
S'{\nnpy_float32 V%(id)s_tmp1;\nV%(id)s_tmp1 = (%(i0)s > 0) ? 1. : ((%(i0)s < 0) ? -1. : (isnan(%(i0)s) ? NAN : 0.));\nnpy_float32 V%(id)s_tmp2;\nV%(id)s_tmp2 = %(i3)s * V%(id)s_tmp1;\nnpy_float32 V%(id)s_tmp3;\nV%(id)s_tmp3 = %(i2)s + V%(id)s_tmp2;\nnpy_float32 V%(id)s_tmp4;\nV%(id)s_tmp4 = %(i1)s * V%(id)s_tmp3;\n%(o0)s = %(i0)s - V%(id)s_tmp4;\n}\n'
p6326
sg451
(g403
tp6327
sg438
g1
(g453
g3
NtRp6328
(dp6329
g456
(I2
tp6330
sbsg197
g198
sg458
I1
sbsS'sync'
p6331
I01
sg459
(dp6332
I0
(lp6333
I2
assS'src_generator'
p6334
g1
(ctheano.sandbox.cuda.elemwise
NaiveAlgo
p6335
g3
NtRp6336
(dp6337
g384
g6229
sg6331
I01
sg463
g6228
sbsbsbI1
tp6338
a(g6141
I1
tp6339
asg32
S'auto_2544'
p6340
sg35
(itheano.gof.utils
scratchpad
p6341
(dp6342
g38
(lp6343
sbsg1018
g70
(g71
(g72
(I0
tS'b'
tRp6344
(I1
(I1
I1
tg74
I00
S'\x00\x00\x80>'
tbtRp6345
sbag6138
ag6196
asg153
g5456
sg187
(lp6346
g1
(g221
g3
NtRp6347
(dp6348
g34
I0
sg20
Nsg153
g5456
sg160
(lp6349
(g369
I1
tp6350
asg32
S'auto_3353'
p6351
sg35
(itheano.gof.utils
scratchpad
p6352
(dp6353
g38
(lp6354
sbsg47
g6141
sg48
g1
(g77
g3
NtRp6355
(dp6356
g52
(I00
I00
tp6357
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p6358
(dp6359
bsg191
(dp6360
sg193
g1
(g6225
g3
NtRp6361
(dp6362
g463
(dp6363
I0
I2
ssg197
g198
sg384
g1
(g385
g3
NtRp6364
(dp6365
g15
(lp6366
g1
(g389
g3
NtRp6367
(dp6368
g32
S'auto_3335'
p6369
sg34
Nsg35
(itheano.gof.utils
scratchpad
p6370
(dp6371
bsg20
Nsg47
Nsg48
g403
sbag1
(g389
g3
NtRp6372
(dp6373
g32
S'auto_3336'
p6374
sg34
Nsg35
(itheano.gof.utils
scratchpad
p6375
(dp6376
bsg20
Nsg47
Nsg48
g403
sbag1
(g389
g3
NtRp6377
(dp6378
g32
S'auto_3337'
p6379
sg34
Nsg35
(itheano.gof.utils
scratchpad
p6380
(dp6381
bsg20
Nsg47
Nsg48
g403
sbag1
(g389
g3
NtRp6382
(dp6383
g32
S'auto_3338'
p6384
sg34
Nsg35
(itheano.gof.utils
scratchpad
p6385
(dp6386
bsg20
Nsg47
Nsg48
g403
sbasg405
(lp6387
S'%(nodename)s_subnode0'
p6388
aS'%(nodename)s_subnode1'
p6389
aS'%(nodename)s_subnode2'
p6390
aS'%(nodename)s_subnode3'
p6391
aS'%(nodename)s_subnode4'
p6392
asg409
I4
sg20
S'Composite{(i0 - (i1 * (i2 + (i3 * sgn(i0)))))}'
p6393
sg411
(g403
g403
g403
g403
tp6394
sg187
(lp6395
g1
(g389
g3
NtRp6396
(dp6397
g32
S'auto_3343'
p6398
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p6399
(dp6400
g38
(lp6401
sbsg20
Nsg47
g1
(g162
g3
NtRp6402
(dp6403
g15
(lp6404
g6367
ag1
(g389
g3
NtRp6405
(dp6406
g32
S'auto_3342'
p6407
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p6408
(dp6409
g38
(lp6410
sbsg20
Nsg47
g1
(g162
g3
NtRp6411
(dp6412
g15
(lp6413
g6372
ag1
(g389
g3
NtRp6414
(dp6415
g32
S'auto_3341'
p6416
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p6417
(dp6418
g38
(lp6419
sbsg20
Nsg47
g1
(g162
g3
NtRp6420
(dp6421
g15
(lp6422
g6377
ag1
(g389
g3
NtRp6423
(dp6424
g32
S'auto_3340'
p6425
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p6426
(dp6427
g38
(lp6428
sbsg20
Nsg47
g1
(g162
g3
NtRp6429
(dp6430
g15
(lp6431
g6382
ag1
(g389
g3
NtRp6432
(dp6433
g32
S'auto_3339'
p6434
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p6435
(dp6436
g38
(lp6437
sbsg20
Nsg47
g1
(g162
g3
NtRp6438
(dp6439
g15
(lp6440
g6367
asg35
(itheano.gof.utils
scratchpad
p6441
(dp6442
bsg187
(lp6443
g6432
asg193
g6310
sbsg48
g403
sbasg35
(itheano.gof.utils
scratchpad
p6444
(dp6445
bsg187
(lp6446
g6423
asg193
g2300
sbsg48
g403
sbasg35
(itheano.gof.utils
scratchpad
p6447
(dp6448
bsg187
(lp6449
g6414
asg193
g436
sbsg48
g403
sbasg35
(itheano.gof.utils
scratchpad
p6450
(dp6451
bsg187
(lp6452
g6405
asg193
g2300
sbsg48
g403
sbasg35
(itheano.gof.utils
scratchpad
p6453
(dp6454
bsg187
(lp6455
g6396
asg193
g1999
sbsg48
g403
sbasg449
S'{\nnpy_float32 V%(id)s_tmp1;\nV%(id)s_tmp1 = (%(i0)s > 0) ? 1. : ((%(i0)s < 0) ? -1. : (isnan(%(i0)s) ? NAN : 0.));\nnpy_float32 V%(id)s_tmp2;\nV%(id)s_tmp2 = %(i3)s * V%(id)s_tmp1;\nnpy_float32 V%(id)s_tmp3;\nV%(id)s_tmp3 = %(i2)s + V%(id)s_tmp2;\nnpy_float32 V%(id)s_tmp4;\nV%(id)s_tmp4 = %(i1)s * V%(id)s_tmp3;\n%(o0)s = %(i0)s - V%(id)s_tmp4;\n}\n'
p6456
sg451
(g403
tp6457
sg438
g1
(g453
g3
NtRp6458
(dp6459
g456
(I2
tp6460
sbsg197
g198
sg458
I1
sbsg6331
I01
sg459
(dp6461
I0
(lp6462
I2
assg6334
g1
(g6335
g3
NtRp6463
(dp6464
g384
g6364
sg6331
I01
sg463
g6363
sbsbsbI2
tp6465
asg32
S'auto_2545'
p6466
sg35
(itheano.gof.utils
scratchpad
p6467
(dp6468
g38
(lp6469
sbsg47
g6134
sg48
g1
(g77
g3
NtRp6470
(dp6471
g52
(I00
I00
tp6472
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p6473
(dp6474
bsg191
(dp6475
sg193
g2809
sbI0
tp6476
asg32
S'auto_2111'
p6477
sg35
(itheano.gof.utils
scratchpad
p6478
(dp6479
g38
g1669
sbsg47
g6127
sg48
g2802
sbasg35
(itheano.gof.utils
scratchpad
p6480
(dp6481
bsg191
(dp6482
sg193
g2782
sbI0
tp6483
asg32
S'auto_2417'
p6484
sg35
(itheano.gof.utils
scratchpad
p6485
(dp6486
g38
(lp6487
sbsg47
g6095
sg48
g1
(g49
g3
NtRp6488
(dp6489
g52
(I00
I00
tp6490
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p6491
(dp6492
bsg191
(dp6493
sg193
g1
(ctheano.tensor.blas
Dot22
p6494
g3
NtRp6495
(dp6496
g197
g198
sbsbI1
tp6497
asg32
S'auto_3417'
p6498
sg35
(itheano.gof.utils
scratchpad
p6499
(dp6500
g38
(lp6501
sbsg47
g5611
sg48
g1
(g49
g3
NtRp6502
(dp6503
g52
(I00
I00
tp6504
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg153
g5456
sg187
(lp6505
g6080
asg35
(itheano.gof.utils
scratchpad
p6506
(dp6507
bsg191
(dp6508
sg193
g3862
sbsg48
g3865
sbasg153
g5456
sg187
(lp6509
g6069
asg35
(itheano.gof.utils
scratchpad
p6510
(dp6511
bsg191
(dp6512
sg193
g2782
sbsg48
g1
(g49
g3
NtRp6513
(dp6514
g52
(I00
tp6515
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg153
g5456
sg187
(lp6516
g6058
asg35
(itheano.gof.utils
scratchpad
p6517
(dp6518
bsg191
(dp6519
sg193
g2809
sbsg48
g1
(g77
g3
NtRp6520
(dp6521
g52
(I00
tp6522
sg20
Nsbsbasg153
g5456
sg187
(lp6523
g1
(g221
g3
NtRp6524
(dp6525
g34
I0
sg20
Nsg153
g5456
sg160
(lp6526
(g369
I2
tp6527
asg32
S'auto_3333'
p6528
sg35
(itheano.gof.utils
scratchpad
p6529
(dp6530
g38
(lp6531
sbsg47
g5938
sg48
g1
(g77
g3
NtRp6532
(dp6533
g52
(I00
tp6534
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p6535
(dp6536
bsg191
(dp6537
sg193
g1
(g6225
g3
NtRp6538
(dp6539
g463
(dp6540
I0
I0
ssg197
g198
sg384
g1
(g385
g3
NtRp6541
(dp6542
g15
(lp6543
g1
(g389
g3
NtRp6544
(dp6545
g32
S'auto_3323'
p6546
sg34
Nsg35
(itheano.gof.utils
scratchpad
p6547
(dp6548
bsg20
Nsg47
Nsg48
g403
sbag1
(g389
g3
NtRp6549
(dp6550
g32
S'auto_3324'
p6551
sg34
Nsg35
(itheano.gof.utils
scratchpad
p6552
(dp6553
bsg20
Nsg47
Nsg48
g403
sbag1
(g389
g3
NtRp6554
(dp6555
g32
S'auto_3325'
p6556
sg34
Nsg35
(itheano.gof.utils
scratchpad
p6557
(dp6558
bsg20
Nsg47
Nsg48
g403
sbasg405
(lp6559
S'%(nodename)s_subnode0'
p6560
aS'%(nodename)s_subnode1'
p6561
asg409
I3
sg20
S'Composite{(i0 - (i1 * i2))}'
p6562
sg411
(g403
g403
g403
tp6563
sg187
(lp6564
g1
(g389
g3
NtRp6565
(dp6566
g32
S'auto_3327'
p6567
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p6568
(dp6569
g38
(lp6570
sbsg20
Nsg47
g1
(g162
g3
NtRp6571
(dp6572
g15
(lp6573
g6544
ag1
(g389
g3
NtRp6574
(dp6575
g32
S'auto_3326'
p6576
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p6577
(dp6578
g38
(lp6579
sbsg20
Nsg47
g1
(g162
g3
NtRp6580
(dp6581
g15
(lp6582
g6549
ag6554
asg35
(itheano.gof.utils
scratchpad
p6583
(dp6584
bsg187
(lp6585
g6574
asg193
g2300
sbsg48
g403
sbasg35
(itheano.gof.utils
scratchpad
p6586
(dp6587
bsg187
(lp6588
g6565
asg193
g1999
sbsg48
g403
sbasg449
S'{\nnpy_float32 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i1)s * %(i2)s;\n%(o0)s = %(i0)s - V%(id)s_tmp1;\n}\n'
p6589
sg451
(g403
tp6590
sg438
g1
(g453
g3
NtRp6591
(dp6592
g456
(I0
tp6593
sbsg197
g198
sg458
I1
sbsg6331
I01
sg459
(dp6594
I0
(lp6595
I0
assg6334
g1
(g6335
g3
NtRp6596
(dp6597
g384
g6541
sg6331
I01
sg463
g6540
sbsbsbI1
tp6598
asg32
S'auto_2570'
p6599
sg35
(itheano.gof.utils
scratchpad
p6600
(dp6601
g38
(lp6602
sbsg1018
g70
(g71
(g72
(I0
tS'b'
tRp6603
(I1
(I1
tg74
I00
S'\x00\x00\x80>'
tbtRp6604
sbag5808
asg153
g5456
sg187
(lp6605
g1
(g221
g3
NtRp6606
(dp6607
g34
I0
sg20
Nsg153
g5456
sg160
(lp6608
(g369
I4
tp6609
asg32
S'auto_3300'
p6610
sg35
(itheano.gof.utils
scratchpad
p6611
(dp6612
g38
(lp6613
sbsg47
g5811
sg48
g1
(g77
g3
NtRp6614
(dp6615
g52
(I00
tp6616
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p6617
(dp6618
bsg191
(dp6619
sg193
g1
(g6225
g3
NtRp6620
(dp6621
g463
(dp6622
I0
I0
ssg197
g198
sg384
g1
(g385
g3
NtRp6623
(dp6624
g15
(lp6625
g1
(g389
g3
NtRp6626
(dp6627
g32
S'auto_3290'
p6628
sg34
Nsg35
(itheano.gof.utils
scratchpad
p6629
(dp6630
bsg20
Nsg47
Nsg48
g403
sbag1
(g389
g3
NtRp6631
(dp6632
g32
S'auto_3291'
p6633
sg34
Nsg35
(itheano.gof.utils
scratchpad
p6634
(dp6635
bsg20
Nsg47
Nsg48
g403
sbag1
(g389
g3
NtRp6636
(dp6637
g32
S'auto_3292'
p6638
sg34
Nsg35
(itheano.gof.utils
scratchpad
p6639
(dp6640
bsg20
Nsg47
Nsg48
g403
sbasg405
(lp6641
S'%(nodename)s_subnode0'
p6642
aS'%(nodename)s_subnode1'
p6643
asg409
I3
sg20
S'Composite{(i0 - (i1 * i2))}'
p6644
sg411
(g403
g403
g403
tp6645
sg187
(lp6646
g1
(g389
g3
NtRp6647
(dp6648
g32
S'auto_3294'
p6649
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p6650
(dp6651
g38
(lp6652
sbsg20
Nsg47
g1
(g162
g3
NtRp6653
(dp6654
g15
(lp6655
g6626
ag1
(g389
g3
NtRp6656
(dp6657
g32
S'auto_3293'
p6658
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p6659
(dp6660
g38
(lp6661
sbsg20
Nsg47
g1
(g162
g3
NtRp6662
(dp6663
g15
(lp6664
g6631
ag6636
asg35
(itheano.gof.utils
scratchpad
p6665
(dp6666
bsg187
(lp6667
g6656
asg193
g2300
sbsg48
g403
sbasg35
(itheano.gof.utils
scratchpad
p6668
(dp6669
bsg187
(lp6670
g6647
asg193
g1999
sbsg48
g403
sbasg449
S'{\nnpy_float32 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i1)s * %(i2)s;\n%(o0)s = %(i0)s - V%(id)s_tmp1;\n}\n'
p6671
sg451
(g403
tp6672
sg438
g1
(g453
g3
NtRp6673
(dp6674
g456
(I0
tp6675
sbsg197
g198
sg458
I1
sbsg6331
I01
sg459
(dp6676
I0
(lp6677
I0
assg6334
g1
(g6335
g3
NtRp6678
(dp6679
g384
g6623
sg6331
I01
sg463
g6622
sbsbsbI2
tp6680
asg32
S'auto_2603'
p6681
sg35
(itheano.gof.utils
scratchpad
p6682
(dp6683
g38
(lp6684
sbsg47
g5804
sg48
g1
(g77
g3
NtRp6685
(dp6686
g52
(I00
tp6687
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p6688
(dp6689
bsg191
(dp6690
sg193
g2809
sbI0
tp6691
asg32
S'auto_2827'
p6692
sg35
(itheano.gof.utils
scratchpad
p6693
(dp6694
g38
(lp6695
sbsg47
g5784
sg48
g1
(g49
g3
NtRp6696
(dp6697
g52
(I00
tp6698
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p6699
(dp6700
bsg191
(dp6701
sg193
g1
(g381
g3
NtRp6702
(dp6703
g20
Nsg384
g1
(g385
g3
NtRp6704
(dp6705
g15
(lp6706
g1
(g389
g3
NtRp6707
(dp6708
g32
S'auto_2816'
p6709
sg34
Nsg35
(itheano.gof.utils
scratchpad
p6710
(dp6711
S'test_value'
p6712
g5755
(g58
S'\x00\x00\x00\x00\x00\x00\x00@'
tRp6713
sbsg20
Nsg47
Nsg48
g396
sbag1
(g389
g3
NtRp6714
(dp6715
g32
S'auto_2817'
p6716
sg34
Nsg35
(itheano.gof.utils
scratchpad
p6717
(dp6718
bsg20
Nsg47
Nsg48
g396
sbasg405
(lp6719
S'%(nodename)s_subnode0'
p6720
aS'%(nodename)s_subnode1'
p6721
asg409
I2
sg20
S'Composite{Cast{float32}((i0 * i1))}'
p6722
sg411
(g396
g396
tp6723
sg187
(lp6724
g1
(g389
g3
NtRp6725
(dp6726
g32
S'auto_2819'
p6727
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p6728
(dp6729
g38
(lp6730
sbsg20
Nsg47
g1
(g162
g3
NtRp6731
(dp6732
g15
(lp6733
g1
(g389
g3
NtRp6734
(dp6735
g32
S'auto_2818'
p6736
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p6737
(dp6738
g38
(lp6739
sbsg20
Nsg47
g1
(g162
g3
NtRp6740
(dp6741
g15
(lp6742
g6707
ag6714
asg35
(itheano.gof.utils
scratchpad
p6743
(dp6744
bsg187
(lp6745
g6734
asg193
g2300
sbsg48
g396
sbasg35
(itheano.gof.utils
scratchpad
p6746
(dp6747
bsg187
(lp6748
g6725
asg193
g2786
sbsg48
g403
sbasg449
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i0)s * %(i1)s;\n%(o0)s = (npy_float32)V%(id)s_tmp1;\n}\n'
p6749
sg451
(g403
tp6750
sg197
g198
sg458
I1
sbsg459
(dp6751
sg462
Nsg463
(dp6752
sg465
I00
sg197
g198
sbsbI1
tp6753
asg32
S'auto_2514'
p6754
sg35
(itheano.gof.utils
scratchpad
p6755
(dp6756
g38
(lp6757
sbsg47
g5777
sg48
g1
(g49
g3
NtRp6758
(dp6759
g52
(I00
tp6760
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p6761
(dp6762
bsg191
(dp6763
sg193
g5375
sbI0
tp6764
asg32
S'auto_3395'
p6765
sg35
(itheano.gof.utils
scratchpad
p6766
(dp6767
g38
(lp6768
sbsg47
g5733
sg48
g1
(g49
g3
NtRp6769
(dp6770
g52
(I00
I00
tp6771
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg193
g1
(g381
g3
NtRp6772
(dp6773
g20
Nsg384
g1
(g2299
g3
NtRp6774
(dp6775
g438
g1
(g453
g3
NtRp6776
(dp6777
g456
(I0
tp6778
sbsg197
g198
sg20
Nsbsg459
(dp6779
I0
(lp6780
I0
assg462
g2306
sg463
(dp6781
I0
I0
ssg465
I00
sg197
g198
sbsbI0
tp6782
a(g5740
I1
tp6783
asg32
S'auto_2040'
p6784
sg35
(itheano.gof.utils
scratchpad
p6785
(dp6786
g38
g1854
sbsg47
g5626
sg48
g2008
sbasg35
(itheano.gof.utils
scratchpad
p6787
(dp6788
bsg191
(dp6789
sg193
g1996
sbI0
tp6790
a(g5620
I1
tp6791
asg32
S'auto_3379'
p6792
sg35
(itheano.gof.utils
scratchpad
p6793
(dp6794
g38
(lp6795
sbsg47
g5831
sg48
g1
(g49
g3
NtRp6796
(dp6797
g52
(I00
I00
tp6798
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg153
g5456
sg187
(lp6799
g5736
asg35
(itheano.gof.utils
scratchpad
p6800
(dp6801
bsg191
(dp6802
sg193
g1
(g381
g3
NtRp6803
(dp6804
g20
Nsg384
g1
(g385
g3
NtRp6805
(dp6806
g15
(lp6807
g1
(g389
g3
NtRp6808
(dp6809
g32
S'auto_3380'
p6810
sg34
Nsg35
(itheano.gof.utils
scratchpad
p6811
(dp6812
bsg20
Nsg47
Nsg48
g396
sbag1
(g389
g3
NtRp6813
(dp6814
g32
S'auto_3381'
p6815
sg34
Nsg35
(itheano.gof.utils
scratchpad
p6816
(dp6817
bsg20
Nsg47
Nsg48
g396
sbasg405
(lp6818
S'%(nodename)s_subnode0'
p6819
aS'%(nodename)s_subnode1'
p6820
asg409
I2
sg20
S'Composite{(i0 - sqr(i1))}'
p6821
sg411
(g396
g396
tp6822
sg187
(lp6823
g1
(g389
g3
NtRp6824
(dp6825
g32
S'auto_3383'
p6826
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p6827
(dp6828
g38
(lp6829
sbsg20
Nsg47
g1
(g162
g3
NtRp6830
(dp6831
g15
(lp6832
g6808
ag1
(g389
g3
NtRp6833
(dp6834
g32
S'auto_3382'
p6835
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p6836
(dp6837
g38
(lp6838
sbsg20
Nsg47
g1
(g162
g3
NtRp6839
(dp6840
g15
(lp6841
g6813
asg35
(itheano.gof.utils
scratchpad
p6842
(dp6843
bsg187
(lp6844
g6833
asg193
g2581
sbsg48
g396
sbasg35
(itheano.gof.utils
scratchpad
p6845
(dp6846
bsg187
(lp6847
g6824
asg193
g1999
sbsg48
g396
sbasg449
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i1)s * %(i1)s;\n%(o0)s = %(i0)s - V%(id)s_tmp1;\n}\n'
p6848
sg451
(g396
tp6849
sg438
g1
(g453
g3
NtRp6850
(dp6851
g456
(I1
tp6852
sbsg197
g198
sg458
I1
sbsg459
(dp6853
I0
(lp6854
I1
assg462
Nsg463
(dp6855
I0
I1
ssg465
I00
sg197
g198
sbsbI0
tp6856
a(g5611
I1
tp6857
asg32
S'auto_2301'
p6858
sg35
(itheano.gof.utils
scratchpad
p6859
(dp6860
g38
(lp6861
g5089
asg1014
g5755
(g58
S'\x00\x00\x00\x00\x00\x00\xf0?'
tRp6862
sbsg1018
g71
(g72
(I0
tS'b'
tRp6863
(I1
(I1
I1
tg58
I00
S'\x00\x00\x00\x00\x00\x00\xf0?'
tbsbag5544
asg153
g5456
sg187
(lp6864
g6091
asg35
(itheano.gof.utils
scratchpad
p6865
(dp6866
bsg191
(dp6867
sg193
g1
(g381
g3
NtRp6868
(dp6869
g20
Nsg384
g1
(g385
g3
NtRp6870
(dp6871
g15
(lp6872
g1
(g389
g3
NtRp6873
(dp6874
g32
S'auto_3401'
p6875
sg34
Nsg35
(itheano.gof.utils
scratchpad
p6876
(dp6877
bsg20
Nsg47
Nsg48
g396
sbag1
(g389
g3
NtRp6878
(dp6879
g32
S'auto_3402'
p6880
sg34
Nsg35
(itheano.gof.utils
scratchpad
p6881
(dp6882
bsg20
Nsg47
Nsg48
g396
sbag1
(g389
g3
NtRp6883
(dp6884
g32
S'auto_3403'
p6885
sg34
Nsg35
(itheano.gof.utils
scratchpad
p6886
(dp6887
bsg20
Nsg47
Nsg48
g396
sbasg405
(lp6888
S'%(nodename)s_subnode0'
p6889
aS'%(nodename)s_subnode1'
p6890
aS'%(nodename)s_subnode2'
p6891
asg409
I3
sg20
S'Composite{(i0 * (i1 - sqr(i2)))}'
p6892
sg411
(g396
g396
g396
tp6893
sg187
(lp6894
g1
(g389
g3
NtRp6895
(dp6896
g32
S'auto_3406'
p6897
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p6898
(dp6899
g38
(lp6900
sbsg20
Nsg47
g1
(g162
g3
NtRp6901
(dp6902
g15
(lp6903
g6873
ag1
(g389
g3
NtRp6904
(dp6905
g32
S'auto_3405'
p6906
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p6907
(dp6908
g38
(lp6909
sbsg20
Nsg47
g1
(g162
g3
NtRp6910
(dp6911
g15
(lp6912
g6878
ag1
(g389
g3
NtRp6913
(dp6914
g32
S'auto_3404'
p6915
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p6916
(dp6917
g38
(lp6918
sbsg20
Nsg47
g1
(g162
g3
NtRp6919
(dp6920
g15
(lp6921
g6883
asg35
(itheano.gof.utils
scratchpad
p6922
(dp6923
bsg187
(lp6924
g6913
asg193
g2581
sbsg48
g396
sbasg35
(itheano.gof.utils
scratchpad
p6925
(dp6926
bsg187
(lp6927
g6904
asg193
g1999
sbsg48
g396
sbasg35
(itheano.gof.utils
scratchpad
p6928
(dp6929
bsg187
(lp6930
g6895
asg193
g2300
sbsg48
g396
sbasg449
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i2)s * %(i2)s;\nnpy_float64 V%(id)s_tmp2;\nV%(id)s_tmp2 = %(i1)s - V%(id)s_tmp1;\n%(o0)s = %(i0)s * V%(id)s_tmp2;\n}\n'
p6931
sg451
(g396
tp6932
sg438
g1
(g453
g3
NtRp6933
(dp6934
g456
(I0
tp6935
sbsg197
g198
sg458
I1
sbsg459
(dp6936
I0
(lp6937
I0
assg462
Nsg463
(dp6938
I0
I0
ssg465
I00
sg197
g198
sbsbI0
tp6939
asg32
S'auto_2095'
p6940
sg35
(itheano.gof.utils
scratchpad
p6941
(dp6942
g38
g1752
sbsg47
g5562
sg48
g2644
sbasg35
(itheano.gof.utils
scratchpad
p6943
(dp6944
bsg191
(dp6945
sg193
g482
sbI0
tp6946
asg32
S'auto_2341'
p6947
sg35
(itheano.gof.utils
scratchpad
p6948
(dp6949
S'values_eq_approx'
p6950
ctheano.tensor.type
values_eq_approx_remove_inf_nan
p6951
sg38
(lp6952
sbsg47
g5740
sg48
g1
(g49
g3
NtRp6953
(dp6954
g52
(I00
I00
tp6955
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg153
g5456
sg187
(lp6956
g6174
asg35
(itheano.gof.utils
scratchpad
p6957
(dp6958
bsg191
(dp6959
sg193
g6495
sbI0
tp6960
asg32
S'auto_3272'
p6961
sg35
(itheano.gof.utils
scratchpad
p6962
(dp6963
g38
(lp6964
g4126
asbsg47
g5548
sg48
g1
(g49
g3
NtRp6965
(dp6966
g52
(I00
I00
tp6967
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p6968
(dp6969
bsg191
(dp6970
sg193
g1
(g1178
g3
NtRp6971
(dp6972
g1181
(lp6973
sg252
(lp6974
I1
aI0
asg250
(lp6975
sg254
g1259
sg1185
I01
sg256
g4146
sg247
(dp6976
I0
(lp6977
I0
assg197
g198
sbsbI0
tp6978
a(g5611
I2
tp6979
asg32
S'auto_3367'
p6980
sg35
(itheano.gof.utils
scratchpad
p6981
(dp6982
g38
(lp6983
sbsg47
g5958
sg48
g1
(g49
g3
NtRp6984
(dp6985
g52
(I00
I00
tp6986
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag5538
asg153
g5456
sg187
(lp6987
g5834
asg35
(itheano.gof.utils
scratchpad
p6988
(dp6989
bsg191
(dp6990
sg193
g482
sbI1
tp6991
asg32
S'auto_1975'
p6992
sg35
(itheano.gof.utils
scratchpad
p6993
(dp6994
g38
g284
sbsg47
g5534
sg48
g304
sbasg35
(itheano.gof.utils
scratchpad
p6995
(dp6996
bsg191
(dp6997
sg193
g302
sbI0
tp6998
a(g5584
I0
tp6999
a(g5528
I0
tp7000
a(g6150
I0
tp7001
asg32
S'auto_1971'
p7002
sg35
(itheano.gof.utils
scratchpad
p7003
(dp7004
g38
g129
sbsg47
Nsg48
g121
sbasg153
g5456
sg187
(lp7005
g5520
asg35
(itheano.gof.utils
scratchpad
p7006
(dp7007
bsg191
(dp7008
sg193
g1
(g6225
g3
NtRp7009
(dp7010
g463
(dp7011
I0
I0
ssg197
g198
sg384
g1
(g2213
g3
NtRp7012
(dp7013
g438
g1
(g453
g3
NtRp7014
(dp7015
g456
(I0
tp7016
sbsg197
g198
sg20
Nsbsg6331
I01
sg459
(dp7017
I0
(lp7018
I0
assg6334
g1
(g6335
g3
NtRp7019
(dp7020
g384
g7012
sg6331
I01
sg463
g7011
sbsbsbsg48
g1
(g77
g3
NtRp7021
(dp7022
g52
(I00
I00
tp7023
sg20
Nsbsbasg153
g5456
sg187
(lp7024
g5509
asg35
(itheano.gof.utils
scratchpad
p7025
(dp7026
bsg191
(dp7027
sg193
g1
(ctheano.sandbox.cuda.basic_ops
GpuCAReduce
p7028
g3
NtRp7029
(dp7030
S'_n_scalar_op_calls'
p7031
I28
sg197
g198
sg384
g436
sS'pre_scalar_op'
p7032
NsS'reduce_mask'
p7033
(I1
I1
tp7034
sbsbsg48
g1
(g77
g3
NtRp7035
(dp7036
g52
(tsg20
Nsbsbasg153
g5456
sg187
(lp7037
g5668
asg35
(itheano.gof.utils
scratchpad
p7038
(dp7039
bsg191
(dp7040
sg193
g1
(g6225
g3
NtRp7041
(dp7042
g463
(dp7043
I0
I1
ssg197
g198
sg384
g1
(g385
g3
NtRp7044
(dp7045
g15
(lp7046
g1
(g389
g3
NtRp7047
(dp7048
g32
S'auto_3279'
p7049
sg34
Nsg35
(itheano.gof.utils
scratchpad
p7050
(dp7051
bsg20
Nsg47
Nsg48
g403
sbag1
(g389
g3
NtRp7052
(dp7053
g32
S'auto_3280'
p7054
sg34
Nsg35
(itheano.gof.utils
scratchpad
p7055
(dp7056
bsg20
Nsg47
Nsg48
g403
sbag1
(g389
g3
NtRp7057
(dp7058
g32
S'auto_3281'
p7059
sg34
Nsg35
(itheano.gof.utils
scratchpad
p7060
(dp7061
bsg20
Nsg47
Nsg48
g403
sbasg405
(lp7062
S'%(nodename)s_subnode0'
p7063
aS'%(nodename)s_subnode1'
p7064
asg409
I3
sg20
S'Composite{(i0 * (i1 + i2))}'
p7065
sg411
(g403
g403
g403
tp7066
sg187
(lp7067
g1
(g389
g3
NtRp7068
(dp7069
g32
S'auto_3283'
p7070
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p7071
(dp7072
g38
(lp7073
sbsg20
Nsg47
g1
(g162
g3
NtRp7074
(dp7075
g15
(lp7076
g7047
ag1
(g389
g3
NtRp7077
(dp7078
g32
S'auto_3282'
p7079
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p7080
(dp7081
g38
(lp7082
sbsg20
Nsg47
g1
(g162
g3
NtRp7083
(dp7084
g15
(lp7085
g7052
ag7057
asg35
(itheano.gof.utils
scratchpad
p7086
(dp7087
bsg187
(lp7088
g7077
asg193
g436
sbsg48
g403
sbasg35
(itheano.gof.utils
scratchpad
p7089
(dp7090
bsg187
(lp7091
g7068
asg193
g2300
sbsg48
g403
sbasg449
S'{\nnpy_float32 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i1)s + %(i2)s;\n%(o0)s = %(i0)s * V%(id)s_tmp1;\n}\n'
p7092
sg451
(g403
tp7093
sg438
g1
(g453
g3
NtRp7094
(dp7095
g456
(I1
tp7096
sbsg197
g198
sg458
I1
sbsg6331
I01
sg459
(dp7097
I0
(lp7098
I1
assg6334
g1
(g6335
g3
NtRp7099
(dp7100
g384
g7044
sg6331
I01
sg463
g7043
sbsbsbI1
tp7101
asg32
S'auto_2710'
p7102
sg35
(itheano.gof.utils
scratchpad
p7103
(dp7104
g38
(lp7105
sbsg47
g5486
sg48
g1
(g77
g3
NtRp7106
(dp7107
g52
(tsg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p7108
(dp7109
bsg191
(dp7110
sg193
g1
(g7028
g3
NtRp7111
(dp7112
g7031
I28
sg197
g198
sg384
g436
sg7032
Nsg7033
(I1
I1
tp7113
sbsbI0
tp7114
asg32
S'auto_3276'
p7115
sg35
(itheano.gof.utils
scratchpad
p7116
(dp7117
g38
(lp7118
sbsg47
g5479
sg48
g1
(g77
g3
NtRp7119
(dp7120
g52
(I00
I00
tp7121
sg20
Nsbsbasg35
(itheano.gof.utils
scratchpad
p7122
(dp7123
bsg191
(dp7124
sg193
g1
(g6225
g3
NtRp7125
(dp7126
g463
(dp7127
I0
I0
ssg197
g198
sg384
g1
(g2213
g3
NtRp7128
(dp7129
g438
g1
(g453
g3
NtRp7130
(dp7131
g456
(I0
tp7132
sbsg197
g198
sg20
Nsbsg6331
I01
sg459
(dp7133
I0
(lp7134
I0
assg6334
g1
(g6335
g3
NtRp7135
(dp7136
g384
g7128
sg6331
I01
sg463
g7127
sbsbsbI0
tp7137
a(g6141
I0
tp7138
asg32
S'auto_1969'
p7139
sg35
(itheano.gof.utils
scratchpad
p7140
(dp7141
g38
g88
sbsg47
Nsg48
g78
sbasg153
g5456
sg187
(lp7142
g5465
asg35
(itheano.gof.utils
scratchpad
p7143
(dp7144
bsg191
(dp7145
sg193
g195
sbsg48
g199
sbasg153
g5456
sg187
(lp7146
g5961
asg35
(itheano.gof.utils
scratchpad
p7147
(dp7148
bsg191
(dp7149
sg193
g482
sbI0
tp7150
a(g6106
I0
tp7151
asg32
S'auto_1967'
p7152
sg35
(itheano.gof.utils
scratchpad
p7153
(dp7154
g38
g39
sbsg47
Nsg48
g50
sbag5629
ag5475
ag5941
ag5531
ag5814
asg567
(itheano.gof.opt
ChangeTracker
p7155
(dp7156
g570
I00
sg571
I0
sbsg187
(lp7157
g5688
ag6347
ag6524
ag6211
ag6606
asg573
(dp7158
I1
I2
sI2
I3
sI3
I4
sI4
I5
ssg575
g1
(g576
g3
NtRp7159
(dp7160
g579
(lp7161
sg581
g582
((lp7162
g5640
ag5534
ag6088
ag5548
ag6161
ag6150
ag5740
ag5951
ag5528
ag5555
ag6095
ag5777
ag5611
ag5654
ag5938
ag5479
ag6127
ag5958
ag5541
ag6106
ag5647
ag5817
ag5665
ag5811
ag6141
ag6066
ag5493
ag5944
ag5462
ag6077
ag5486
ag5626
ag5472
ag5733
ag5517
ag5562
ag5584
ag5784
ag5804
ag5573
ag5831
ag6171
ag5824
ag6134
ag5620
atRp7163
sg585
(itheano.gof.opt
_metadict
p7164
(dp7165
S'd'
(dp7166
g1
(ctheano.tensor.var
TensorConstantSignature
p7167
c__builtin__
tuple
p7168
(g5616
g6863
ttRp7169
(dp7170
S'has_nan'
p7171
I00
sS'_sum'
p7172
g5755
(g58
S'\x00\x00\x00\x00\x00\x00\xf0?'
tRp7173
sS'_no_nan'
p7174
g6863
sbg5614
sg1
(g7167
g7168
(g5745
g5757
ttRp7175
(dp7176
g7171
I00
sg7172
g5755
(g58
S'\x00\x00\x00\x00\x00\x00\x00@'
tRp7177
sg7174
g5757
sbg5743
sg1
(ctheano.sandbox.cuda.var
CudaNdarrayConstantSignature
p7178
g7168
(g6198
g71
(g72
(I0
tS'b'
tRp7179
(I1
(I1
I1
tg74
I00
S'\n\xd7#<'
tbttRp7180
(dp7181
g7171
I00
sg7172
g5755
(g74
S'\n\xd7#<'
tRp7182
sg7174
g7179
sbg6196
sg1
(g7178
g7168
(g6146
g71
(g72
(I0
tS'b'
tRp7183
(I1
(I1
I1
tg74
I00
S'\x00\x00\x80>'
tbttRp7184
(dp7185
g7171
I00
sg7172
g5755
(g74
S'\x00\x00\x80>'
tRp7186
sg7174
g7183
sbg6144
sg1
(g7178
g7168
(g5933
g71
(g72
(I0
tS'b'
tRp7187
(I1
(I1
tg74
I00
S'\x00\x00\x80>'
tbttRp7188
(dp7189
g7171
I00
sg7172
g5755
(g74
S'\x00\x00\x80>'
tRp7190
sg7174
g7187
sbg5931
sg1
(g7178
g7168
(g5499
g71
(g72
(I0
tS'b'
tRp7191
(I1
(tg74
I00
S'\n\xd7#<'
tbttRp7192
(dp7193
g7171
I00
sg7172
g5755
(g74
S'\n\xd7#<'
tRp7194
sg7174
g7191
sbg5497
sg1
(g7167
g7168
(g5789
g5799
ttRp7195
(dp7196
g7171
I00
sg7172
g5755
(g58
S'\x00\x00\x00\x00\x00\x00\x00@'
tRp7197
sg7174
g5799
sbg5787
ssS'l'
(lp7198
sbsg590
g1
(g591
g3
NtRp7199
(dp7200
g594
g1
(g595
g3
NtRp7201
(lp7202
g7201
ag7201
absg598
(dp7203
sbsg600
(lp7204
sg602
g582
((lp7205
I139909113718800
aI139909112417616
aI139909113399248
aI139909112416784
aI139909112530256
aI139909112532432
aI139909105890000
atRp7206
sg604
(itheano.gof.opt
_metadict
p7207
(dp7208
S'd'
(dp7209
g5614
g7169
sg5743
g7175
sg6144
g7184
sg5497
g7192
sg5931
g7188
sg5787
g7195
sg6196
g7180
ssS'l'
(lp7210
sbsbsg609
g1
(g610
g3
NtRp7211
(dp7212
g613
(dp7213
g5961
g1
(g591
g3
NtRp7214
(dp7215
g594
g1
(g595
g3
NtRp7216
(lp7217
g1
(g595
g3
NtRp7218
(lp7219
g7216
ag7216
ag5961
abag7218
absg598
(dp7220
g5961
g7218
ssbsg5651
g1
(g591
g3
NtRp7221
(dp7222
g594
g1
(g595
g3
NtRp7223
(lp7224
g1
(g595
g3
NtRp7225
(lp7226
g7223
ag7223
ag5651
abag7225
absg598
(dp7227
g5651
g7225
ssbsg6153
g1
(g591
g3
NtRp7228
(dp7229
g594
g1
(g595
g3
NtRp7230
(lp7231
g1
(g595
g3
NtRp7232
(lp7233
g7230
ag7230
ag6153
abag7232
absg598
(dp7234
g6153
g7232
ssbsg5941
g1
(g591
g3
NtRp7235
(dp7236
g594
g1
(g595
g3
NtRp7237
(lp7238
g1
(g595
g3
NtRp7239
(lp7240
g1
(g595
g3
NtRp7241
(lp7242
g7237
ag7239
ag5948
abag7237
ag5941
abag7241
absg598
(dp7243
g5948
g7241
sg5941
g7239
ssbsg5814
g1
(g591
g3
NtRp7244
(dp7245
g594
g1
(g595
g3
NtRp7246
(lp7247
g1
(g595
g3
NtRp7248
(lp7249
g1
(g595
g3
NtRp7250
(lp7251
g7246
ag7248
ag5821
abag7246
ag5814
abag7250
absg598
(dp7252
g5821
g7250
sg5814
g7248
ssbsg5637
g1
(g591
g3
NtRp7253
(dp7254
g594
g1
(g595
g3
NtRp7255
(lp7256
g1
(g595
g3
NtRp7257
(lp7258
g7255
ag7255
ag5637
abag7257
absg598
(dp7259
g5637
g7257
ssbsg6138
g1
(g591
g3
NtRp7260
(dp7261
g594
g1
(g595
g3
NtRp7262
(lp7263
g1
(g595
g3
NtRp7264
(lp7265
g7262
ag7262
ag6138
abag7264
absg598
(dp7266
g6138
g7264
ssbsg5834
g1
(g591
g3
NtRp7267
(dp7268
g594
g1
(g595
g3
NtRp7269
(lp7270
g1
(g595
g3
NtRp7271
(lp7272
g7269
ag7269
ag5834
abag7271
absg598
(dp7273
g5834
g7271
ssbsg5623
g1
(g591
g3
NtRp7274
(dp7275
g594
g1
(g595
g3
NtRp7276
(lp7277
g1
(g595
g3
NtRp7278
(lp7279
g7276
ag7276
ag5623
abag7278
absg598
(dp7280
g5623
g7278
ssbsg5608
g1
(g591
g3
NtRp7281
(dp7282
g594
g1
(g595
g3
NtRp7283
(lp7284
g1
(g595
g3
NtRp7285
(lp7286
g7283
ag7283
ag5608
abag7285
absg598
(dp7287
g5608
g7285
ssbsg5490
g1
(g591
g3
NtRp7288
(dp7289
g594
g1
(g595
g3
NtRp7290
(lp7291
g1
(g595
g3
NtRp7292
(lp7293
g7290
ag7290
ag5490
abag7292
absg598
(dp7294
g5490
g7292
ssbsg5531
g1
(g591
g3
NtRp7295
(dp7296
g594
g1
(g595
g3
NtRp7297
(lp7298
g1
(g595
g3
NtRp7299
(lp7300
g1
(g595
g3
NtRp7301
(lp7302
g7297
ag7299
ag5576
abag7297
ag5531
abag7301
absg598
(dp7303
g5576
g7301
sg5531
g7299
ssbsg5475
g1
(g591
g3
NtRp7304
(dp7305
g594
g1
(g595
g3
NtRp7306
(lp7307
g1
(g595
g3
NtRp7308
(lp7309
g7306
ag7306
ag5475
abag7308
absg598
(dp7310
g5475
g7308
ssbssg629
(dp7311
g5961
g5961
sg5651
g5651
sg5637
g5637
sg5475
g5475
sg6138
g6138
sg5941
g5941
sg5814
g5814
sg5576
g5531
sg5821
g5814
sg5623
g5623
sg5834
g5834
sg5948
g5941
sg5608
g5608
sg5490
g5490
sg5531
g5531
sg6153
g6153
ssg631
g632
((lp7312
(lp7313
g5814
ag1
(g591
g3
NtRp7314
(dp7315
g594
g1
(g595
g3
NtRp7316
(lp7317
g1
(g595
g3
NtRp7318
(lp7319
g7316
ag7316
ag5821
abag7318
absg598
(dp7320
g5821
g7318
ssbaa(lp7321
g5531
ag1
(g591
g3
NtRp7322
(dp7323
g594
g1
(g595
g3
NtRp7324
(lp7325
g1
(g595
g3
NtRp7326
(lp7327
g7324
ag7324
ag5576
abag7326
absg598
(dp7328
g5576
g7326
ssbaa(lp7329
g5941
ag1
(g591
g3
NtRp7330
(dp7331
g594
g1
(g595
g3
NtRp7332
(lp7333
g1
(g595
g3
NtRp7334
(lp7335
g7332
ag7332
ag5948
abag7334
absg598
(dp7336
g5948
g7334
ssbaa(lp7337
g5459
ag1
(g591
g3
NtRp7338
(dp7339
g594
g1
(g595
g3
NtRp7340
(lp7341
g1
(g595
g3
NtRp7342
(lp7343
g7340
ag7340
ag6098
abag7342
absg598
(dp7344
g6098
g7342
ssbaa(lp7345
g5544
ag1
(g591
g3
NtRp7346
(dp7347
g594
g1
(g595
g3
NtRp7348
(lp7349
g1
(g595
g3
NtRp7350
(lp7351
g7348
ag7348
ag5552
abag7350
absg598
(dp7352
g5552
g7350
ssbaatRp7353
sg651
g632
((lp7354
(lp7355
g5821
ag5814
aa(lp7356
g5576
ag5531
aa(lp7357
g5948
ag5941
aa(lp7358
g6098
ag5459
aa(lp7359
g5552
ag5544
aatRp7360
sg153
g5456
sg656
I01
sg160
g632
((lp7361
(lp7362
g5814
ag632
((lp7363
(lp7364
g5817
aI1
aa(lp7365
g5811
aI1
aatRp7366
aa(lp7367
g5821
ag632
((lp7368
(lp7369
g5824
aI1
aatRp7370
aa(lp7371
g5531
ag632
((lp7372
(lp7373
g5534
aI1
aa(lp7374
g5584
aI1
aa(lp7375
g5528
aI1
aa(lp7376
g6150
aI1
aatRp7377
aa(lp7378
g5538
ag632
((lp7379
(lp7380
g5541
aI1
aatRp7381
aa(lp7382
g5576
ag632
((lp7383
(lp7384
g5573
aI1
aatRp7385
aa(lp7386
g1
(g221
g3
NtRp7387
(dp7388
g34
I0
sg20
Nsg153
g5456
sg160
(lp7389
sg32
S'auto_2617'
p7390
sg35
(itheano.gof.utils
scratchpad
p7391
(dp7392
g38
(lp7393
sbsg47
g1
(g162
g3
NtRp7394
(dp7395
g15
(lp7396
g5531
asg153
g5456
sg187
(lp7397
g7387
asg35
(itheano.gof.utils
scratchpad
p7398
(dp7399
bsg191
(dp7400
sg193
g1
(g6225
g3
NtRp7401
(dp7402
g463
(dp7403
sg197
g198
sg384
g2214
sg6331
I01
sg459
(dp7404
sg6334
g1
(g6335
g3
NtRp7405
(dp7406
g384
g2214
sg6331
I01
sg463
g7403
sbsbsbsg48
g1
(g77
g3
NtRp7407
(dp7408
g52
(I00
I00
tp7409
sg20
Nsbsbag632
((ltRp7410
aa(lp7411
g5941
ag632
((lp7412
(lp7413
g5944
aI1
aa(lp7414
g5938
aI1
aatRp7415
aa(lp7416
g5948
ag632
((lp7417
(lp7418
g5951
aI1
aatRp7419
aa(lp7420
g5475
ag632
((lp7421
(lp7422
g5472
aI1
aa(lp7423
g5479
aI1
aa(lp7424
g6141
aI1
aatRp7425
aa(lp7426
g5465
ag632
((lp7427
(lp7428
g5462
aI1
aatRp7429
aa(lp7430
g1
(g221
g3
NtRp7431
(dp7432
g34
I0
sg20
Nsg153
g5456
sg160
(lp7433
sg32
S'auto_2610'
p7434
sg35
(itheano.gof.utils
scratchpad
p7435
(dp7436
g38
(lp7437
sbsg47
g1
(g162
g3
NtRp7438
(dp7439
g15
(lp7440
g5475
asg153
g5456
sg187
(lp7441
g7431
asg35
(itheano.gof.utils
scratchpad
p7442
(dp7443
bsg191
(dp7444
sg193
g1
(g6225
g3
NtRp7445
(dp7446
g463
(dp7447
sg197
g198
sg384
g2214
sg6331
I01
sg459
(dp7448
sg6334
g1
(g6335
g3
NtRp7449
(dp7450
g384
g2214
sg6331
I01
sg463
g7447
sbsbsbsg48
g1
(g77
g3
NtRp7451
(dp7452
g52
(I00
I00
tp7453
sg20
Nsbsbag632
((ltRp7454
aa(lp7455
g5459
ag632
((lp7456
(lp7457
g5462
aI1
aa(lp7458
g6106
aI1
aatRp7459
aa(lp7460
g1
(g29
g3
NtRp7461
(dp7462
g34
I0
sg20
g1713
sg153
g5456
sg160
(lp7463
sg32
S'auto_1983'
p7464
sg35
(itheano.gof.utils
scratchpad
p7465
(dp7466
g38
g1703
sbsg47
g1
(g162
g3
NtRp7467
(dp7468
g15
(lp7469
g5459
asg153
g5456
sg187
(lp7470
g7461
asg35
(itheano.gof.utils
scratchpad
p7471
(dp7472
bsg191
(dp7473
sg193
g1720
sbsg48
g1726
sbag632
((ltRp7474
aa(lp7475
g5828
ag632
((lp7476
(lp7477
g5831
aI1
aatRp7478
aa(lp7479
g5565
ag632
((lp7480
(lp7481
g5562
aI1
aatRp7482
aa(lp7483
g5509
ag632
((lp7484
(lp7485
g5493
aI1
aatRp7486
aa(lp7487
g5955
ag632
((lp7488
(lp7489
g5958
aI1
aatRp7490
aa(lp7491
g5961
ag632
((lp7492
(lp7493
g5958
aI1
aatRp7494
aa(lp7495
g5490
ag632
((lp7496
(lp7497
g5493
aI1
aatRp7498
aa(lp7499
g1
(g29
g3
NtRp7500
(dp7501
g34
I0
sg20
Nsg153
g5456
sg160
(lp7502
sg32
S'auto_2941'
p7503
sg35
(itheano.gof.utils
scratchpad
p7504
(dp7505
g38
(lp7506
sbsg47
g1
(g162
g3
NtRp7507
(dp7508
g15
(lp7509
g5961
ag5955
asg153
g5456
sg187
(lp7510
g7500
asg35
(itheano.gof.utils
scratchpad
p7511
(dp7512
bsg191
(dp7513
sg193
g1
(g381
g3
NtRp7514
(dp7515
g20
Nsg384
g1
(g385
g3
NtRp7516
(dp7517
g15
(lp7518
g1
(g389
g3
NtRp7519
(dp7520
g32
S'auto_2930'
p7521
sg34
Nsg35
(itheano.gof.utils
scratchpad
p7522
(dp7523
bsg20
Nsg47
Nsg48
g396
sbag1
(g389
g3
NtRp7524
(dp7525
g32
S'auto_2931'
p7526
sg34
Nsg35
(itheano.gof.utils
scratchpad
p7527
(dp7528
bsg20
Nsg47
Nsg48
g403
sbasg405
(lp7529
S'%(nodename)s_subnode0'
p7530
aS'%(nodename)s_subnode1'
p7531
asg409
I2
sg20
S'Composite{tanh((i0 + i1))}'
p7532
sg411
(g396
g403
tp7533
sg187
(lp7534
g1
(g389
g3
NtRp7535
(dp7536
g32
S'auto_2933'
p7537
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p7538
(dp7539
g38
g5998
sbsg20
Nsg47
g1
(g162
g3
NtRp7540
(dp7541
g15
(lp7542
g1
(g389
g3
NtRp7543
(dp7544
g32
S'auto_2932'
p7545
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p7546
(dp7547
g38
g6007
sbsg20
Nsg47
g1
(g162
g3
NtRp7548
(dp7549
g15
(lp7550
g7519
ag7524
asg35
(itheano.gof.utils
scratchpad
p7551
(dp7552
bsg187
(lp7553
g7543
asg193
g436
sbsg48
g396
sbasg35
(itheano.gof.utils
scratchpad
p7554
(dp7555
bsg187
(lp7556
g7535
asg193
g445
sbsg48
g396
sbasg449
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i0)s + %(i1)s;\n%(o0)s = tanh(V%(id)s_tmp1);\n}\n'
p7557
sg451
(g396
tp7558
sg197
g198
sg458
I1
sbsg459
(dp7559
sg462
Nsg463
(dp7560
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp7561
(dp7562
g52
(I00
I00
tp7563
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag632
((ltRp7564
aa(lp7565
g5497
ag632
((lp7566
(lp7567
g5493
aI1
aatRp7568
aa(lp7569
g1
(g221
g3
NtRp7570
(dp7571
g34
I0
sg20
Nsg153
g5456
sg160
(lp7572
sg32
S'auto_3241'
p7573
sg35
(itheano.gof.utils
scratchpad
p7574
(dp7575
g38
(lp7576
sbsg47
g1
(g162
g3
NtRp7577
(dp7578
g15
(lp7579
g5497
ag5490
ag5509
asg153
g5456
sg187
(lp7580
g7570
asg35
(itheano.gof.utils
scratchpad
p7581
(dp7582
bsg191
(dp7583
sg193
g1
(g6225
g3
NtRp7584
(dp7585
g463
(dp7586
sg197
g198
sg384
g1
(g385
g3
NtRp7587
(dp7588
g15
(lp7589
g1
(g389
g3
NtRp7590
(dp7591
g32
S'auto_3231'
p7592
sg34
Nsg35
(itheano.gof.utils
scratchpad
p7593
(dp7594
bsg20
Nsg47
Nsg48
g403
sbag1
(g389
g3
NtRp7595
(dp7596
g32
S'auto_3232'
p7597
sg34
Nsg35
(itheano.gof.utils
scratchpad
p7598
(dp7599
bsg20
Nsg47
Nsg48
g403
sbag1
(g389
g3
NtRp7600
(dp7601
g32
S'auto_3233'
p7602
sg34
Nsg35
(itheano.gof.utils
scratchpad
p7603
(dp7604
bsg20
Nsg47
Nsg48
g403
sbasg405
(lp7605
S'%(nodename)s_subnode0'
p7606
aS'%(nodename)s_subnode1'
p7607
asg409
I3
sg20
S'Composite{(i0 * (i1 + i2))}'
p7608
sg411
(g403
g403
g403
tp7609
sg187
(lp7610
g1
(g389
g3
NtRp7611
(dp7612
g32
S'auto_3235'
p7613
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p7614
(dp7615
g38
g7073
sbsg20
Nsg47
g1
(g162
g3
NtRp7616
(dp7617
g15
(lp7618
g7590
ag1
(g389
g3
NtRp7619
(dp7620
g32
S'auto_3234'
p7621
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p7622
(dp7623
g38
g7082
sbsg20
Nsg47
g1
(g162
g3
NtRp7624
(dp7625
g15
(lp7626
g7595
ag7600
asg35
(itheano.gof.utils
scratchpad
p7627
(dp7628
bsg187
(lp7629
g7619
asg193
g436
sbsg48
g403
sbasg35
(itheano.gof.utils
scratchpad
p7630
(dp7631
bsg187
(lp7632
g7611
asg193
g2300
sbsg48
g403
sbasg449
S'{\nnpy_float32 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i1)s + %(i2)s;\n%(o0)s = %(i0)s * V%(id)s_tmp1;\n}\n'
p7633
sg451
(g403
tp7634
sg197
g198
sg458
I1
sbsg6331
I01
sg459
(dp7635
sg6334
g1
(g6335
g3
NtRp7636
(dp7637
g384
g7587
sg6331
I01
sg463
g7586
sbsbsbsg48
g1
(g77
g3
NtRp7638
(dp7639
g52
(tsg20
Nsbsbag632
((ltRp7640
aa(lp7641
g5834
ag632
((lp7642
(lp7643
g5831
aI1
aatRp7644
aa(lp7645
g1
(g29
g3
NtRp7646
(dp7647
g34
I0
sg20
Nsg153
g5456
sg160
(lp7648
sg32
S'auto_2026'
p7649
sg35
(itheano.gof.utils
scratchpad
p7650
(dp7651
g38
g4125
sbsg47
g1
(g162
g3
NtRp7652
(dp7653
g15
(lp7654
g7500
asg153
g5456
sg187
(lp7655
g7646
asg35
(itheano.gof.utils
scratchpad
p7656
(dp7657
bsg191
(dp7658
sg193
g4141
sbsg48
g4147
sbag632
((ltRp7659
aa(lp7660
g5657
ag632
((lp7661
(lp7662
g5654
aI1
aatRp7663
aa(lp7664
g1
(g29
g3
NtRp7665
(dp7666
g34
I0
sg20
Nsg153
g5456
sg160
(lp7667
sg32
S'auto_2923'
p7668
sg35
(itheano.gof.utils
scratchpad
p7669
(dp7670
g38
(lp7671
sbsg47
g1
(g162
g3
NtRp7672
(dp7673
g15
(lp7674
g5834
ag5828
asg153
g5456
sg187
(lp7675
g7665
asg35
(itheano.gof.utils
scratchpad
p7676
(dp7677
bsg191
(dp7678
sg193
g1
(g381
g3
NtRp7679
(dp7680
g20
Nsg384
g1
(g385
g3
NtRp7681
(dp7682
g15
(lp7683
g1
(g389
g3
NtRp7684
(dp7685
g32
S'auto_2912'
p7686
sg34
Nsg35
(itheano.gof.utils
scratchpad
p7687
(dp7688
bsg20
Nsg47
Nsg48
g396
sbag1
(g389
g3
NtRp7689
(dp7690
g32
S'auto_2913'
p7691
sg34
Nsg35
(itheano.gof.utils
scratchpad
p7692
(dp7693
bsg20
Nsg47
Nsg48
g403
sbasg405
(lp7694
S'%(nodename)s_subnode0'
p7695
aS'%(nodename)s_subnode1'
p7696
asg409
I2
sg20
S'Composite{tanh((i0 + i1))}'
p7697
sg411
(g396
g403
tp7698
sg187
(lp7699
g1
(g389
g3
NtRp7700
(dp7701
g32
S'auto_2915'
p7702
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p7703
(dp7704
g38
g5871
sbsg20
Nsg47
g1
(g162
g3
NtRp7705
(dp7706
g15
(lp7707
g1
(g389
g3
NtRp7708
(dp7709
g32
S'auto_2914'
p7710
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p7711
(dp7712
g38
g5880
sbsg20
Nsg47
g1
(g162
g3
NtRp7713
(dp7714
g15
(lp7715
g7684
ag7689
asg35
(itheano.gof.utils
scratchpad
p7716
(dp7717
bsg187
(lp7718
g7708
asg193
g436
sbsg48
g396
sbasg35
(itheano.gof.utils
scratchpad
p7719
(dp7720
bsg187
(lp7721
g7700
asg193
g445
sbsg48
g396
sbasg449
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i0)s + %(i1)s;\n%(o0)s = tanh(V%(id)s_tmp1);\n}\n'
p7722
sg451
(g396
tp7723
sg197
g198
sg458
I1
sbsg459
(dp7724
sg462
Nsg463
(dp7725
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp7726
(dp7727
g52
(I00
I00
tp7728
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag632
((ltRp7729
aa(lp7730
g5614
ag632
((lp7731
(lp7732
g5620
aI1
aa(lp7733
g5611
aI1
aatRp7734
aa(lp7735
g1
(g29
g3
NtRp7736
(dp7737
g34
I0
sg20
Nsg153
g5456
sg160
(lp7738
sg32
S'auto_2903'
p7739
sg35
(itheano.gof.utils
scratchpad
p7740
(dp7741
g38
(lp7742
sbsg47
g1
(g162
g3
NtRp7743
(dp7744
g15
(lp7745
g5614
ag5623
asg153
g5456
sg187
(lp7746
g7736
asg35
(itheano.gof.utils
scratchpad
p7747
(dp7748
bsg191
(dp7749
sg193
g1
(g381
g3
NtRp7750
(dp7751
g20
Nsg384
g1
(g385
g3
NtRp7752
(dp7753
g15
(lp7754
g1
(g389
g3
NtRp7755
(dp7756
g32
S'auto_2892'
p7757
sg34
Nsg35
(itheano.gof.utils
scratchpad
p7758
(dp7759
bsg20
Nsg47
Nsg48
g396
sbag1
(g389
g3
NtRp7760
(dp7761
g32
S'auto_2893'
p7762
sg34
Nsg35
(itheano.gof.utils
scratchpad
p7763
(dp7764
bsg20
Nsg47
Nsg48
g396
sbasg405
(lp7765
S'%(nodename)s_subnode0'
p7766
aS'%(nodename)s_subnode1'
p7767
asg409
I2
sg20
S'Composite{(i0 - sqr(i1))}'
p7768
sg411
(g396
g396
tp7769
sg187
(lp7770
g1
(g389
g3
NtRp7771
(dp7772
g32
S'auto_2895'
p7773
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p7774
(dp7775
g38
g6829
sbsg20
Nsg47
g1
(g162
g3
NtRp7776
(dp7777
g15
(lp7778
g7755
ag1
(g389
g3
NtRp7779
(dp7780
g32
S'auto_2894'
p7781
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p7782
(dp7783
g38
g6838
sbsg20
Nsg47
g1
(g162
g3
NtRp7784
(dp7785
g15
(lp7786
g7760
asg35
(itheano.gof.utils
scratchpad
p7787
(dp7788
bsg187
(lp7789
g7779
asg193
g2581
sbsg48
g396
sbasg35
(itheano.gof.utils
scratchpad
p7790
(dp7791
bsg187
(lp7792
g7771
asg193
g1999
sbsg48
g396
sbasg449
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i1)s * %(i1)s;\n%(o0)s = %(i0)s - V%(id)s_tmp1;\n}\n'
p7793
sg451
(g396
tp7794
sg197
g198
sg458
I1
sbsg459
(dp7795
sg462
Nsg463
(dp7796
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp7797
(dp7798
g52
(I00
I00
tp7799
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag632
((ltRp7800
aa(lp7801
g5629
ag632
((lp7802
(lp7803
g5626
aI1
aatRp7804
aa(lp7805
g5637
ag632
((lp7806
(lp7807
g5640
aI1
aa(lp7808
g5733
aI1
aa(lp7809
g5740
aI1
aatRp7810
aa(lp7811
g1
(g29
g3
NtRp7812
(dp7813
g34
I0
sg20
Nsg153
g5456
sg160
(lp7814
sg32
S'auto_2511'
p7815
sg35
(itheano.gof.utils
scratchpad
p7816
(dp7817
g38
(lp7818
sbsg47
g1
(g162
g3
NtRp7819
(dp7820
g15
(lp7821
g5637
ag5736
asg153
g5456
sg187
(lp7822
g7812
asg35
(itheano.gof.utils
scratchpad
p7823
(dp7824
bsg191
(dp7825
sg193
g2297
sbsg48
g1
(g49
g3
NtRp7826
(dp7827
g52
(I00
I00
tp7828
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag632
((ltRp7829
aa(lp7830
g5743
ag632
((lp7831
(lp7832
g5740
aI1
aatRp7833
aa(lp7834
g5558
ag632
((lp7835
(lp7836
g5555
aI1
aa(lp7837
g5562
aI1
aatRp7838
aa(lp7839
g5644
ag632
((lp7840
(lp7841
g5647
aI1
aatRp7842
aa(lp7843
g5781
ag632
((lp7844
(lp7845
g5784
aI1
aatRp7846
aa(lp7847
g6174
ag632
((lp7848
(lp7849
g6171
aI1
aatRp7850
aa(lp7851
g5608
ag632
((lp7852
(lp7853
g5611
aI1
aatRp7854
aa(lp7855
g5651
ag632
((lp7856
(lp7857
g5654
aI1
aatRp7858
aa(lp7859
g5787
ag632
((lp7860
(lp7861
g5784
aI1
aatRp7862
aa(lp7863
g5801
ag632
((lp7864
(lp7865
g5804
aI1
aatRp7866
aa(lp7867
g6164
ag632
((lp7868
(lp7869
g6161
aI1
aatRp7870
aa(lp7871
g1
(g29
g3
NtRp7872
(dp7873
g34
I0
sg20
Nsg153
g5456
sg160
(lp7874
sg32
S'auto_2872'
p7875
sg35
(itheano.gof.utils
scratchpad
p7876
(dp7877
g38
(lp7878
sbsg47
g1
(g162
g3
NtRp7879
(dp7880
g15
(lp7881
g5608
ag5614
ag5544
asg153
g5456
sg187
(lp7882
g7872
asg35
(itheano.gof.utils
scratchpad
p7883
(dp7884
bsg191
(dp7885
sg193
g1
(g381
g3
NtRp7886
(dp7887
g20
Nsg384
g1
(g385
g3
NtRp7888
(dp7889
g15
(lp7890
g1
(g389
g3
NtRp7891
(dp7892
g32
S'auto_2855'
p7893
sg34
Nsg35
(itheano.gof.utils
scratchpad
p7894
(dp7895
bsg20
Nsg47
Nsg48
g396
sbag1
(g389
g3
NtRp7896
(dp7897
g32
S'auto_2856'
p7898
sg34
Nsg35
(itheano.gof.utils
scratchpad
p7899
(dp7900
bsg20
Nsg47
Nsg48
g396
sbag1
(g389
g3
NtRp7901
(dp7902
g32
S'auto_2857'
p7903
sg34
Nsg35
(itheano.gof.utils
scratchpad
p7904
(dp7905
bsg20
Nsg47
Nsg48
g396
sbasg405
(lp7906
S'%(nodename)s_subnode0'
p7907
aS'%(nodename)s_subnode1'
p7908
aS'%(nodename)s_subnode2'
p7909
asg409
I3
sg20
S'Composite{(i0 * (i1 - sqr(i2)))}'
p7910
sg411
(g396
g396
g396
tp7911
sg187
(lp7912
g1
(g389
g3
NtRp7913
(dp7914
g32
S'auto_2861'
p7915
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p7916
(dp7917
g38
g6900
sbsg20
Nsg47
g1
(g162
g3
NtRp7918
(dp7919
g15
(lp7920
g7891
ag1
(g389
g3
NtRp7921
(dp7922
g32
S'auto_2860'
p7923
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p7924
(dp7925
g38
g6909
sbsg20
Nsg47
g1
(g162
g3
NtRp7926
(dp7927
g15
(lp7928
g7896
ag1
(g389
g3
NtRp7929
(dp7930
g32
S'auto_2859'
p7931
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p7932
(dp7933
g38
g6918
sbsg20
Nsg47
g1
(g162
g3
NtRp7934
(dp7935
g15
(lp7936
g7901
asg35
(itheano.gof.utils
scratchpad
p7937
(dp7938
bsg187
(lp7939
g7929
asg193
g2581
sbsg48
g396
sbasg35
(itheano.gof.utils
scratchpad
p7940
(dp7941
bsg187
(lp7942
g7921
asg193
g1999
sbsg48
g396
sbasg35
(itheano.gof.utils
scratchpad
p7943
(dp7944
bsg187
(lp7945
g7913
asg193
g2300
sbsg48
g396
sbasg449
S'{\nnpy_float64 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i2)s * %(i2)s;\nnpy_float64 V%(id)s_tmp2;\nV%(id)s_tmp2 = %(i1)s - V%(id)s_tmp1;\n%(o0)s = %(i0)s * V%(id)s_tmp2;\n}\n'
p7946
sg451
(g396
tp7947
sg197
g198
sg458
I1
sbsg459
(dp7948
sg462
Nsg463
(dp7949
sg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp7950
(dp7951
g52
(I00
I00
tp7952
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag632
((ltRp7953
aa(lp7954
g1
(g29
g3
NtRp7955
(dp7956
g34
I0
sg20
Nsg153
g5456
sg160
(lp7957
sg32
S'auto_2054'
p7958
sg35
(itheano.gof.utils
scratchpad
p7959
(dp7960
g38
g2102
sbsg47
g1
(g162
g3
NtRp7961
(dp7962
g15
(lp7963
g5651
ag5657
asg153
g5456
sg187
(lp7964
g7955
asg35
(itheano.gof.utils
scratchpad
p7965
(dp7966
bsg191
(dp7967
sg193
g933
sbsg48
g2314
sbag632
((ltRp7968
aa(lp7969
g5808
ag632
((lp7970
(lp7971
g5811
aI1
aatRp7972
aa(lp7973
g6153
ag632
((lp7974
(lp7975
g6150
aI1
aatRp7976
aa(lp7977
g6080
ag632
((lp7978
(lp7979
g6077
aI1
aatRp7980
aa(lp7981
g6124
ag632
((lp7982
(lp7983
g6127
aI1
aatRp7984
aa(lp7985
g5931
ag632
((lp7986
(lp7987
g5811
aI1
aa(lp7988
g5938
aI1
aatRp7989
aa(lp7990
g1
(g221
g3
NtRp7991
(dp7992
g34
I0
sg20
Nsg153
g5456
sg160
(lp7993
sg32
S'auto_3221'
p7994
sg35
(itheano.gof.utils
scratchpad
p7995
(dp7996
g38
(lp7997
sbsg47
g1
(g162
g3
NtRp7998
(dp7999
g15
(lp8000
g5814
ag5931
ag5808
asg153
g5456
sg187
(lp8001
g7991
asg35
(itheano.gof.utils
scratchpad
p8002
(dp8003
bsg191
(dp8004
sg193
g1
(g6225
g3
NtRp8005
(dp8006
g463
(dp8007
sg197
g198
sg384
g1
(g385
g3
NtRp8008
(dp8009
g15
(lp8010
g1
(g389
g3
NtRp8011
(dp8012
g32
S'auto_3211'
p8013
sg34
Nsg35
(itheano.gof.utils
scratchpad
p8014
(dp8015
bsg20
Nsg47
Nsg48
g403
sbag1
(g389
g3
NtRp8016
(dp8017
g32
S'auto_3212'
p8018
sg34
Nsg35
(itheano.gof.utils
scratchpad
p8019
(dp8020
bsg20
Nsg47
Nsg48
g403
sbag1
(g389
g3
NtRp8021
(dp8022
g32
S'auto_3213'
p8023
sg34
Nsg35
(itheano.gof.utils
scratchpad
p8024
(dp8025
bsg20
Nsg47
Nsg48
g403
sbasg405
(lp8026
S'%(nodename)s_subnode0'
p8027
aS'%(nodename)s_subnode1'
p8028
asg409
I3
sg20
S'Composite{(i0 - (i1 * i2))}'
p8029
sg411
(g403
g403
g403
tp8030
sg187
(lp8031
g1
(g389
g3
NtRp8032
(dp8033
g32
S'auto_3215'
p8034
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p8035
(dp8036
g38
g6652
sbsg20
Nsg47
g1
(g162
g3
NtRp8037
(dp8038
g15
(lp8039
g8011
ag1
(g389
g3
NtRp8040
(dp8041
g32
S'auto_3214'
p8042
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p8043
(dp8044
g38
g6661
sbsg20
Nsg47
g1
(g162
g3
NtRp8045
(dp8046
g15
(lp8047
g8016
ag8021
asg35
(itheano.gof.utils
scratchpad
p8048
(dp8049
bsg187
(lp8050
g8040
asg193
g2300
sbsg48
g403
sbasg35
(itheano.gof.utils
scratchpad
p8051
(dp8052
bsg187
(lp8053
g8032
asg193
g1999
sbsg48
g403
sbasg449
S'{\nnpy_float32 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i1)s * %(i2)s;\n%(o0)s = %(i0)s - V%(id)s_tmp1;\n}\n'
p8054
sg451
(g403
tp8055
sg197
g198
sg458
I1
sbsg6331
I01
sg459
(dp8056
sg6334
g1
(g6335
g3
NtRp8057
(dp8058
g384
g8008
sg6331
I01
sg463
g8007
sbsbsbsg48
g1
(g77
g3
NtRp8059
(dp8060
g52
(I00
tp8061
sg20
Nsbsbag632
((ltRp8062
aa(lp8063
g6144
ag632
((lp8064
(lp8065
g6150
aI1
aa(lp8066
g6141
aI1
aatRp8067
aa(lp8068
g6196
ag632
((lp8069
(lp8070
g6150
aI1
aa(lp8071
g6141
aI1
aatRp8072
aa(lp8073
g1
(g221
g3
NtRp8074
(dp8075
g34
I0
sg20
Nsg153
g5456
sg160
(lp8076
sg32
S'auto_3187'
p8077
sg35
(itheano.gof.utils
scratchpad
p8078
(dp8079
g38
(lp8080
sbsg47
g1
(g162
g3
NtRp8081
(dp8082
g15
(lp8083
g5531
ag6144
ag6153
ag6196
asg153
g5456
sg187
(lp8084
g8074
asg35
(itheano.gof.utils
scratchpad
p8085
(dp8086
bsg191
(dp8087
sg193
g1
(g6225
g3
NtRp8088
(dp8089
g463
(dp8090
sg197
g198
sg384
g1
(g385
g3
NtRp8091
(dp8092
g15
(lp8093
g1
(g389
g3
NtRp8094
(dp8095
g32
S'auto_3168'
p8096
sg34
Nsg35
(itheano.gof.utils
scratchpad
p8097
(dp8098
bsg20
Nsg47
Nsg48
g403
sbag1
(g389
g3
NtRp8099
(dp8100
g32
S'auto_3169'
p8101
sg34
Nsg35
(itheano.gof.utils
scratchpad
p8102
(dp8103
bsg20
Nsg47
Nsg48
g403
sbag1
(g389
g3
NtRp8104
(dp8105
g32
S'auto_3170'
p8106
sg34
Nsg35
(itheano.gof.utils
scratchpad
p8107
(dp8108
bsg20
Nsg47
Nsg48
g403
sbag1
(g389
g3
NtRp8109
(dp8110
g32
S'auto_3171'
p8111
sg34
Nsg35
(itheano.gof.utils
scratchpad
p8112
(dp8113
bsg20
Nsg47
Nsg48
g403
sbasg405
(lp8114
S'%(nodename)s_subnode0'
p8115
aS'%(nodename)s_subnode1'
p8116
aS'%(nodename)s_subnode2'
p8117
aS'%(nodename)s_subnode3'
p8118
aS'%(nodename)s_subnode4'
p8119
asg409
I4
sg20
S'Composite{(i0 - (i1 * (i2 + (i3 * sgn(i0)))))}'
p8120
sg411
(g403
g403
g403
g403
tp8121
sg187
(lp8122
g1
(g389
g3
NtRp8123
(dp8124
g32
S'auto_3177'
p8125
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p8126
(dp8127
g38
g6266
sbsg20
Nsg47
g1
(g162
g3
NtRp8128
(dp8129
g15
(lp8130
g8094
ag1
(g389
g3
NtRp8131
(dp8132
g32
S'auto_3176'
p8133
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p8134
(dp8135
g38
g6275
sbsg20
Nsg47
g1
(g162
g3
NtRp8136
(dp8137
g15
(lp8138
g8099
ag1
(g389
g3
NtRp8139
(dp8140
g32
S'auto_3175'
p8141
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p8142
(dp8143
g38
g6284
sbsg20
Nsg47
g1
(g162
g3
NtRp8144
(dp8145
g15
(lp8146
g8104
ag1
(g389
g3
NtRp8147
(dp8148
g32
S'auto_3174'
p8149
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p8150
(dp8151
g38
g6293
sbsg20
Nsg47
g1
(g162
g3
NtRp8152
(dp8153
g15
(lp8154
g8109
ag1
(g389
g3
NtRp8155
(dp8156
g32
S'auto_3173'
p8157
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p8158
(dp8159
g38
g6302
sbsg20
Nsg47
g1
(g162
g3
NtRp8160
(dp8161
g15
(lp8162
g8094
asg35
(itheano.gof.utils
scratchpad
p8163
(dp8164
bsg187
(lp8165
g8155
asg193
g6310
sbsg48
g403
sbasg35
(itheano.gof.utils
scratchpad
p8166
(dp8167
bsg187
(lp8168
g8147
asg193
g2300
sbsg48
g403
sbasg35
(itheano.gof.utils
scratchpad
p8169
(dp8170
bsg187
(lp8171
g8139
asg193
g436
sbsg48
g403
sbasg35
(itheano.gof.utils
scratchpad
p8172
(dp8173
bsg187
(lp8174
g8131
asg193
g2300
sbsg48
g403
sbasg35
(itheano.gof.utils
scratchpad
p8175
(dp8176
bsg187
(lp8177
g8123
asg193
g1999
sbsg48
g403
sbasg449
S'{\nnpy_float32 V%(id)s_tmp1;\nV%(id)s_tmp1 = (%(i0)s > 0) ? 1. : ((%(i0)s < 0) ? -1. : (isnan(%(i0)s) ? NAN : 0.));\nnpy_float32 V%(id)s_tmp2;\nV%(id)s_tmp2 = %(i3)s * V%(id)s_tmp1;\nnpy_float32 V%(id)s_tmp3;\nV%(id)s_tmp3 = %(i2)s + V%(id)s_tmp2;\nnpy_float32 V%(id)s_tmp4;\nV%(id)s_tmp4 = %(i1)s * V%(id)s_tmp3;\n%(o0)s = %(i0)s - V%(id)s_tmp4;\n}\n'
p8178
sg451
(g403
tp8179
sg197
g198
sg458
I1
sbsg6331
I01
sg459
(dp8180
sg6334
g1
(g6335
g3
NtRp8181
(dp8182
g384
g8091
sg6331
I01
sg463
g8090
sbsbsbsg48
g1
(g77
g3
NtRp8183
(dp8184
g52
(I00
I00
tp8185
sg20
Nsbsbag632
((ltRp8186
aa(lp8187
g6069
ag632
((lp8188
(lp8189
g6066
aI1
aatRp8190
aa(lp8191
g6131
ag632
((lp8192
(lp8193
g6134
aI1
aatRp8194
aa(lp8195
g6058
ag632
((lp8196
(lp8197
g5938
aI1
aatRp8198
aa(lp8199
g6138
ag632
((lp8200
(lp8201
g6141
aI1
aatRp8202
aa(lp8203
g1
(g221
g3
NtRp8204
(dp8205
g34
I0
sg20
Nsg153
g5456
sg160
(lp8206
sg32
S'auto_3092'
p8207
sg35
(itheano.gof.utils
scratchpad
p8208
(dp8209
g38
(lp8210
sbsg47
g1
(g162
g3
NtRp8211
(dp8212
g15
(lp8213
g5941
ag5931
ag6058
asg153
g5456
sg187
(lp8214
g8204
asg35
(itheano.gof.utils
scratchpad
p8215
(dp8216
bsg191
(dp8217
sg193
g1
(g6225
g3
NtRp8218
(dp8219
g463
(dp8220
sg197
g198
sg384
g1
(g385
g3
NtRp8221
(dp8222
g15
(lp8223
g1
(g389
g3
NtRp8224
(dp8225
g32
S'auto_3082'
p8226
sg34
Nsg35
(itheano.gof.utils
scratchpad
p8227
(dp8228
bsg20
Nsg47
Nsg48
g403
sbag1
(g389
g3
NtRp8229
(dp8230
g32
S'auto_3083'
p8231
sg34
Nsg35
(itheano.gof.utils
scratchpad
p8232
(dp8233
bsg20
Nsg47
Nsg48
g403
sbag1
(g389
g3
NtRp8234
(dp8235
g32
S'auto_3084'
p8236
sg34
Nsg35
(itheano.gof.utils
scratchpad
p8237
(dp8238
bsg20
Nsg47
Nsg48
g403
sbasg405
(lp8239
S'%(nodename)s_subnode0'
p8240
aS'%(nodename)s_subnode1'
p8241
asg409
I3
sg20
S'Composite{(i0 - (i1 * i2))}'
p8242
sg411
(g403
g403
g403
tp8243
sg187
(lp8244
g1
(g389
g3
NtRp8245
(dp8246
g32
S'auto_3086'
p8247
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p8248
(dp8249
g38
g6570
sbsg20
Nsg47
g1
(g162
g3
NtRp8250
(dp8251
g15
(lp8252
g8224
ag1
(g389
g3
NtRp8253
(dp8254
g32
S'auto_3085'
p8255
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p8256
(dp8257
g38
g6579
sbsg20
Nsg47
g1
(g162
g3
NtRp8258
(dp8259
g15
(lp8260
g8229
ag8234
asg35
(itheano.gof.utils
scratchpad
p8261
(dp8262
bsg187
(lp8263
g8253
asg193
g2300
sbsg48
g403
sbasg35
(itheano.gof.utils
scratchpad
p8264
(dp8265
bsg187
(lp8266
g8245
asg193
g1999
sbsg48
g403
sbasg449
S'{\nnpy_float32 V%(id)s_tmp1;\nV%(id)s_tmp1 = %(i1)s * %(i2)s;\n%(o0)s = %(i0)s - V%(id)s_tmp1;\n}\n'
p8267
sg451
(g403
tp8268
sg197
g198
sg458
I1
sbsg6331
I01
sg459
(dp8269
sg6334
g1
(g6335
g3
NtRp8270
(dp8271
g384
g8221
sg6331
I01
sg463
g8220
sbsbsbsg48
g1
(g77
g3
NtRp8272
(dp8273
g52
(I00
tp8274
sg20
Nsbsbag632
((ltRp8275
aa(lp8276
g1
(g221
g3
NtRp8277
(dp8278
g34
I0
sg20
Nsg153
g5456
sg160
(lp8279
sg32
S'auto_3058'
p8280
sg35
(itheano.gof.utils
scratchpad
p8281
(dp8282
g38
(lp8283
sbsg47
g1
(g162
g3
NtRp8284
(dp8285
g15
(lp8286
g5475
ag6144
ag6138
ag6196
asg153
g5456
sg187
(lp8287
g8277
asg35
(itheano.gof.utils
scratchpad
p8288
(dp8289
bsg191
(dp8290
sg193
g1
(g6225
g3
NtRp8291
(dp8292
g463
(dp8293
sg197
g198
sg384
g1
(g385
g3
NtRp8294
(dp8295
g15
(lp8296
g1
(g389
g3
NtRp8297
(dp8298
g32
S'auto_3039'
p8299
sg34
Nsg35
(itheano.gof.utils
scratchpad
p8300
(dp8301
bsg20
Nsg47
Nsg48
g403
sbag1
(g389
g3
NtRp8302
(dp8303
g32
S'auto_3040'
p8304
sg34
Nsg35
(itheano.gof.utils
scratchpad
p8305
(dp8306
bsg20
Nsg47
Nsg48
g403
sbag1
(g389
g3
NtRp8307
(dp8308
g32
S'auto_3041'
p8309
sg34
Nsg35
(itheano.gof.utils
scratchpad
p8310
(dp8311
bsg20
Nsg47
Nsg48
g403
sbag1
(g389
g3
NtRp8312
(dp8313
g32
S'auto_3042'
p8314
sg34
Nsg35
(itheano.gof.utils
scratchpad
p8315
(dp8316
bsg20
Nsg47
Nsg48
g403
sbasg405
(lp8317
S'%(nodename)s_subnode0'
p8318
aS'%(nodename)s_subnode1'
p8319
aS'%(nodename)s_subnode2'
p8320
aS'%(nodename)s_subnode3'
p8321
aS'%(nodename)s_subnode4'
p8322
asg409
I4
sg20
S'Composite{(i0 - (i1 * (i2 + (i3 * sgn(i0)))))}'
p8323
sg411
(g403
g403
g403
g403
tp8324
sg187
(lp8325
g1
(g389
g3
NtRp8326
(dp8327
g32
S'auto_3048'
p8328
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p8329
(dp8330
g38
g6401
sbsg20
Nsg47
g1
(g162
g3
NtRp8331
(dp8332
g15
(lp8333
g8297
ag1
(g389
g3
NtRp8334
(dp8335
g32
S'auto_3047'
p8336
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p8337
(dp8338
g38
g6410
sbsg20
Nsg47
g1
(g162
g3
NtRp8339
(dp8340
g15
(lp8341
g8302
ag1
(g389
g3
NtRp8342
(dp8343
g32
S'auto_3046'
p8344
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p8345
(dp8346
g38
g6419
sbsg20
Nsg47
g1
(g162
g3
NtRp8347
(dp8348
g15
(lp8349
g8307
ag1
(g389
g3
NtRp8350
(dp8351
g32
S'auto_3045'
p8352
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p8353
(dp8354
g38
g6428
sbsg20
Nsg47
g1
(g162
g3
NtRp8355
(dp8356
g15
(lp8357
g8312
ag1
(g389
g3
NtRp8358
(dp8359
g32
S'auto_3044'
p8360
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p8361
(dp8362
g38
g6437
sbsg20
Nsg47
g1
(g162
g3
NtRp8363
(dp8364
g15
(lp8365
g8297
asg35
(itheano.gof.utils
scratchpad
p8366
(dp8367
bsg187
(lp8368
g8358
asg193
g6310
sbsg48
g403
sbasg35
(itheano.gof.utils
scratchpad
p8369
(dp8370
bsg187
(lp8371
g8350
asg193
g2300
sbsg48
g403
sbasg35
(itheano.gof.utils
scratchpad
p8372
(dp8373
bsg187
(lp8374
g8342
asg193
g436
sbsg48
g403
sbasg35
(itheano.gof.utils
scratchpad
p8375
(dp8376
bsg187
(lp8377
g8334
asg193
g2300
sbsg48
g403
sbasg35
(itheano.gof.utils
scratchpad
p8378
(dp8379
bsg187
(lp8380
g8326
asg193
g1999
sbsg48
g403
sbasg449
S'{\nnpy_float32 V%(id)s_tmp1;\nV%(id)s_tmp1 = (%(i0)s > 0) ? 1. : ((%(i0)s < 0) ? -1. : (isnan(%(i0)s) ? NAN : 0.));\nnpy_float32 V%(id)s_tmp2;\nV%(id)s_tmp2 = %(i3)s * V%(id)s_tmp1;\nnpy_float32 V%(id)s_tmp3;\nV%(id)s_tmp3 = %(i2)s + V%(id)s_tmp2;\nnpy_float32 V%(id)s_tmp4;\nV%(id)s_tmp4 = %(i1)s * V%(id)s_tmp3;\n%(o0)s = %(i0)s - V%(id)s_tmp4;\n}\n'
p8381
sg451
(g403
tp8382
sg197
g198
sg458
I1
sbsg6331
I01
sg459
(dp8383
sg6334
g1
(g6335
g3
NtRp8384
(dp8385
g384
g8294
sg6331
I01
sg463
g8293
sbsbsbsg48
g1
(g77
g3
NtRp8386
(dp8387
g52
(I00
I00
tp8388
sg20
Nsbsbag632
((ltRp8389
aa(lp8390
g1
(g29
g3
NtRp8391
(dp8392
g34
I0
sg20
Nsg153
g5456
sg160
(lp8393
sg32
S'auto_3266'
p8394
sg35
(itheano.gof.utils
scratchpad
p8395
(dp8396
g38
(lp8397
sbsg47
g1
(g162
g3
NtRp8398
(dp8399
g15
(lp8400
g7955
asg153
g5456
sg187
(lp8401
g8391
asg35
(itheano.gof.utils
scratchpad
p8402
(dp8403
bsg191
(dp8404
sg193
g858
sbsg48
g2314
sbag632
((ltRp8405
aa(lp8406
g1
(g221
g3
NtRp8407
(dp8408
g34
I0
sg20
Nsg153
g5456
sg160
(lp8409
sg32
S'auto_3267'
p8410
sg35
(itheano.gof.utils
scratchpad
p8411
(dp8412
g38
(lp8413
sbsg47
g1
(g162
g3
NtRp8414
(dp8415
g15
(lp8416
g8277
asg153
g5456
sg187
(lp8417
g8407
asg35
(itheano.gof.utils
scratchpad
p8418
(dp8419
bsg191
(dp8420
sg193
g858
sbsg48
g8386
sbag632
((ltRp8421
aa(lp8422
g1
(g221
g3
NtRp8423
(dp8424
g34
I0
sg20
Nsg153
g5456
sg160
(lp8425
sg32
S'auto_3268'
p8426
sg35
(itheano.gof.utils
scratchpad
p8427
(dp8428
g38
(lp8429
sbsg47
g1
(g162
g3
NtRp8430
(dp8431
g15
(lp8432
g8204
asg153
g5456
sg187
(lp8433
g8423
asg35
(itheano.gof.utils
scratchpad
p8434
(dp8435
bsg191
(dp8436
sg193
g858
sbsg48
g8272
sbag632
((ltRp8437
aa(lp8438
g1
(g221
g3
NtRp8439
(dp8440
g34
I0
sg20
Nsg153
g5456
sg160
(lp8441
sg32
S'auto_3269'
p8442
sg35
(itheano.gof.utils
scratchpad
p8443
(dp8444
g38
(lp8445
sbsg47
g1
(g162
g3
NtRp8446
(dp8447
g15
(lp8448
g8074
asg153
g5456
sg187
(lp8449
g8439
asg35
(itheano.gof.utils
scratchpad
p8450
(dp8451
bsg191
(dp8452
sg193
g858
sbsg48
g8183
sbag632
((ltRp8453
aa(lp8454
g1
(g221
g3
NtRp8455
(dp8456
g34
I0
sg20
Nsg153
g5456
sg160
(lp8457
sg32
S'auto_3270'
p8458
sg35
(itheano.gof.utils
scratchpad
p8459
(dp8460
g38
(lp8461
sbsg47
g1
(g162
g3
NtRp8462
(dp8463
g15
(lp8464
g7991
asg153
g5456
sg187
(lp8465
g8455
asg35
(itheano.gof.utils
scratchpad
p8466
(dp8467
bsg191
(dp8468
sg193
g858
sbsg48
g8059
sbag632
((ltRp8469
aa(lp8470
g6098
ag632
((lp8471
(lp8472
g6095
aI1
aatRp8473
aa(lp8474
g5552
ag632
((lp8475
(lp8476
g5555
aI1
aatRp8477
aa(lp8478
g5520
ag632
((lp8479
(lp8480
g5517
aI1
aatRp8481
aa(lp8482
g5483
ag632
((lp8483
(lp8484
g5486
aI1
aatRp8485
aa(lp8486
g5668
ag632
((lp8487
(lp8488
g5665
aI1
aatRp8489
aa(lp8490
g6606
ag632
((ltRp8491
aa(lp8492
g6211
ag632
((ltRp8493
aa(lp8494
g6524
ag632
((ltRp8495
aa(lp8496
g6347
ag632
((ltRp8497
aa(lp8498
g5544
ag632
((lp8499
(lp8500
g5541
aI1
aa(lp8501
g5548
aI1
aa(lp8502
g5611
aI1
aatRp8503
aa(lp8504
g5623
ag632
((lp8505
(lp8506
g5626
aI1
aa(lp8507
g5620
aI1
aatRp8508
aa(lp8509
g5736
ag632
((lp8510
(lp8511
g5733
aI1
aa(lp8512
g5740
aI1
aatRp8513
aa(lp8514
g5774
ag632
((lp8515
(lp8516
g5777
aI1
aatRp8517
aa(lp8518
g1
(g29
g3
NtRp8519
(dp8520
g34
I0
sg20
Nsg153
g5456
sg160
(lp8521
sg32
S'auto_3400'
p8522
sg35
(itheano.gof.utils
scratchpad
p8523
(dp8524
g38
(lp8525
sbsg47
g1
(g162
g3
NtRp8526
(dp8527
g15
(lp8528
g5743
ag5637
ag5736
asg153
g5456
sg187
(lp8529
g8519
asg35
(itheano.gof.utils
scratchpad
p8530
(dp8531
bsg191
(dp8532
sg193
g1
(g381
g3
NtRp8533
(dp8534
g20
Nsg384
g1
(g2299
g3
NtRp8535
(dp8536
g438
g1
(g453
g3
NtRp8537
(dp8538
g456
(I2
tp8539
sbsg197
g198
sg20
Nsbsg459
(dp8540
I0
(lp8541
I2
assg462
g2306
sg463
(dp8542
I0
I2
ssg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp8543
(dp8544
g52
(I00
I00
tp8545
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag632
((ltRp8546
aa(lp8547
g6091
ag632
((lp8548
(lp8549
g6088
aI1
aa(lp8550
g6095
aI1
aatRp8551
aa(lp8552
g5688
ag632
((ltRp8553
aatRp8554
sg868
(dp8555
g5961
g5958
sg5651
g5654
sg6153
g6150
sg5941
g5938
sg5814
g5811
sg5637
g5733
sg6138
g6141
sg5834
g5831
sg5623
g5620
sg5608
g5611
sg5490
g5493
sg5531
g5528
sg5475
g5479
ssg870
g1
(g591
g3
NtRp8556
(dp8557
g594
g1
(g595
g3
NtRp8558
(lp8559
g1
(g595
g3
NtRp8560
(lp8561
g1
(g595
g3
NtRp8562
(lp8563
g1
(g595
g3
NtRp8564
(lp8565
g1
(g595
g3
NtRp8566
(lp8567
g1
(g595
g3
NtRp8568
(lp8569
g1
(g595
g3
NtRp8570
(lp8571
g1
(g595
g3
NtRp8572
(lp8573
g1
(g595
g3
NtRp8574
(lp8575
g1
(g595
g3
NtRp8576
(lp8577
g1
(g595
g3
NtRp8578
(lp8579
g1
(g595
g3
NtRp8580
(lp8581
g1
(g595
g3
NtRp8582
(lp8583
g1
(g595
g3
NtRp8584
(lp8585
g1
(g595
g3
NtRp8586
(lp8587
g1
(g595
g3
NtRp8588
(lp8589
g1
(g595
g3
NtRp8590
(lp8591
g1
(g595
g3
NtRp8592
(lp8593
g1
(g595
g3
NtRp8594
(lp8595
g1
(g595
g3
NtRp8596
(lp8597
g1
(g595
g3
NtRp8598
(lp8599
g1
(g595
g3
NtRp8600
(lp8601
g1
(g595
g3
NtRp8602
(lp8603
g1
(g595
g3
NtRp8604
(lp8605
g1
(g595
g3
NtRp8606
(lp8607
g1
(g595
g3
NtRp8608
(lp8609
g1
(g595
g3
NtRp8610
(lp8611
g1
(g595
g3
NtRp8612
(lp8613
g1
(g595
g3
NtRp8614
(lp8615
g1
(g595
g3
NtRp8616
(lp8617
g1
(g595
g3
NtRp8618
(lp8619
g1
(g595
g3
NtRp8620
(lp8621
g1
(g595
g3
NtRp8622
(lp8623
g1
(g595
g3
NtRp8624
(lp8625
g1
(g595
g3
NtRp8626
(lp8627
g1
(g595
g3
NtRp8628
(lp8629
g1
(g595
g3
NtRp8630
(lp8631
g1
(g595
g3
NtRp8632
(lp8633
g1
(g595
g3
NtRp8634
(lp8635
g1
(g595
g3
NtRp8636
(lp8637
g1
(g595
g3
NtRp8638
(lp8639
g1
(g595
g3
NtRp8640
(lp8641
g1
(g595
g3
NtRp8642
(lp8643
g1
(g595
g3
NtRp8644
(lp8645
g1
(g595
g3
NtRp8646
(lp8647
g1
(g595
g3
NtRp8648
(lp8649
g8558
ag8646
ag5817
abag8644
ag5534
abag8642
ag5584
abag8640
ag5944
abag8638
ag5472
abag8636
ag5824
abag8634
ag5573
abag8632
ag5517
abag8630
ag5951
abag8628
ag5462
abag8626
ag5486
abag8624
ag5541
abag8622
ag5665
abag8620
ag5626
abag8618
ag5640
abag8616
ag5777
abag8614
ag5555
abag8612
ag5562
abag8610
ag5647
abag8608
ag5784
abag8606
ag6171
abag8604
ag5804
abag8602
ag6161
abag8600
ag6088
abag8598
ag6095
abag8596
ag6077
abag8594
ag6127
abag8592
ag6066
abag8590
ag6134
abag8588
ag6106
abag8586
ag5548
abag8584
ag5528
abag8582
ag5479
abag8580
ag5493
abag8578
ag5811
abag8576
ag6150
abag8574
ag5938
abag8572
ag6141
abag8570
ag5958
abag8568
ag5831
abag8566
ag5620
abag8564
ag5733
abag8562
ag5740
abag8560
ag5611
abag8558
ag5654
abag8648
absg598
(dp8650
g5562
g8614
sg5740
g8564
sg5573
g8636
sg5654
g8560
sg5548
g8588
sg5534
g8646
sg5665
g8624
sg6134
g8592
sg5517
g8634
sg5811
g8580
sg5479
g8584
sg6127
g8596
sg5584
g8644
sg5958
g8572
sg6095
g8600
sg5640
g8620
sg6161
g8604
sg5528
g8586
sg5493
g8582
sg6106
g8590
sg5944
g8642
sg5462
g8630
sg5626
g8622
sg5541
g8626
sg6141
g8574
sg5831
g8570
sg5555
g8616
sg5824
g8638
sg5611
g8562
sg5817
g8648
sg6150
g8578
sg5804
g8606
sg6066
g8594
sg5951
g8632
sg5647
g8612
sg6171
g8608
sg5620
g8568
sg6077
g8598
sg5784
g8610
sg5486
g8628
sg5777
g8618
sg5938
g8576
sg6088
g8602
sg5472
g8640
sg5733
g8566
ssbsg896
g1
(g591
g3
NtRp8651
(dp8652
g594
g1
(g595
g3
NtRp8653
(lp8654
g1
(g595
g3
NtRp8655
(lp8656
g1
(g595
g3
NtRp8657
(lp8658
g1
(g595
g3
NtRp8659
(lp8660
g1
(g595
g3
NtRp8661
(lp8662
g1
(g595
g3
NtRp8663
(lp8664
g1
(g595
g3
NtRp8665
(lp8666
g1
(g595
g3
NtRp8667
(lp8668
g1
(g595
g3
NtRp8669
(lp8670
g1
(g595
g3
NtRp8671
(lp8672
g1
(g595
g3
NtRp8673
(lp8674
g1
(g595
g3
NtRp8675
(lp8676
g1
(g595
g3
NtRp8677
(lp8678
g1
(g595
g3
NtRp8679
(lp8680
g8653
ag8677
ag5528
abag8675
ag5479
abag8673
ag5493
abag8671
ag5811
abag8669
ag6150
abag8667
ag5938
abag8665
ag6141
abag8663
ag5958
abag8661
ag5831
abag8659
ag5620
abag8657
ag5733
abag8655
ag5611
abag8653
ag5654
abag8679
absg598
(dp8681
g6141
g8667
sg5528
g8679
sg5831
g8663
sg5938
g8669
sg5958
g8665
sg5654
g8655
sg5620
g8661
sg5611
g8657
sg5733
g8659
sg5811
g8673
sg6150
g8671
sg5479
g8677
sg5493
g8675
ssbsg906
I00
sbsg20
S'mlp.py:49'
p8682
sg908
F0.054749011993408203
sg909
g1
(g910
g3
NtRp8683
(dp8684
g579
(dp8685
sg914
(dp8686
g1
(g221
g3
NtRp8687
(dp8688
g34
I0
sg20
Nsg153
g5456
sg160
(lp8689
sg32
S'auto_2602'
p8690
sg35
(itheano.gof.utils
scratchpad
p8691
(dp8692
g38
(lp8693
sbsg47
g1
(g162
g3
NtRp8694
(dp8695
g15
(lp8696
g1
(g1008
g3
NtRp8697
(dp8698
g32
S'auto_2308'
p8699
sg34
Nsg35
(itheano.gof.utils
scratchpad
p8700
(dp8701
g38
(lp8702
g4866
asg1014
g5755
(g74
S'\x00\x00\x80>'
tRp8703
sbsg20
Nsg48
g4890
sg160
(lp8704
sg1018
g71
(g72
(I0
tS'b'
tRp8705
(I1
(I1
tg74
I00
S'\x00\x00\x80>'
tbsbasg153
g5456
sg187
(lp8706
g8687
asg35
(itheano.gof.utils
scratchpad
p8707
(dp8708
bsg191
(dp8709
sg193
g2809
sbsg48
g1
(g77
g3
NtRp8710
(dp8711
g52
(I01
tp8712
sg20
Nsbsb(g1
(g1008
g3
NtRp8713
(dp8714
g32
S'auto_2136'
p8715
sg34
Nsg35
(itheano.gof.utils
scratchpad
p8716
(dp8717
g1014
Nsbsg20
Nsg48
g1
(g49
g3
NtRp8718
(dp8719
g52
(tsg54
S'int64'
p8720
sg56
g964
sg59
I00
sg20
Nsbsg1018
g71
(g72
(I0
tS'b'
tRp8721
(I1
(tg964
I00
S'\x01\x00\x00\x00\x00\x00\x00\x00'
tbsbtp8722
sg8277
(g1
(g29
g3
NtRp8723
(dp8724
g32
S'auto_2141'
p8725
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p8726
(dp8727
g38
(lp8728
sbsg20
Nsg47
g1
(g162
g3
NtRp8729
(dp8730
g15
(lp8731
g5475
asg35
(itheano.gof.utils
scratchpad
p8732
(dp8733
bsg187
(lp8734
g8723
asg193
g1
(g958
g3
NtRp8735
(dp8736
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg1
(g29
g3
NtRp8737
(dp8738
g32
S'auto_2142'
p8739
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p8740
(dp8741
g38
(lp8742
sbsg20
Nsg47
g1
(g162
g3
NtRp8743
(dp8744
g15
(lp8745
g5475
asg35
(itheano.gof.utils
scratchpad
p8746
(dp8747
bsg187
(lp8748
g8737
asg193
g1
(g958
g3
NtRp8749
(dp8750
S'i'
I1
sg197
g198
sbsbsg48
g961
sbtp8751
sg1
(g29
g3
NtRp8752
(dp8753
g34
I0
sg20
Nsg153
g5456
sg160
(lp8754
sg32
S'auto_2134'
p8755
sg35
(itheano.gof.utils
scratchpad
p8756
(dp8757
g38
g3111
sbsg47
g1
(g162
g3
NtRp8758
(dp8759
g15
(lp8760
g1
(g29
g3
NtRp8761
(dp8762
g34
I0
sg20
Nsg153
g5456
sg160
(lp8763
sg32
S'auto_1978'
p8764
sg35
(itheano.gof.utils
scratchpad
p8765
(dp8766
g38
g1141
sbsg47
g1
(g162
g3
NtRp8767
(dp8768
g15
(lp8769
g5941
asg153
g5456
sg187
(lp8770
g8761
asg35
(itheano.gof.utils
scratchpad
p8771
(dp8772
bsg191
(dp8773
sg193
g1152
sbsg48
g1154
sbag1
(g29
g3
NtRp8774
(dp8775
g34
I0
sg20
Nsg153
g5456
sg160
(lp8776
sg32
S'auto_2132'
p8777
sg35
(itheano.gof.utils
scratchpad
p8778
(dp8779
g38
g3143
sbsg47
g1
(g162
g3
NtRp8780
(dp8781
g15
(lp8782
g8697
ag6069
asg153
g5456
sg187
(lp8783
g8774
asg35
(itheano.gof.utils
scratchpad
p8784
(dp8785
bsg191
(dp8786
sg193
g2297
sbsg48
g3930
sbasg153
g5456
sg187
(lp8787
g8752
asg35
(itheano.gof.utils
scratchpad
p8788
(dp8789
bsg191
(dp8790
sg193
g1996
sbsg48
g3936
sb(g1
(g29
g3
NtRp8791
(dp8792
g32
S'auto_2140'
p8793
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p8794
(dp8795
g38
(lp8796
sbsg20
Nsg47
g1
(g162
g3
NtRp8797
(dp8798
g15
(lp8799
g5941
asg35
(itheano.gof.utils
scratchpad
p8800
(dp8801
bsg187
(lp8802
g8791
asg193
g1
(g958
g3
NtRp8803
(dp8804
S'i'
I0
sg197
g198
sbsbsg48
g961
sbtp8805
sg5490
(tsg1
(g221
g3
NtRp8806
(dp8807
g34
I0
sg20
Nsg153
g5456
sg160
(lp8808
sg32
S'auto_2585'
p8809
sg35
(itheano.gof.utils
scratchpad
p8810
(dp8811
g38
(lp8812
sbsg47
g1
(g162
g3
NtRp8813
(dp8814
g15
(lp8815
g6153
ag1
(g221
g3
NtRp8816
(dp8817
g34
I0
sg20
Nsg153
g5456
sg160
(lp8818
sg32
S'auto_2590'
p8819
sg35
(itheano.gof.utils
scratchpad
p8820
(dp8821
g38
(lp8822
sbsg47
g1
(g162
g3
NtRp8823
(dp8824
g15
(lp8825
g6196
ag1
(g221
g3
NtRp8826
(dp8827
g34
I0
sg20
Nsg153
g5456
sg160
(lp8828
sg32
S'auto_2596'
p8829
sg35
(itheano.gof.utils
scratchpad
p8830
(dp8831
g38
(lp8832
sbsg47
g1
(g162
g3
NtRp8833
(dp8834
g15
(lp8835
g5531
asg153
g5456
sg187
(lp8836
g8826
asg35
(itheano.gof.utils
scratchpad
p8837
(dp8838
bsg191
(dp8839
sg193
g1
(g6225
g3
NtRp8840
(dp8841
g463
(dp8842
sg197
g198
sg384
g6310
sg6331
I01
sg459
(dp8843
sg6334
g1
(g6335
g3
NtRp8844
(dp8845
g384
g6310
sg6331
I01
sg463
g8842
sbsbsbsg48
g1
(g77
g3
NtRp8846
(dp8847
g52
(I00
I00
tp8848
sg20
Nsbsbasg153
g5456
sg187
(lp8849
g8816
asg35
(itheano.gof.utils
scratchpad
p8850
(dp8851
bsg191
(dp8852
sg193
g1
(g6225
g3
NtRp8853
(dp8854
g463
(dp8855
sg197
g198
sg384
g2300
sg6331
I01
sg459
(dp8856
sg6334
g1
(g6335
g3
NtRp8857
(dp8858
g384
g2300
sg6331
I01
sg463
g8855
sbsbsbsg48
g1
(g77
g3
NtRp8859
(dp8860
g52
(I00
I00
tp8861
sg20
Nsbsbasg153
g5456
sg187
(lp8862
g8806
asg35
(itheano.gof.utils
scratchpad
p8863
(dp8864
bsg191
(dp8865
sg193
g1
(g6225
g3
NtRp8866
(dp8867
g463
(dp8868
sg197
g198
sg384
g436
sg6331
I01
sg459
(dp8869
sg6334
g1
(g6335
g3
NtRp8870
(dp8871
g384
g436
sg6331
I01
sg463
g8868
sbsbsbsg48
g1
(g77
g3
NtRp8872
(dp8873
g52
(I00
I00
tp8874
sg20
Nsbsb(g8737
g1
(g29
g3
NtRp8875
(dp8876
g32
S'auto_2139'
p8877
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p8878
(dp8879
g38
(lp8880
sbsg20
Nsg47
g1
(g162
g3
NtRp8881
(dp8882
g15
(lp8883
g5531
asg35
(itheano.gof.utils
scratchpad
p8884
(dp8885
bsg187
(lp8886
g8875
asg193
g1
(g958
g3
NtRp8887
(dp8888
S'i'
I1
sg197
g198
sbsbsg48
g961
sbtp8889
sg1
(g29
g3
NtRp8890
(dp8891
g34
I0
sg20
Nsg153
g5456
sg160
(lp8892
sg32
S'auto_2103'
p8893
sg35
(itheano.gof.utils
scratchpad
p8894
(dp8895
g38
g4543
sbsg47
g1
(g162
g3
NtRp8896
(dp8897
g15
(lp8898
g1
(g221
g3
NtRp8899
(dp8900
g34
I0
sg20
Nsg153
g5456
sg160
(lp8901
sg32
S'auto_2097'
p8902
sg35
(itheano.gof.utils
scratchpad
p8903
(dp8904
g38
g4559
sbsg47
g1
(g162
g3
NtRp8905
(dp8906
g15
(lp8907
g1
(g29
g3
NtRp8908
(dp8909
g34
I0
sg20
Nsg153
g5456
sg160
(lp8910
sg32
S'auto_2091'
p8911
sg35
(itheano.gof.utils
scratchpad
p8912
(dp8913
g38
g4575
sbsg47
g1
(g162
g3
NtRp8914
(dp8915
g15
(lp8916
g1
(g29
g3
NtRp8917
(dp8918
g34
I0
sg20
Nsg153
g5456
sg160
(lp8919
sg32
S'auto_2085'
p8920
sg35
(itheano.gof.utils
scratchpad
p8921
(dp8922
g38
g4593
sbsg47
g1
(g162
g3
NtRp8923
(dp8924
g15
(lp8925
g1
(g29
g3
NtRp8926
(dp8927
g34
I0
sg20
Nsg153
g5456
sg160
(lp8928
sg32
S'auto_2079'
p8929
sg35
(itheano.gof.utils
scratchpad
p8930
(dp8931
g38
g4611
sbsg47
g1
(g162
g3
NtRp8932
(dp8933
g15
(lp8934
g1
(g29
g3
NtRp8935
(dp8936
g34
I0
sg20
Nsg153
g5456
sg160
(lp8937
sg32
S'auto_2008'
p8938
sg35
(itheano.gof.utils
scratchpad
p8939
(dp8940
g38
g2249
sbsg47
g1
(g162
g3
NtRp8941
(dp8942
g15
(lp8943
g5538
asg153
g5456
sg187
(lp8944
g8935
asg35
(itheano.gof.utils
scratchpad
p8945
(dp8946
bsg191
(dp8947
sg193
g2211
sbsg48
g2279
sbag1
(g29
g3
NtRp8948
(dp8949
g34
I0
sg20
Nsg153
g5456
sg160
(lp8950
sg32
S'auto_2076'
p8951
sg35
(itheano.gof.utils
scratchpad
p8952
(dp8953
g38
g2913
sbsg47
g1
(g162
g3
NtRp8954
(dp8955
g15
(lp8956
g1
(g29
g3
NtRp8957
(dp8958
g34
I0
sg20
Nsg153
g5456
sg160
(lp8959
sg32
S'auto_2070'
p8960
sg35
(itheano.gof.utils
scratchpad
p8961
(dp8962
g38
g2931
sbsg47
g1
(g162
g3
NtRp8963
(dp8964
g15
(lp8965
g1
(g29
g3
NtRp8966
(dp8967
g34
I0
sg20
Nsg153
g5456
sg160
(lp8968
sg32
S'auto_2064'
p8969
sg35
(itheano.gof.utils
scratchpad
p8970
(dp8971
g38
g2949
sbsg47
g1
(g162
g3
NtRp8972
(dp8973
g15
(lp8974
g1
(g29
g3
NtRp8975
(dp8976
g34
I0
sg20
Nsg153
g5456
sg160
(lp8977
sg32
S'auto_2056'
p8978
sg35
(itheano.gof.utils
scratchpad
p8979
(dp8980
g38
g5106
sbsg47
g1
(g162
g3
NtRp8981
(dp8982
g15
(lp8983
g7955
ag1
(g1008
g3
NtRp8984
(dp8985
g32
S'auto_2055'
p8986
sg34
Nsg35
(itheano.gof.utils
scratchpad
p8987
(dp8988
g1014
Nsbsg20
Nsg48
g2321
sg160
(lp8989
sg1018
g2324
sbasg153
g5456
sg187
(lp8990
g8975
asg35
(itheano.gof.utils
scratchpad
p8991
(dp8992
bsg191
(dp8993
sg193
g2328
sbsg48
g5118
sbasg35
(itheano.gof.utils
scratchpad
p8994
(dp8995
bsg191
(dp8996
sg153
g5456
sg187
(lp8997
g8966
asg193
g2782
sbsg48
g2965
sbag1
(g1008
g3
NtRp8998
(dp8999
g32
S'auto_2029'
p9000
sg34
Nsg35
(itheano.gof.utils
scratchpad
p9001
(dp9002
g1014
Nsbsg20
Nsg48
g2148
sg160
(lp9003
sg1018
g2151
sbasg153
g5456
sg187
(lp9004
g8957
asg35
(itheano.gof.utils
scratchpad
p9005
(dp9006
bsg191
(dp9007
sg193
g2970
sbsg48
g2974
sbasg153
g5456
sg187
(lp9008
g8948
asg35
(itheano.gof.utils
scratchpad
p9009
(dp9010
bsg191
(dp9011
sg193
g2979
sbsg48
g2985
sbasg153
g5456
sg187
(lp9012
g8926
asg35
(itheano.gof.utils
scratchpad
p9013
(dp9014
bsg191
(dp9015
sg193
g4707
sbsg48
g4711
sbag5538
asg153
g5456
sg187
(lp9016
g8917
asg35
(itheano.gof.utils
scratchpad
p9017
(dp9018
bsg191
(dp9019
sg193
g4717
sbsg48
g4721
sbag8935
asg153
g5456
sg187
(lp9020
g8908
asg35
(itheano.gof.utils
scratchpad
p9021
(dp9022
bsg191
(dp9023
sg193
g4755
sbsg48
g4759
sbasg153
g5456
sg187
(lp9024
g8899
asg35
(itheano.gof.utils
scratchpad
p9025
(dp9026
bsg191
(dp9027
sg193
g2809
sbsg48
g4765
sbasg153
g5456
sg187
(lp9028
g8890
asg35
(itheano.gof.utils
scratchpad
p9029
(dp9030
bsg191
(dp9031
sg193
g4771
sbsg48
g4773
sb(g1
(g29
g3
NtRp9032
(dp9033
g32
S'auto_2138'
p9034
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p9035
(dp9036
g38
(lp9037
sbsg20
Nsg47
g1
(g162
g3
NtRp9038
(dp9039
g15
(lp9040
g5531
asg35
(itheano.gof.utils
scratchpad
p9041
(dp9042
bsg187
(lp9043
g9032
asg193
g1
(g958
g3
NtRp9044
(dp9045
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg8875
tp9046
sg8761
(g8791
tp9047
sg7500
(g1
(g29
g3
NtRp9048
(dp9049
g32
S'auto_2143'
p9050
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p9051
(dp9052
g38
(lp9053
sbsg20
Nsg47
g1
(g162
g3
NtRp9054
(dp9055
g15
(lp9056
g5459
asg35
(itheano.gof.utils
scratchpad
p9057
(dp9058
bsg187
(lp9059
g9048
asg193
g1
(g958
g3
NtRp9060
(dp9061
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg8737
tp9062
sg1
(g221
g3
NtRp9063
(dp9064
g34
I0
sg20
Nsg153
g5456
sg160
(lp9065
sg32
S'auto_2104'
p9066
sg35
(itheano.gof.utils
scratchpad
p9067
(dp9068
g38
g4075
sbsg47
g1
(g162
g3
NtRp9069
(dp9070
g15
(lp9071
g6164
asg153
g5456
sg187
(lp9072
g9063
asg35
(itheano.gof.utils
scratchpad
p9073
(dp9074
bsg191
(dp9075
sg193
g2809
sbsg48
g4527
sb(g8737
g8875
tp9076
sg6091
(g9048
g9032
tp9077
sg1
(g1008
g3
NtRp9078
(dp9079
g32
S'auto_1984'
p9080
sg34
Nsg35
(itheano.gof.utils
scratchpad
p9081
(dp9082
g1014
Nsbsg20
Nsg48
g2434
sg160
(lp9083
sg1018
g2437
sb(tsg1
(g29
g3
NtRp9084
(dp9085
g34
I0
sg20
Nsg153
g5456
sg160
(lp9086
sg32
S'auto_1973'
p9087
sg35
(itheano.gof.utils
scratchpad
p9088
(dp9089
g38
g1118
sbsg47
g1
(g162
g3
NtRp9090
(dp9091
g15
(lp9092
g5814
asg153
g5456
sg187
(lp9093
g9084
asg35
(itheano.gof.utils
scratchpad
p9094
(dp9095
bsg191
(dp9096
sg193
g1129
sbsg48
g1131
sb(g1
(g29
g3
NtRp9097
(dp9098
g32
S'auto_2137'
p9099
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p9100
(dp9101
g38
(lp9102
sbsg20
Nsg47
g1
(g162
g3
NtRp9103
(dp9104
g15
(lp9105
g5814
asg35
(itheano.gof.utils
scratchpad
p9106
(dp9107
bsg187
(lp9108
g9097
asg193
g1
(g958
g3
NtRp9109
(dp9110
S'i'
I0
sg197
g198
sbsbsg48
g961
sbtp9111
sg6153
(g8737
g8875
tp9112
sg7461
(g1
(g29
g3
NtRp9113
(dp9114
g32
S'auto_2144'
p9115
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p9116
(dp9117
g38
(lp9118
sbsg20
Nsg47
g1
(g162
g3
NtRp9119
(dp9120
g15
(lp9121
g5459
asg35
(itheano.gof.utils
scratchpad
p9122
(dp9123
bsg187
(lp9124
g9113
asg193
g1
(g958
g3
NtRp9125
(dp9126
S'i'
I1
sg197
g198
sbsbsg48
g961
sbg9048
tp9127
sg1
(g29
g3
NtRp9128
(dp9129
g34
I0
sg20
Nsg153
g5456
sg160
(lp9130
sg32
S'auto_2228'
p9131
sg35
(itheano.gof.utils
scratchpad
p9132
(dp9133
g38
(lp9134
sbsg47
g1
(g162
g3
NtRp9135
(dp9136
g15
(lp9137
g5743
ag5614
ag1
(g29
g3
NtRp9138
(dp9139
g34
I0
sg20
Nsg153
g5456
sg160
(lp9140
sg32
S'auto_2049'
p9141
sg35
(itheano.gof.utils
scratchpad
p9142
(dp9143
g38
g2380
sbsg47
g1
(g162
g3
NtRp9144
(dp9145
g15
(lp9146
g5637
ag1
(g1008
g3
NtRp9147
(dp9148
g32
S'auto_2298'
p9149
sg34
Nsg35
(itheano.gof.utils
scratchpad
p9150
(dp9151
g38
(lp9152
g5272
asg1014
g5755
(g2032
S'\x01'
tRp9153
sbsg20
Nsg48
g5293
sg160
(lp9154
sg1018
g71
(g72
(I0
tS'b'
tRp9155
(I1
(I1
I1
tg2032
I00
S'\x01'
tbsbasg153
g5456
sg187
(lp9156
g9138
asg35
(itheano.gof.utils
scratchpad
p9157
(dp9158
bsg191
(dp9159
sg193
g2464
sbsg48
g2468
sbag1
(g29
g3
NtRp9160
(dp9161
g34
I0
sg20
Nsg153
g5456
sg160
(lp9162
sg32
S'auto_2266'
p9163
sg35
(itheano.gof.utils
scratchpad
p9164
(dp9165
g38
(lp9166
g5254
asbsg47
g1
(g162
g3
NtRp9167
(dp9168
g15
(lp9169
g5614
ag1
(g29
g3
NtRp9170
(dp9171
g34
I0
sg20
Nsg153
g5456
sg160
(lp9172
sg32
S'auto_2039'
p9173
sg35
(itheano.gof.utils
scratchpad
p9174
(dp9175
g38
g5301
sbsg47
g1
(g162
g3
NtRp9176
(dp9177
g15
(lp9178
g1
(g29
g3
NtRp9179
(dp9180
g34
I0
sg20
Nsg153
g5456
sg160
(lp9181
sg32
S'auto_2034'
p9182
sg35
(itheano.gof.utils
scratchpad
p9183
(dp9184
g38
g5319
sbsg47
g1
(g162
g3
NtRp9185
(dp9186
g15
(lp9187
g1
(g29
g3
NtRp9188
(dp9189
g34
I0
sg20
Nsg153
g5456
sg160
(lp9190
sg32
S'auto_2031'
p9191
sg35
(itheano.gof.utils
scratchpad
p9192
(dp9193
g38
g922
sbsg47
g1
(g162
g3
NtRp9194
(dp9195
g15
(lp9196
g5834
ag5828
asg153
g5456
sg187
(lp9197
g9188
asg35
(itheano.gof.utils
scratchpad
p9198
(dp9199
bsg191
(dp9200
sg193
g933
sbsg48
g943
sbasg153
g5456
sg187
(lp9201
g9179
asg35
(itheano.gof.utils
scratchpad
p9202
(dp9203
bsg191
(dp9204
sg193
g5335
sbsg48
g5339
sbasg153
g5456
sg187
(lp9205
g9170
asg35
(itheano.gof.utils
scratchpad
p9206
(dp9207
bsg191
(dp9208
sg193
g5345
sbsg48
g5349
sbasg153
g5456
sg187
(lp9209
g9160
asg35
(itheano.gof.utils
scratchpad
p9210
(dp9211
bsg191
(dp9212
sg193
g5355
sbsg48
g1
(g49
g3
NtRp9213
(dp9214
g52
(I00
I00
tp9215
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg153
g5456
sg187
(lp9216
g9128
asg35
(itheano.gof.utils
scratchpad
p9217
(dp9218
bsg191
(dp9219
sg193
g2297
sbsg48
g1
(g49
g3
NtRp9220
(dp9221
g52
(I00
I00
tp9222
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsb(g9048
g8875
tp9223
sg5520
(g1
(g29
g3
NtRp9224
(dp9225
g32
S'auto_3274'
p9226
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p9227
(dp9228
g38
(lp9229
sbsg20
Nsg47
g1
(g162
g3
NtRp9230
(dp9231
g15
(lp9232
g5520
asg35
(itheano.gof.utils
scratchpad
p9233
(dp9234
bsg187
(lp9235
g9224
asg193
g1
(g958
g3
NtRp9236
(dp9237
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg1
(g29
g3
NtRp9238
(dp9239
g32
S'auto_3275'
p9240
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p9241
(dp9242
g38
(lp9243
sbsg20
Nsg47
g1
(g162
g3
NtRp9244
(dp9245
g15
(lp9246
g5520
asg35
(itheano.gof.utils
scratchpad
p9247
(dp9248
bsg187
(lp9249
g9238
asg193
g1
(g958
g3
NtRp9250
(dp9251
S'i'
I1
sg197
g198
sbsbsg48
g961
sbtp9252
sg1
(g29
g3
NtRp9253
(dp9254
g34
I0
sg20
Nsg153
g5456
sg160
(lp9255
sg32
S'auto_2256'
p9256
sg35
(itheano.gof.utils
scratchpad
p9257
(dp9258
g38
(lp9259
sbsg47
g1
(g162
g3
NtRp9260
(dp9261
g15
(lp9262
g1
(g1008
g3
NtRp9263
(dp9264
g32
S'auto_2317'
p9265
sg34
Nsg35
(itheano.gof.utils
scratchpad
p9266
(dp9267
g38
(lp9268
g2017
asg1014
g5755
(g2032
S'\x02'
tRp9269
sbsg20
Nsg48
g2043
sg160
(lp9270
sg1018
g71
(g72
(I0
tS'b'
tRp9271
(I1
(I1
I1
tg2032
I00
S'\x02'
tbsbasg153
g5456
sg187
(lp9272
g9253
asg35
(itheano.gof.utils
scratchpad
p9273
(dp9274
bsg191
(dp9275
sg193
g1
(g381
g3
NtRp9276
(dp9277
g935
g2784
sg20
Nsg384
g1
(g2785
g3
NtRp9278
(dp9279
g438
g1
(g2788
g3
NtRp9280
(dp9281
g2791
(g396
tp9282
sbsg197
g198
sg2793
g396
sg20
S'convert_to_float64'
p9283
sg2795
cnumpy
float64
p9284
sbsg459
(dp9285
sg462
Nsg463
(dp9286
sg2799
(lp9287
g2801
asg465
I00
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp9288
(dp9289
g52
(I01
I01
tp9290
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsb(g8713
g8713
tp9291
sg1
(g29
g3
NtRp9292
(dp9293
g34
I0
sg20
Nsg153
g5456
sg160
(lp9294
sg32
S'auto_2030'
p9295
sg35
(itheano.gof.utils
scratchpad
p9296
(dp9297
g38
g2136
sbsg47
g1
(g162
g3
NtRp9298
(dp9299
g15
(lp9300
g8998
ag1
(g29
g3
NtRp9301
(dp9302
g34
I0
sg20
Nsg153
g5456
sg160
(lp9303
sg32
S'auto_2802'
p9304
sg35
(itheano.gof.utils
scratchpad
p9305
(dp9306
g38
(lp9307
sbsg47
g1
(g162
g3
NtRp9308
(dp9309
g15
(lp9310
g1
(g221
g3
NtRp9311
(dp9312
g34
I0
sg20
Nsg153
g5456
sg160
(lp9313
sg32
S'auto_2801'
p9314
sg35
(itheano.gof.utils
scratchpad
p9315
(dp9316
g38
(lp9317
sbsg47
g1
(g162
g3
NtRp9318
(dp9319
g15
(lp9320
g5490
ag5509
asg153
g5456
sg187
(lp9321
g9311
asg35
(itheano.gof.utils
scratchpad
p9322
(dp9323
bsg191
(dp9324
sg193
g1
(g6225
g3
NtRp9325
(dp9326
g463
(dp9327
sg197
g198
sg384
g436
sg6331
I01
sg459
(dp9328
sg6334
g1
(g6335
g3
NtRp9329
(dp9330
g384
g436
sg6331
I01
sg463
g9327
sbsbsbsg48
g1
(g77
g3
NtRp9331
(dp9332
g52
(tsg20
Nsbsbasg153
g5456
sg187
(lp9333
g9301
asg35
(itheano.gof.utils
scratchpad
p9334
(dp9335
bsg191
(dp9336
sg193
g265
sbsg48
g1
(g49
g3
NtRp9337
(dp9338
g52
(tsg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg153
g5456
sg187
(lp9339
g9292
asg35
(itheano.gof.utils
scratchpad
p9340
(dp9341
bsg191
(dp9342
sg193
g2297
sbsg48
g2309
sb(tsg6606
(g9097
tp9343
sg1
(g1008
g3
NtRp9344
(dp9345
g32
S'auto_1997'
p9346
sg34
Nsg35
(itheano.gof.utils
scratchpad
p9347
(dp9348
g1014
Nsbsg20
Nsg48
g4877
sg160
(lp9349
sg1018
g4880
sb(tsg1
(g29
g3
NtRp9350
(dp9351
g34
I0
sg20
Nsg153
g5456
sg160
(lp9352
sg32
S'auto_2248'
p9353
sg35
(itheano.gof.utils
scratchpad
p9354
(dp9355
g38
(lp9356
sbsg47
g1
(g162
g3
NtRp9357
(dp9358
g15
(lp9359
g1
(g29
g3
NtRp9360
(dp9361
g34
I0
sg20
Nsg153
g5456
sg160
(lp9362
sg32
S'auto_2247'
p9363
sg35
(itheano.gof.utils
scratchpad
p9364
(dp9365
g38
(lp9366
sbsg47
g1
(g162
g3
NtRp9367
(dp9368
g15
(lp9369
g1
(g1008
g3
NtRp9370
(dp9371
g32
S'auto_1995'
p9372
sg34
Nsg35
(itheano.gof.utils
scratchpad
p9373
(dp9374
g1014
Nsbsg20
Nsg48
g2029
sg160
(lp9375
sg1018
g2033
sbasg153
g5456
sg187
(lp9376
g9360
asg35
(itheano.gof.utils
scratchpad
p9377
(dp9378
bsg191
(dp9379
sg193
g9276
sbsg48
g1
(g49
g3
NtRp9380
(dp9381
g52
(tsg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg153
g5456
sg187
(lp9382
g9350
asg35
(itheano.gof.utils
scratchpad
p9383
(dp9384
bsg191
(dp9385
sg193
g1
(g1178
g3
NtRp9386
(dp9387
g1181
(lp9388
sg252
(lp9389
sg250
(lp9390
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp9391
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp9392
(dp9393
g52
(I01
I01
tp9394
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsb(g8713
g8713
tp9395
sg1
(g29
g3
NtRp9396
(dp9397
g34
I0
sg20
Nsg153
g5456
sg160
(lp9398
sg32
S'auto_2107'
p9399
sg35
(itheano.gof.utils
scratchpad
p9400
(dp9401
g38
g1685
sbsg47
g1
(g162
g3
NtRp9402
(dp9403
g15
(lp9404
g7461
ag1
(g29
g3
NtRp9405
(dp9406
g34
I0
sg20
Nsg153
g5456
sg160
(lp9407
sg32
S'auto_2101'
p9408
sg35
(itheano.gof.utils
scratchpad
p9409
(dp9410
g38
g1734
sbsg47
g1
(g162
g3
NtRp9411
(dp9412
g15
(lp9413
g5608
ag1
(g29
g3
NtRp9414
(dp9415
g34
I0
sg20
Nsg153
g5456
sg160
(lp9416
sg32
S'auto_2280'
p9417
sg35
(itheano.gof.utils
scratchpad
p9418
(dp9419
g38
(lp9420
g2654
asbsg47
g1
(g162
g3
NtRp9421
(dp9422
g15
(lp9423
g5614
ag1
(g29
g3
NtRp9424
(dp9425
g34
I0
sg20
Nsg153
g5456
sg160
(lp9426
sg32
S'auto_2028'
p9427
sg35
(itheano.gof.utils
scratchpad
p9428
(dp9429
g38
g2701
sbsg47
g1
(g162
g3
NtRp9430
(dp9431
g15
(lp9432
g1
(g29
g3
NtRp9433
(dp9434
g34
I0
sg20
Nsg153
g5456
sg160
(lp9435
sg32
S'auto_2021'
p9436
sg35
(itheano.gof.utils
scratchpad
p9437
(dp9438
g38
g1246
sbsg47
g1
(g162
g3
NtRp9439
(dp9440
g15
(lp9441
g1
(g29
g3
NtRp9442
(dp9443
g34
I0
sg20
Nsg153
g5456
sg160
(lp9444
sg32
S'auto_2019'
p9445
sg35
(itheano.gof.utils
scratchpad
p9446
(dp9447
g38
g1224
sbsg47
g1
(g162
g3
NtRp9448
(dp9449
g15
(lp9450
g5961
ag5955
asg153
g5456
sg187
(lp9451
g9442
asg35
(itheano.gof.utils
scratchpad
p9452
(dp9453
bsg191
(dp9454
sg193
g933
sbsg48
g1235
sbasg153
g5456
sg187
(lp9455
g9433
asg35
(itheano.gof.utils
scratchpad
p9456
(dp9457
bsg191
(dp9458
sg193
g997
sbsg48
g1257
sbasg153
g5456
sg187
(lp9459
g9424
asg35
(itheano.gof.utils
scratchpad
p9460
(dp9461
bsg191
(dp9462
sg193
g2745
sbsg48
g2749
sbasg153
g5456
sg187
(lp9463
g9414
asg35
(itheano.gof.utils
scratchpad
p9464
(dp9465
bsg191
(dp9466
sg193
g2755
sbsg48
g1
(g49
g3
NtRp9467
(dp9468
g52
(I00
I00
tp9469
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg153
g5456
sg187
(lp9470
g9405
asg35
(itheano.gof.utils
scratchpad
p9471
(dp9472
bsg191
(dp9473
sg193
g2765
sbsg48
g2769
sbasg153
g5456
sg187
(lp9474
g9396
asg35
(itheano.gof.utils
scratchpad
p9475
(dp9476
bsg191
(dp9477
sg193
g482
sbsg48
g2775
sb(g9113
g9032
tp9478
sg5637
(g9048
g8875
tp9479
sg1
(g29
g3
NtRp9480
(dp9481
g34
I0
sg20
Nsg153
g5456
sg160
(lp9482
sg32
S'auto_2295'
p9483
sg35
(itheano.gof.utils
scratchpad
p9484
(dp9485
g6950
g6951
sg38
(lp9486
sbsg47
g1
(g162
g3
NtRp9487
(dp9488
g15
(lp9489
g1
(g29
g3
NtRp9490
(dp9491
g34
I0
sg20
Nsg153
g5456
sg160
(lp9492
sg32
S'auto_1985'
p9493
sg35
(itheano.gof.utils
scratchpad
p9494
(dp9495
g38
g5271
sbsg47
g1
(g162
g3
NtRp9496
(dp9497
g15
(lp9498
g9078
asg153
g5456
sg187
(lp9499
g9490
asg35
(itheano.gof.utils
scratchpad
p9500
(dp9501
bsg191
(dp9502
sg193
g5287
sbsg48
g5293
sbag1
(g29
g3
NtRp9503
(dp9504
g34
I0
sg20
Nsg153
g5456
sg160
(lp9505
sg32
S'auto_2291'
p9506
sg35
(itheano.gof.utils
scratchpad
p9507
(dp9508
g38
(lp9509
sbsg47
g1
(g162
g3
NtRp9510
(dp9511
g15
(lp9512
g1
(g29
g3
NtRp9513
(dp9514
g34
I0
sg20
Nsg153
g5456
sg160
(lp9515
sg32
S'auto_1996'
p9516
sg35
(itheano.gof.utils
scratchpad
p9517
(dp9518
g38
g2016
sbsg47
g1
(g162
g3
NtRp9519
(dp9520
g15
(lp9521
g9370
asg153
g5456
sg187
(lp9522
g9513
asg35
(itheano.gof.utils
scratchpad
p9523
(dp9524
bsg191
(dp9525
sg193
g2037
sbsg48
g2043
sbag9490
asg153
g5456
sg187
(lp9526
g9503
asg35
(itheano.gof.utils
scratchpad
p9527
(dp9528
bsg191
(dp9529
sg193
g2328
sbsg48
g1
(g49
g3
NtRp9530
(dp9531
g52
(I01
I01
tp9532
sg54
g2460
sg56
g2032
sg59
I00
sg20
Nsbsbasg153
g5456
sg187
(lp9533
g9480
asg35
(itheano.gof.utils
scratchpad
p9534
(dp9535
bsg191
(dp9536
sg193
g2328
sbsg48
g1
(g49
g3
NtRp9537
(dp9538
g52
(I01
I01
tp9539
sg54
g2460
sg56
g2032
sg59
I00
sg20
Nsbsb(g8713
g8713
tp9540
sg5531
(g9032
g8875
tp9541
sg1
(g29
g3
NtRp9542
(dp9543
g34
I0
sg20
Nsg153
g5456
sg160
(lp9544
sg32
S'auto_2108'
p9545
sg35
(itheano.gof.utils
scratchpad
p9546
(dp9547
g38
g4944
sbsg47
g1
(g162
g3
NtRp9548
(dp9549
g15
(lp9550
g1
(g29
g3
NtRp9551
(dp9552
g34
I0
sg20
Nsg153
g5456
sg160
(lp9553
sg32
S'auto_2102'
p9554
sg35
(itheano.gof.utils
scratchpad
p9555
(dp9556
g38
g4962
sbsg47
g1
(g162
g3
NtRp9557
(dp9558
g15
(lp9559
g1
(g29
g3
NtRp9560
(dp9561
g34
I0
sg20
Nsg153
g5456
sg160
(lp9562
sg32
S'auto_2096'
p9563
sg35
(itheano.gof.utils
scratchpad
p9564
(dp9565
g38
g4980
sbsg47
g1
(g162
g3
NtRp9566
(dp9567
g15
(lp9568
g1
(g29
g3
NtRp9569
(dp9570
g34
I0
sg20
Nsg153
g5456
sg160
(lp9571
sg32
S'auto_2090'
p9572
sg35
(itheano.gof.utils
scratchpad
p9573
(dp9574
g38
(lp9575
g4999
asbsg47
g1
(g162
g3
NtRp9576
(dp9577
g15
(lp9578
g5558
asg153
g5456
sg187
(lp9579
g9569
asg35
(itheano.gof.utils
scratchpad
p9580
(dp9581
bsg191
(dp9582
sg193
g5375
sbsg48
g5378
sbasg153
g5456
sg187
(lp9583
g9560
asg35
(itheano.gof.utils
scratchpad
p9584
(dp9585
bsg191
(dp9586
sg193
g5384
sbsg48
g5391
sbasg153
g5456
sg187
(lp9587
g9551
asg35
(itheano.gof.utils
scratchpad
p9588
(dp9589
bsg191
(dp9590
sg193
g2782
sbsg48
g5397
sbasg153
g5456
sg187
(lp9591
g9542
asg35
(itheano.gof.utils
scratchpad
p9592
(dp9593
bsg191
(dp9594
sg193
g5403
sbsg48
g5407
sb(g8713
g8875
tp9595
sg1
(g29
g3
NtRp9596
(dp9597
g34
I0
sg20
Nsg153
g5456
sg160
(lp9598
sg32
S'auto_2197'
p9599
sg35
(itheano.gof.utils
scratchpad
p9600
(dp9601
g6950
g6951
sg38
(lp9602
sbsg47
g1
(g162
g3
NtRp9603
(dp9604
g15
(lp9605
g8926
ag1
(g29
g3
NtRp9606
(dp9607
g34
I0
sg20
Nsg153
g5456
sg160
(lp9608
sg32
S'auto_2193'
p9609
sg35
(itheano.gof.utils
scratchpad
p9610
(dp9611
g38
(lp9612
sbsg47
g1
(g162
g3
NtRp9613
(dp9614
g15
(lp9615
g5538
asg153
g5456
sg187
(lp9616
g9606
asg35
(itheano.gof.utils
scratchpad
p9617
(dp9618
bsg191
(dp9619
sg193
g1
(g381
g3
NtRp9620
(dp9621
g935
g936
sg384
g6310
sg20
S'Elemwise{sgn,no_inplace}'
p9622
sg197
g198
sg459
(dp9623
sg462
(S'sign'
I1
I1
tp9624
sg463
(dp9625
sg465
I00
sg941
S"sign of a\n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Parameters\n    ----------\n    scalar_op\n        An instance of a subclass of scalar.ScalarOp which works uniquely\n        on scalars.\n    inplace_pattern\n        A dictionary that maps the index of an output to the\n        index of an input so the output is calculated inplace using\n        the input's storage. (Just like destroymap, but without the lists.)\n    nfunc_spec\n        Either None or a tuple of three elements,\n        (nfunc_name, nin, nout) such that getattr(numpy, nfunc_name)\n        implements this operation, takes nin inputs and nout outputs.\n        Note that nin cannot always be inferred from the scalar op's\n        own nin field because that value is sometimes 0 (meaning a\n        variable number of inputs), whereas the numpy function may\n        not have varargs.\n\n    Examples\n    --------\n    Elemwise(add) # represents + on tensors (x + y)\n    Elemwise(add, {0 : 0}) # represents the += operation (x += y)\n    Elemwise(add, {0 : 1}) # represents += on the second argument (y += x)\n    Elemwise(mul)(rand(10, 5), rand(1, 5)) # the second input is completed\n    # along the first dimension to match the first input\n    Elemwise(true_div)(rand(10, 5), rand(10, 1)) # same but along the\n    # second dimension\n    Elemwise(int_div)(rand(1, 5), rand(10, 1)) # the output has size (10, 5)\n    Elemwise(log)(rand(3, 4, 5))\n\n    "
p9626
sbsbsg48
g1
(g49
g3
NtRp9627
(dp9628
g52
(I00
I00
tp9629
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg153
g5456
sg187
(lp9630
g9596
asg35
(itheano.gof.utils
scratchpad
p9631
(dp9632
bsg191
(dp9633
sg193
g2297
sbsg48
g1
(g49
g3
NtRp9634
(dp9635
g52
(I00
I00
tp9636
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsb(g9032
g8875
tp9637
sg8948
(g8713
g8713
tp9638
sg1
(g29
g3
NtRp9639
(dp9640
g34
I0
sg20
Nsg153
g5456
sg160
(lp9641
sg32
S'auto_2367'
p9642
sg35
(itheano.gof.utils
scratchpad
p9643
(dp9644
g6950
g6951
sg38
(lp9645
sbsg47
g1
(g162
g3
NtRp9646
(dp9647
g15
(lp9648
g1
(g1008
g3
NtRp9649
(dp9650
g32
S'auto_2384'
p9651
sg34
Nsg35
(itheano.gof.utils
scratchpad
p9652
(dp9653
g38
(lp9654
sg1014
g5755
(g74
S'\n\xd7#<'
tRp9655
sbsg20
Nsg48
g1
(g49
g3
NtRp9656
(dp9657
g52
(I01
I01
tp9658
sg54
S'float32'
p9659
sg56
g74
sg59
I00
sg20
Nsbsg160
(lp9660
sg1018
g71
(g72
(I0
tS'b'
tRp9661
(I1
(I1
I1
tg74
I00
S'\n\xd7#<'
tbsbag1
(g29
g3
NtRp9662
(dp9663
g34
I0
sg20
Nsg153
g5456
sg160
(lp9664
sg32
S'auto_2169'
p9665
sg35
(itheano.gof.utils
scratchpad
p9666
(dp9667
g38
(lp9668
sbsg47
g1
(g162
g3
NtRp9669
(dp9670
g15
(lp9671
g5465
asg153
g5456
sg187
(lp9672
g9662
asg35
(itheano.gof.utils
scratchpad
p9673
(dp9674
bsg191
(dp9675
sg193
g9620
sbsg48
g1
(g49
g3
NtRp9676
(dp9677
g52
(I00
I00
tp9678
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg153
g5456
sg187
(lp9679
g9639
asg35
(itheano.gof.utils
scratchpad
p9680
(dp9681
bsg191
(dp9682
sg193
g2297
sbsg48
g1
(g49
g3
NtRp9683
(dp9684
g52
(I00
I00
tp9685
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsb(g8723
g8737
tp9686
sg6144
(g8713
g8713
tp9687
sg1
(g29
g3
NtRp9688
(dp9689
g34
I0
sg20
Nsg153
g5456
sg160
(lp9690
sg32
S'auto_2109'
p9691
sg35
(itheano.gof.utils
scratchpad
p9692
(dp9693
g38
g4059
sbsg47
g1
(g162
g3
NtRp9694
(dp9695
g15
(lp9696
g9063
asg153
g5456
sg187
(lp9697
g9688
asg35
(itheano.gof.utils
scratchpad
p9698
(dp9699
bsg191
(dp9700
sg193
g4533
sbsg48
g4535
sb(g8737
g8875
tp9701
sg1
(g29
g3
NtRp9702
(dp9703
g34
I0
sg20
Nsg153
g5456
sg160
(lp9704
sg32
S'auto_2356'
p9705
sg35
(itheano.gof.utils
scratchpad
p9706
(dp9707
g38
(lp9708
sbsg47
g1
(g162
g3
NtRp9709
(dp9710
g15
(lp9711
g1
(g1008
g3
NtRp9712
(dp9713
g32
S'auto_2378'
p9714
sg34
Nsg35
(itheano.gof.utils
scratchpad
p9715
(dp9716
g38
(lp9717
sg1014
g5755
(g2032
S'\x01'
tRp9718
sbsg20
Nsg48
g1
(g49
g3
NtRp9719
(dp9720
g52
(I01
I01
tp9721
sg54
S'int8'
p9722
sg56
g2032
sg59
I00
sg20
Nsbsg160
(lp9723
sg1018
g71
(g72
(I0
tS'b'
tRp9724
(I1
(I1
I1
tg2032
I00
S'\x01'
tbsbasg153
g5456
sg187
(lp9725
g9702
asg35
(itheano.gof.utils
scratchpad
p9726
(dp9727
bsg191
(dp9728
sg193
g9276
sbsg48
g1
(g49
g3
NtRp9729
(dp9730
g52
(I01
I01
tp9731
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsb(g8713
g8713
tp9732
sg1
(g1008
g3
NtRp9733
(dp9734
g32
S'auto_2325'
p9735
sg34
Nsg35
(itheano.gof.utils
scratchpad
p9736
(dp9737
g38
(lp9738
sg1014
g5755
(g74
S'\x00\x00\x80?'
tRp9739
sbsg20
Nsg48
g1
(g49
g3
NtRp9740
(dp9741
g52
(I01
I01
tp9742
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsg160
(lp9743
sg1018
g71
(g72
(I0
tS'b'
tRp9744
(I1
(I1
I1
tg74
I00
S'\x00\x00\x80?'
tbsb(g8713
g8713
tp9745
sg1
(g29
g3
NtRp9746
(dp9747
g34
I0
sg20
Nsg153
g5456
sg160
(lp9748
sg32
S'auto_2374'
p9749
sg35
(itheano.gof.utils
scratchpad
p9750
(dp9751
g6950
g6951
sg38
(lp9752
sbsg47
g1
(g162
g3
NtRp9753
(dp9754
g15
(lp9755
g9649
ag9606
asg153
g5456
sg187
(lp9756
g9746
asg35
(itheano.gof.utils
scratchpad
p9757
(dp9758
bsg191
(dp9759
sg193
g2297
sbsg48
g1
(g49
g3
NtRp9760
(dp9761
g52
(I00
I00
tp9762
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsb(g9032
g8875
tp9763
sg1
(g29
g3
NtRp9764
(dp9765
g34
I0
sg20
Nsg153
g5456
sg160
(lp9766
sg32
S'auto_2798'
p9767
sg35
(itheano.gof.utils
scratchpad
p9768
(dp9769
g38
(lp9770
sbsg47
g1
(g162
g3
NtRp9771
(dp9772
g15
(lp9773
g5509
asg153
g5456
sg187
(lp9774
g9764
asg35
(itheano.gof.utils
scratchpad
p9775
(dp9776
bsg191
(dp9777
sg193
g265
sbsg48
g1
(g49
g3
NtRp9778
(dp9779
g52
(tsg54
g202
sg56
g74
sg59
I00
sg20
Nsbsb(tsg1
(g29
g3
NtRp9780
(dp9781
g34
I0
sg20
Nsg153
g5456
sg160
(lp9782
sg32
S'auto_2353'
p9783
sg35
(itheano.gof.utils
scratchpad
p9784
(dp9785
g38
(lp9786
sbsg47
g1
(g162
g3
NtRp9787
(dp9788
g15
(lp9789
g1
(g1008
g3
NtRp9790
(dp9791
g32
S'auto_2344'
p9792
sg34
Nsg35
(itheano.gof.utils
scratchpad
p9793
(dp9794
g1014
Nsbsg20
Nsg48
g1
(g49
g3
NtRp9795
(dp9796
g52
(tsg54
g9722
sg56
g2032
sg59
I00
sg20
Nsbsg160
(lp9797
sg1018
g71
(g72
(I0
tS'b'
tRp9798
(I1
(tg2032
I00
S'\x01'
tbsbasg153
g5456
sg187
(lp9799
g9780
asg35
(itheano.gof.utils
scratchpad
p9800
(dp9801
bsg191
(dp9802
sg193
g1
(g1178
g3
NtRp9803
(dp9804
g1181
(lp9805
sg252
(lp9806
sg250
(lp9807
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp9808
sg197
g198
sbsbsg48
g9719
sb(g8713
g8713
tp9809
sg1
(g221
g3
NtRp9810
(dp9811
g34
I0
sg20
Nsg153
g5456
sg160
(lp9812
sg32
S'auto_2551'
p9813
sg35
(itheano.gof.utils
scratchpad
p9814
(dp9815
g38
(lp9816
sbsg47
g1
(g162
g3
NtRp9817
(dp9818
g15
(lp9819
g9662
asg153
g5456
sg187
(lp9820
g9810
asg35
(itheano.gof.utils
scratchpad
p9821
(dp9822
bsg191
(dp9823
sg193
g2809
sbsg48
g1
(g77
g3
NtRp9824
(dp9825
g52
(I00
I00
tp9826
sg20
Nsbsb(g8723
g8737
tp9827
sg1
(g29
g3
NtRp9828
(dp9829
g34
I0
sg20
Nsg153
g5456
sg160
(lp9830
sg32
S'auto_2110'
p9831
sg35
(itheano.gof.utils
scratchpad
p9832
(dp9833
g38
g3270
sbsg47
g1
(g162
g3
NtRp9834
(dp9835
g15
(lp9836
g6080
asg153
g5456
sg187
(lp9837
g9828
asg35
(itheano.gof.utils
scratchpad
p9838
(dp9839
bsg191
(dp9840
sg193
g3871
sbsg48
g3878
sb(g8713
g9032
tp9841
sg6138
(g9113
g9032
tp9842
sg9170
(g9048
g8875
tp9843
sg1
(g1008
g3
NtRp9844
(dp9845
g32
S'auto_2314'
p9846
sg34
Nsg35
(itheano.gof.utils
scratchpad
p9847
(dp9848
g38
(lp9849
sg1014
g5755
(g74
S'\n\xd7#<'
tRp9850
sbsg20
Nsg48
g1
(g49
g3
NtRp9851
(dp9852
g52
(I01
I01
tp9853
sg54
S'float32'
p9854
sg56
g74
sg59
I00
sg20
Nsbsg160
(lp9855
sg1018
g71
(g72
(I0
tS'b'
tRp9856
(I1
(I1
I1
tg74
I00
S'\n\xd7#<'
tbsb(g8713
g8713
tp9857
sg6131
(g9113
g9032
tp9858
sg1
(g29
g3
NtRp9859
(dp9860
g34
I0
sg20
Nsg153
g5456
sg160
(lp9861
sg32
S'auto_2252'
p9862
sg35
(itheano.gof.utils
scratchpad
p9863
(dp9864
g38
(lp9865
g1843
asbsg47
g1
(g162
g3
NtRp9866
(dp9867
g15
(lp9868
g5637
ag5743
asg153
g5456
sg187
(lp9869
g9859
asg35
(itheano.gof.utils
scratchpad
p9870
(dp9871
bsg191
(dp9872
sg193
g2049
sbsg48
g1
(g49
g3
NtRp9873
(dp9874
g52
(I00
I00
tp9875
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsb(g9048
g8875
tp9876
sg5465
(g8723
g8737
tp9877
sg1
(g29
g3
NtRp9878
(dp9879
g34
I0
sg20
Nsg153
g5456
sg160
(lp9880
sg32
S'auto_2088'
p9881
sg35
(itheano.gof.utils
scratchpad
p9882
(dp9883
g38
g2877
sbsg47
g1
(g162
g3
NtRp9884
(dp9885
g15
(lp9886
g1
(g29
g3
NtRp9887
(dp9888
g34
I0
sg20
Nsg153
g5456
sg160
(lp9889
sg32
S'auto_2082'
p9890
sg35
(itheano.gof.utils
scratchpad
p9891
(dp9892
g38
g2895
sbsg47
g1
(g162
g3
NtRp9893
(dp9894
g15
(lp9895
g1
(g29
g3
NtRp9896
(dp9897
g34
I0
sg20
Nsg153
g5456
sg160
(lp9898
sg32
S'auto_2012'
p9899
sg35
(itheano.gof.utils
scratchpad
p9900
(dp9901
g38
g2181
sbsg47
g1
(g162
g3
NtRp9902
(dp9903
g15
(lp9904
g5465
asg153
g5456
sg187
(lp9905
g9896
asg35
(itheano.gof.utils
scratchpad
p9906
(dp9907
bsg191
(dp9908
sg193
g2211
sbsg48
g2222
sbag8948
asg153
g5456
sg187
(lp9909
g9887
asg35
(itheano.gof.utils
scratchpad
p9910
(dp9911
bsg191
(dp9912
sg193
g2991
sbsg48
g2995
sbag5465
asg153
g5456
sg187
(lp9913
g9878
asg35
(itheano.gof.utils
scratchpad
p9914
(dp9915
bsg191
(dp9916
sg193
g3001
sbsg48
g3005
sb(g8723
g8737
tp9917
sg1
(g221
g3
NtRp9918
(dp9919
g34
I0
sg20
Nsg153
g5456
sg160
(lp9920
sg32
S'auto_2135'
p9921
sg35
(itheano.gof.utils
scratchpad
p9922
(dp9923
g38
g3099
sbsg47
g1
(g162
g3
NtRp9924
(dp9925
g15
(lp9926
g8752
asg153
g5456
sg187
(lp9927
g9918
asg35
(itheano.gof.utils
scratchpad
p9928
(dp9929
bsg191
(dp9930
sg193
g3942
sbsg48
g3944
sb(g8791
tp9931
sg1
(g29
g3
NtRp9932
(dp9933
g34
I0
sg20
Nsg153
g5456
sg160
(lp9934
sg32
S'auto_2112'
p9935
sg35
(itheano.gof.utils
scratchpad
p9936
(dp9937
g38
g4926
sbsg47
g1
(g162
g3
NtRp9938
(dp9939
g15
(lp9940
g9542
asg153
g5456
sg187
(lp9941
g9932
asg35
(itheano.gof.utils
scratchpad
p9942
(dp9943
bsg191
(dp9944
sg193
g5413
sbsg48
g5419
sb(g8875
tp9945
sg5774
(g9048
g8875
tp9946
sg1
(g29
g3
NtRp9947
(dp9948
g34
I0
sg20
Nsg153
g5456
sg160
(lp9949
sg32
S'auto_2060'
p9950
sg35
(itheano.gof.utils
scratchpad
p9951
(dp9952
g38
g5088
sbsg47
g1
(g162
g3
NtRp9953
(dp9954
g15
(lp9955
g8975
asg153
g5456
sg187
(lp9956
g9947
asg35
(itheano.gof.utils
scratchpad
p9957
(dp9958
bsg191
(dp9959
sg193
g5123
sbsg48
g5129
sb(g8713
g8713
tp9960
sg1
(g221
g3
NtRp9961
(dp9962
g34
I0
sg20
Nsg153
g5456
sg160
(lp9963
sg32
S'auto_2125'
p9964
sg35
(itheano.gof.utils
scratchpad
p9965
(dp9966
g38
g3954
sbsg47
g1
(g162
g3
NtRp9967
(dp9968
g15
(lp9969
g1
(g29
g3
NtRp9970
(dp9971
g34
I0
sg20
Nsg153
g5456
sg160
(lp9972
sg32
S'auto_2121'
p9973
sg35
(itheano.gof.utils
scratchpad
p9974
(dp9975
g38
g3966
sbsg47
g1
(g162
g3
NtRp9976
(dp9977
g15
(lp9978
g5538
ag1
(g29
g3
NtRp9979
(dp9980
g34
I0
sg20
Nsg153
g5456
sg160
(lp9981
sg32
S'auto_2117'
p9982
sg35
(itheano.gof.utils
scratchpad
p9983
(dp9984
g38
g3998
sbsg47
g1
(g162
g3
NtRp9985
(dp9986
g15
(lp9987
g1
(g1008
g3
NtRp9988
(dp9989
g32
S'auto_2311'
p9990
sg34
Nsg35
(itheano.gof.utils
scratchpad
p9991
(dp9992
g38
(lp9993
g1579
asg1014
g5755
(g74
S'\x00\x00\x80>'
tRp9994
sbsg20
Nsg48
g1603
sg160
(lp9995
sg1018
g71
(g72
(I0
tS'b'
tRp9996
(I1
(I1
I1
tg74
I00
S'\x00\x00\x80>'
tbsbag1
(g29
g3
NtRp9997
(dp9998
g34
I0
sg20
Nsg153
g5456
sg160
(lp9999
sg32
S'auto_2113'
p10000
sg35
(itheano.gof.utils
scratchpad
p10001
(dp10002
g38
g4043
sbsg47
g1
(g162
g3
NtRp10003
(dp10004
g15
(lp10005
g6164
ag9746
asg153
g5456
sg187
(lp10006
g9997
asg35
(itheano.gof.utils
scratchpad
p10007
(dp10008
bsg191
(dp10009
sg193
g933
sbsg48
g4779
sbasg153
g5456
sg187
(lp10010
g9979
asg35
(itheano.gof.utils
scratchpad
p10011
(dp10012
bsg191
(dp10013
sg193
g2297
sbsg48
g4785
sbasg153
g5456
sg187
(lp10014
g9970
asg35
(itheano.gof.utils
scratchpad
p10015
(dp10016
bsg191
(dp10017
sg193
g1996
sbsg48
g4791
sbasg153
g5456
sg187
(lp10018
g9961
asg35
(itheano.gof.utils
scratchpad
p10019
(dp10020
bsg191
(dp10021
sg193
g4797
sbsg48
g4799
sb(g9032
g8875
tp10022
sg9997
(g8737
g8875
tp10023
sg1
(g221
g3
NtRp10024
(dp10025
g34
I0
sg20
Nsg153
g5456
sg160
(lp10026
sg32
S'auto_2537'
p10027
sg35
(itheano.gof.utils
scratchpad
p10028
(dp10029
g38
(lp10030
sbsg47
g1
(g162
g3
NtRp10031
(dp10032
g15
(lp10033
g9988
asg153
g5456
sg187
(lp10034
g10024
asg35
(itheano.gof.utils
scratchpad
p10035
(dp10036
bsg191
(dp10037
sg193
g2809
sbsg48
g6146
sb(g8713
g8713
tp10038
sg8697
(g8713
tp10039
sg1
(g29
g3
NtRp10040
(dp10041
g34
I0
sg20
Nsg153
g5456
sg160
(lp10042
sg32
S'auto_2267'
p10043
sg35
(itheano.gof.utils
scratchpad
p10044
(dp10045
g38
(lp10046
sbsg47
g1
(g162
g3
NtRp10047
(dp10048
g15
(lp10049
g9078
asg153
g5456
sg187
(lp10050
g10040
asg35
(itheano.gof.utils
scratchpad
p10051
(dp10052
bsg191
(dp10053
sg193
g1
(g1178
g3
NtRp10054
(dp10055
g1181
(lp10056
sg252
(lp10057
sg250
(lp10058
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp10059
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp10060
(dp10061
g52
(I01
I01
tp10062
sg54
g2436
sg56
g2032
sg59
I00
sg20
Nsbsb(g8713
g8713
tp10063
sg9370
(tsg1
(g29
g3
NtRp10064
(dp10065
g34
I0
sg20
Nsg153
g5456
sg160
(lp10066
sg32
S'auto_2024'
p10067
sg35
(itheano.gof.utils
scratchpad
p10068
(dp10069
g38
g2157
sbsg47
g1
(g162
g3
NtRp10070
(dp10071
g15
(lp10072
g1
(g29
g3
NtRp10073
(dp10074
g34
I0
sg20
Nsg153
g5456
sg160
(lp10075
sg32
S'auto_2711'
p10076
sg35
(itheano.gof.utils
scratchpad
p10077
(dp10078
g38
(lp10079
sbsg47
g1
(g162
g3
NtRp10080
(dp10081
g15
(lp10082
g5490
asg153
g5456
sg187
(lp10083
g10073
asg35
(itheano.gof.utils
scratchpad
p10084
(dp10085
bsg191
(dp10086
sg193
g265
sbsg48
g1
(g49
g3
NtRp10087
(dp10088
g52
(tsg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbag9764
asg153
g5456
sg187
(lp10089
g10064
asg35
(itheano.gof.utils
scratchpad
p10090
(dp10091
bsg191
(dp10092
sg193
g933
sbsg48
g2292
sb(tsg1
(g29
g3
NtRp10093
(dp10094
g34
I0
sg20
Nsg153
g5456
sg160
(lp10095
sg32
S'auto_2211'
p10096
sg35
(itheano.gof.utils
scratchpad
p10097
(dp10098
g38
(lp10099
sbsg47
g1
(g162
g3
NtRp10100
(dp10101
g15
(lp10102
g8998
asg153
g5456
sg187
(lp10103
g10093
asg35
(itheano.gof.utils
scratchpad
p10104
(dp10105
bsg191
(dp10106
sg193
g1
(g1178
g3
NtRp10107
(dp10108
g1181
(lp10109
sg252
(lp10110
sg250
(lp10111
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp10112
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp10113
(dp10114
g52
(I01
I01
tp10115
sg54
S'float32'
p10116
sg56
g74
sg59
I00
sg20
Nsbsb(g8713
g8713
tp10117
sg1
(g29
g3
NtRp10118
(dp10119
g34
I0
sg20
Nsg153
g5456
sg160
(lp10120
sg32
S'auto_2114'
p10121
sg35
(itheano.gof.utils
scratchpad
p10122
(dp10123
g38
g3252
sbsg47
g1
(g162
g3
NtRp10124
(dp10125
g15
(lp10126
g9828
asg153
g5456
sg187
(lp10127
g10118
asg35
(itheano.gof.utils
scratchpad
p10128
(dp10129
bsg191
(dp10130
sg193
g2782
sbsg48
g3884
sb(g8713
g9032
tp10131
sg1
(g221
g3
NtRp10132
(dp10133
g34
I0
sg20
Nsg153
g5456
sg160
(lp10134
sg32
S'auto_2564'
p10135
sg35
(itheano.gof.utils
scratchpad
p10136
(dp10137
g38
(lp10138
sbsg47
g1
(g162
g3
NtRp10139
(dp10140
g15
(lp10141
g8697
asg153
g5456
sg187
(lp10142
g10132
asg35
(itheano.gof.utils
scratchpad
p10143
(dp10144
bsg191
(dp10145
sg193
g2809
sbsg48
g5933
sb(g8713
tp10146
sg1
(g1008
g3
NtRp10147
(dp10148
g32
S'auto_2244'
p10149
sg34
Nsg35
(itheano.gof.utils
scratchpad
p10150
(dp10151
g1014
Nsbsg20
Nsg48
g1
(g49
g3
NtRp10152
(dp10153
g52
(tsg54
S'int8'
p10154
sg56
g2032
sg59
I00
sg20
Nsbsg160
(lp10155
sg1018
g71
(g72
(I0
tS'b'
tRp10156
(I1
(tg2032
I00
S'\x02'
tbsb(tsg1
(g29
g3
NtRp10157
(dp10158
g34
I0
sg20
Nsg153
g5456
sg160
(lp10159
sg32
S'auto_2106'
p10160
sg35
(itheano.gof.utils
scratchpad
p10161
(dp10162
g38
g2827
sbsg47
g1
(g162
g3
NtRp10163
(dp10164
g15
(lp10165
g1
(g221
g3
NtRp10166
(dp10167
g34
I0
sg20
Nsg153
g5456
sg160
(lp10168
sg32
S'auto_2100'
p10169
sg35
(itheano.gof.utils
scratchpad
p10170
(dp10171
g38
g2843
sbsg47
g1
(g162
g3
NtRp10172
(dp10173
g15
(lp10174
g1
(g29
g3
NtRp10175
(dp10176
g34
I0
sg20
Nsg153
g5456
sg160
(lp10177
sg32
S'auto_2094'
p10178
sg35
(itheano.gof.utils
scratchpad
p10179
(dp10180
g38
g2859
sbsg47
g1
(g162
g3
NtRp10181
(dp10182
g15
(lp10183
g9878
ag9896
asg153
g5456
sg187
(lp10184
g10175
asg35
(itheano.gof.utils
scratchpad
p10185
(dp10186
bsg191
(dp10187
sg193
g3039
sbsg48
g3049
sbasg153
g5456
sg187
(lp10188
g10166
asg35
(itheano.gof.utils
scratchpad
p10189
(dp10190
bsg191
(dp10191
sg193
g2809
sbsg48
g3055
sbasg153
g5456
sg187
(lp10192
g10157
asg35
(itheano.gof.utils
scratchpad
p10193
(dp10194
bsg191
(dp10195
sg193
g3061
sbsg48
g3063
sb(g8723
g8737
tp10196
sg1
(g29
g3
NtRp10197
(dp10198
g34
I0
sg20
Nsg153
g5456
sg160
(lp10199
sg32
S'auto_2507'
p10200
sg35
(itheano.gof.utils
scratchpad
p10201
(dp10202
g38
(lp10203
sbsg47
g1
(g162
g3
NtRp10204
(dp10205
g15
(lp10206
g5743
asg153
g5456
sg187
(lp10207
g10197
asg35
(itheano.gof.utils
scratchpad
p10208
(dp10209
bsg191
(dp10210
sg193
g1
(g1178
g3
NtRp10211
(dp10212
g1181
(lp10213
I0
aI1
asg252
(lp10214
sg250
(lp10215
sg254
(I01
I01
tp10216
sg1185
I00
sg256
(tsg197
g198
sbsbsg48
g1
(g49
g3
NtRp10217
(dp10218
g52
(tsg54
g5748
sg56
g58
sg59
I00
sg20
Nsbsb(tsg1
(g221
g3
NtRp10219
(dp10220
g34
I0
sg20
Nsg153
g5456
sg160
(lp10221
sg32
S'auto_2115'
p10222
sg35
(itheano.gof.utils
scratchpad
p10223
(dp10224
g38
g1651
sbsg47
g1
(g162
g3
NtRp10225
(dp10226
g15
(lp10227
g6131
asg153
g5456
sg187
(lp10228
g10219
asg35
(itheano.gof.utils
scratchpad
p10229
(dp10230
bsg191
(dp10231
sg193
g2809
sbsg48
g2811
sb(g9113
g9032
tp10232
sg8407
(g8723
g8737
tp10233
sg1
(g1008
g3
NtRp10234
(dp10235
g32
S'auto_2527'
p10236
sg34
Nsg35
(itheano.gof.utils
scratchpad
p10237
(dp10238
g38
(lp10239
sg1014
Nsbsg20
Nsg48
g10217
sg160
(lp10240
sg1018
g71
(g72
(I0
tS'b'
tRp10241
(I1
(tg58
I00
S'\x00\x00\x00\x00\x00\x00\x00@'
tbsb(tsg1
(g29
g3
NtRp10242
(dp10243
g34
I0
sg20
Nsg153
g5456
sg160
(lp10244
sg32
S'auto_2033'
p10245
sg35
(itheano.gof.utils
scratchpad
p10246
(dp10247
g38
g2653
sbsg47
g1
(g162
g3
NtRp10248
(dp10249
g15
(lp10250
g9490
ag9424
asg153
g5456
sg187
(lp10251
g10242
asg35
(itheano.gof.utils
scratchpad
p10252
(dp10253
bsg191
(dp10254
sg193
g2755
sbsg48
g2759
sb(g9048
g8737
tp10255
sg8926
(g9032
g8875
tp10256
sg1
(g29
g3
NtRp10257
(dp10258
g34
I0
sg20
Nsg153
g5456
sg160
(lp10259
sg32
S'auto_2519'
p10260
sg35
(itheano.gof.utils
scratchpad
p10261
(dp10262
g38
(lp10263
sbsg47
g1
(g162
g3
NtRp10264
(dp10265
g15
(lp10266
g5787
ag5781
asg153
g5456
sg187
(lp10267
g10257
asg35
(itheano.gof.utils
scratchpad
p10268
(dp10269
bsg191
(dp10270
sg193
g2297
sbsg48
g1
(g49
g3
NtRp10271
(dp10272
g52
(I00
tp10273
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsb(g8875
tp10274
sg1
(g221
g3
NtRp10275
(dp10276
g34
I0
sg20
Nsg153
g5456
sg160
(lp10277
sg32
S'auto_2116'
p10278
sg35
(itheano.gof.utils
scratchpad
p10279
(dp10280
g38
g4910
sbsg47
g1
(g162
g3
NtRp10281
(dp10282
g15
(lp10283
g9932
asg153
g5456
sg187
(lp10284
g10275
asg35
(itheano.gof.utils
scratchpad
p10285
(dp10286
bsg191
(dp10287
sg193
g2809
sbsg48
g5425
sb(g8875
tp10288
sg1
(g29
g3
NtRp10289
(dp10290
g34
I0
sg20
Nsg153
g5456
sg160
(lp10291
sg32
S'auto_2366'
p10292
sg35
(itheano.gof.utils
scratchpad
p10293
(dp10294
g38
(lp10295
sbsg47
g1
(g162
g3
NtRp10296
(dp10297
g15
(lp10298
g8998
asg153
g5456
sg187
(lp10299
g10289
asg35
(itheano.gof.utils
scratchpad
p10300
(dp10301
bsg191
(dp10302
sg193
g1
(g1178
g3
NtRp10303
(dp10304
g1181
(lp10305
sg252
(lp10306
sg250
(lp10307
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp10308
sg197
g198
sbsbsg48
g9656
sb(g8713
g8713
tp10309
sg9360
(tsg9887
(g8723
g8737
tp10310
sg5781
(g8875
tp10311
sg1
(g29
g3
NtRp10312
(dp10313
g34
I0
sg20
Nsg153
g5456
sg160
(lp10314
sg32
S'auto_2018'
p10315
sg35
(itheano.gof.utils
scratchpad
p10316
(dp10317
g38
g2237
sbsg47
g1
(g162
g3
NtRp10318
(dp10319
g15
(lp10320
g1
(g29
g3
NtRp10321
(dp10322
g34
I0
sg20
Nsg153
g5456
sg160
(lp10323
sg32
S'auto_2618'
p10324
sg35
(itheano.gof.utils
scratchpad
p10325
(dp10326
g38
(lp10327
sbsg47
g1
(g162
g3
NtRp10328
(dp10329
g15
(lp10330
g7387
asg153
g5456
sg187
(lp10331
g10321
asg35
(itheano.gof.utils
scratchpad
p10332
(dp10333
bsg191
(dp10334
sg193
g265
sbsg48
g1
(g49
g3
NtRp10335
(dp10336
g52
(I00
I00
tp10337
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg153
g5456
sg187
(lp10338
g10312
asg35
(itheano.gof.utils
scratchpad
p10339
(dp10340
bsg191
(dp10341
sg193
g2285
sbsg48
g2287
sb(tsg9970
(g9032
g8875
tp10342
sg9979
(g8737
g8875
tp10343
sg5629
(g1
(g29
g3
NtRp10344
(dp10345
g32
S'auto_2145'
p10346
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p10347
(dp10348
g38
(lp10349
sbsg20
Nsg47
g1
(g162
g3
NtRp10350
(dp10351
g15
(lp10352
g5629
asg35
(itheano.gof.utils
scratchpad
p10353
(dp10354
bsg187
(lp10355
g10344
asg193
g1
(g958
g3
NtRp10356
(dp10357
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg1
(g29
g3
NtRp10358
(dp10359
g32
S'auto_2146'
p10360
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p10361
(dp10362
g38
(lp10363
sbsg20
Nsg47
g1
(g162
g3
NtRp10364
(dp10365
g15
(lp10366
g5629
asg35
(itheano.gof.utils
scratchpad
p10367
(dp10368
bsg187
(lp10369
g10358
asg193
g1
(g958
g3
NtRp10370
(dp10371
S'i'
I1
sg197
g198
sbsbsg48
g961
sbtp10372
sg1
(g1008
g3
NtRp10373
(dp10374
g32
S'auto_2206'
p10375
sg34
Nsg35
(itheano.gof.utils
scratchpad
p10376
(dp10377
g1014
Nsbsg20
Nsg48
g1
(g49
g3
NtRp10378
(dp10379
g52
(tsg54
g10116
sg56
g74
sg59
I00
sg20
Nsbsg160
(lp10380
sg1018
g71
(g72
(I0
tS'b'
tRp10381
(I1
(tg74
I00
S'\n\xd7#<'
tbsb(tsg1
(g29
g3
NtRp10382
(dp10383
g34
I0
sg20
Nsg153
g5456
sg160
(lp10384
sg32
S'auto_2118'
p10385
sg35
(itheano.gof.utils
scratchpad
p10386
(dp10387
g38
g3234
sbsg47
g1
(g162
g3
NtRp10388
(dp10389
g15
(lp10390
g10118
asg153
g5456
sg187
(lp10391
g10382
asg35
(itheano.gof.utils
scratchpad
p10392
(dp10393
bsg191
(dp10394
sg193
g3890
sbsg48
g3898
sb(g8713
g9032
tp10395
sg5475
(g8723
g8737
tp10396
sg1
(g29
g3
NtRp10397
(dp10398
g34
I0
sg20
Nsg153
g5456
sg160
(lp10399
sg32
S'auto_2270'
p10400
sg35
(itheano.gof.utils
scratchpad
p10401
(dp10402
g38
(lp10403
sbsg47
g1
(g162
g3
NtRp10404
(dp10405
g15
(lp10406
g9147
asg153
g5456
sg187
(lp10407
g10397
asg35
(itheano.gof.utils
scratchpad
p10408
(dp10409
bsg191
(dp10410
sg193
g9276
sbsg48
g1
(g49
g3
NtRp10411
(dp10412
g52
(I01
I01
tp10413
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsb(g8713
g8713
tp10414
sg1
(g29
g3
NtRp10415
(dp10416
g34
I0
sg20
Nsg153
g5456
sg160
(lp10417
sg32
S'auto_2004'
p10418
sg35
(itheano.gof.utils
scratchpad
p10419
(dp10420
g38
g1578
sbsg47
g1
(g162
g3
NtRp10421
(dp10422
g15
(lp10423
g9344
asg153
g5456
sg187
(lp10424
g10415
asg35
(itheano.gof.utils
scratchpad
p10425
(dp10426
bsg191
(dp10427
sg193
g1597
sbsg48
g1603
sb(g8713
g8713
tp10428
sg1
(g29
g3
NtRp10429
(dp10430
g34
I0
sg20
Nsg153
g5456
sg160
(lp10431
sg32
S'auto_2242'
p10432
sg35
(itheano.gof.utils
scratchpad
p10433
(dp10434
g38
(lp10435
sbsg47
g1
(g162
g3
NtRp10436
(dp10437
g15
(lp10438
g1
(g29
g3
NtRp10439
(dp10440
g34
I0
sg20
Nsg153
g5456
sg160
(lp10441
sg32
S'auto_2237'
p10442
sg35
(itheano.gof.utils
scratchpad
p10443
(dp10444
g38
(lp10445
g5089
asbsg47
g1
(g162
g3
NtRp10446
(dp10447
g15
(lp10448
g7955
asg153
g5456
sg187
(lp10449
g10439
asg35
(itheano.gof.utils
scratchpad
p10450
(dp10451
bsg191
(dp10452
sg193
g1
(g1178
g3
NtRp10453
(dp10454
g1181
(lp10455
sg252
(lp10456
sg250
(lp10457
I0
aI1
asg254
(tsg1185
I00
sg256
g5128
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp10458
(dp10459
g52
(I01
I01
tp10460
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbag1
(g29
g3
NtRp10461
(dp10462
g34
I0
sg20
Nsg153
g5456
sg160
(lp10463
sg32
S'auto_2238'
p10464
sg35
(itheano.gof.utils
scratchpad
p10465
(dp10466
g38
(lp10467
g5089
asbsg47
g1
(g162
g3
NtRp10468
(dp10469
g15
(lp10470
g8984
asg153
g5456
sg187
(lp10471
g10461
asg35
(itheano.gof.utils
scratchpad
p10472
(dp10473
bsg191
(dp10474
sg193
g1
(g1178
g3
NtRp10475
(dp10476
g1181
(lp10477
sg252
(lp10478
sg250
(lp10479
I0
aI1
asg254
(tsg1185
I00
sg256
g5128
sg197
g198
sbsbsg48
g5616
sbasg153
g5456
sg187
(lp10480
g10429
asg35
(itheano.gof.utils
scratchpad
p10481
(dp10482
bsg191
(dp10483
sg193
g2328
sbsg48
g1
(g49
g3
NtRp10484
(dp10485
g52
(I01
I01
tp10486
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsb(g8713
g8713
tp10487
sg1
(g1008
g3
NtRp10488
(dp10489
g32
S'auto_2286'
p10490
sg34
Nsg35
(itheano.gof.utils
scratchpad
p10491
(dp10492
g1014
Nsbsg20
Nsg48
g1
(g49
g3
NtRp10493
(dp10494
g52
(tsg54
S'int8'
p10495
sg56
g2032
sg59
I00
sg20
Nsbsg160
(lp10496
sg1018
g71
(g72
(I0
tS'b'
tRp10497
(I1
(tg2032
I00
S'\x01'
tbsb(tsg1
(g29
g3
NtRp10498
(dp10499
g34
I0
sg20
Nsg153
g5456
sg160
(lp10500
sg32
S'auto_2066'
p10501
sg35
(itheano.gof.utils
scratchpad
p10502
(dp10503
g38
g5070
sbsg47
g1
(g162
g3
NtRp10504
(dp10505
g15
(lp10506
g1
(g29
g3
NtRp10507
(dp10508
g34
I0
sg20
Nsg153
g5456
sg160
(lp10509
sg32
S'auto_2046'
p10510
sg35
(itheano.gof.utils
scratchpad
p10511
(dp10512
g38
g1842
sbsg47
g1
(g162
g3
NtRp10513
(dp10514
g15
(lp10515
g5637
ag9513
asg153
g5456
sg187
(lp10516
g10507
asg35
(itheano.gof.utils
scratchpad
p10517
(dp10518
bsg191
(dp10519
sg193
g2049
sbsg48
g2060
sbag9947
asg153
g5456
sg187
(lp10520
g10498
asg35
(itheano.gof.utils
scratchpad
p10521
(dp10522
bsg191
(dp10523
sg193
g5135
sbsg48
g5139
sb(g9048
g8875
tp10524
sg1
(g29
g3
NtRp10525
(dp10526
g34
I0
sg20
Nsg153
g5456
sg160
(lp10527
sg32
S'auto_2120'
p10528
sg35
(itheano.gof.utils
scratchpad
p10529
(dp10530
g38
g4898
sbsg47
g1
(g162
g3
NtRp10531
(dp10532
g15
(lp10533
g10275
asg153
g5456
sg187
(lp10534
g10525
asg35
(itheano.gof.utils
scratchpad
p10535
(dp10536
bsg191
(dp10537
sg193
g5431
sbsg48
g5433
sb(g8875
tp10538
sg5657
(tsg9712
(g8713
g8713
tp10539
sg7812
(g9048
g8875
tp10540
sg6080
(g9032
tp10541
sg1
(g29
g3
NtRp10542
(dp10543
g34
I0
sg20
Nsg153
g5456
sg160
(lp10544
sg32
S'auto_2119'
p10545
sg35
(itheano.gof.utils
scratchpad
p10546
(dp10547
g38
g1635
sbsg47
g1
(g162
g3
NtRp10548
(dp10549
g15
(lp10550
g10219
asg153
g5456
sg187
(lp10551
g10542
asg35
(itheano.gof.utils
scratchpad
p10552
(dp10553
bsg191
(dp10554
sg193
g2817
sbsg48
g2819
sb(g9113
g9032
tp10555
sg1
(g29
g3
NtRp10556
(dp10557
g34
I0
sg20
Nsg153
g5456
sg160
(lp10558
sg32
S'auto_2020'
p10559
sg35
(itheano.gof.utils
scratchpad
p10560
(dp10561
g38
g2169
sbsg47
g1
(g162
g3
NtRp10562
(dp10563
g15
(lp10564
g1
(g29
g3
NtRp10565
(dp10566
g34
I0
sg20
Nsg153
g5456
sg160
(lp10567
sg32
S'auto_2611'
p10568
sg35
(itheano.gof.utils
scratchpad
p10569
(dp10570
g38
(lp10571
sbsg47
g1
(g162
g3
NtRp10572
(dp10573
g15
(lp10574
g7431
asg153
g5456
sg187
(lp10575
g10565
asg35
(itheano.gof.utils
scratchpad
p10576
(dp10577
bsg191
(dp10578
sg193
g265
sbsg48
g1
(g49
g3
NtRp10579
(dp10580
g52
(I00
I00
tp10581
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg153
g5456
sg187
(lp10582
g10556
asg35
(itheano.gof.utils
scratchpad
p10583
(dp10584
bsg191
(dp10585
sg193
g2228
sbsg48
g2230
sb(tsg1
(g221
g3
NtRp10586
(dp10587
g34
I0
sg20
Nsg153
g5456
sg160
(lp10588
sg32
S'auto_2599'
p10589
sg35
(itheano.gof.utils
scratchpad
p10590
(dp10591
g38
(lp10592
sbsg47
g1
(g162
g3
NtRp10593
(dp10594
g15
(lp10595
g1
(g29
g3
NtRp10596
(dp10597
g34
I0
sg20
Nsg153
g5456
sg160
(lp10598
sg32
S'auto_2124'
p10599
sg35
(itheano.gof.utils
scratchpad
p10600
(dp10601
g38
g4853
sbsg47
g1
(g162
g3
NtRp10602
(dp10603
g15
(lp10604
g8697
ag1
(g29
g3
NtRp10605
(dp10606
g34
I0
sg20
Nsg153
g5456
sg160
(lp10607
sg32
S'auto_2163'
p10608
sg35
(itheano.gof.utils
scratchpad
p10609
(dp10610
g38
(lp10611
g4927
asbsg47
g1
(g162
g3
NtRp10612
(dp10613
g15
(lp10614
g10257
asg153
g5456
sg187
(lp10615
g10605
asg35
(itheano.gof.utils
scratchpad
p10616
(dp10617
bsg191
(dp10618
sg193
g2782
sbsg48
g1
(g49
g3
NtRp10619
(dp10620
g52
(I00
tp10621
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsbasg153
g5456
sg187
(lp10622
g10596
asg35
(itheano.gof.utils
scratchpad
p10623
(dp10624
bsg191
(dp10625
sg193
g2297
sbsg48
g5439
sbasg153
g5456
sg187
(lp10626
g10586
asg35
(itheano.gof.utils
scratchpad
p10627
(dp10628
bsg191
(dp10629
sg193
g2809
sbsg48
g1
(g77
g3
NtRp10630
(dp10631
g52
(I00
tp10632
sg20
Nsbsb(g8875
tp10633
sg1
(g221
g3
NtRp10634
(dp10635
g34
I0
sg20
Nsg153
g5456
sg160
(lp10636
sg32
S'auto_2571'
p10637
sg35
(itheano.gof.utils
scratchpad
p10638
(dp10639
g38
(lp10640
sbsg47
g1
(g162
g3
NtRp10641
(dp10642
g15
(lp10643
g9979
asg153
g5456
sg187
(lp10644
g10634
asg35
(itheano.gof.utils
scratchpad
p10645
(dp10646
bsg191
(dp10647
sg193
g2809
sbsg48
g1
(g77
g3
NtRp10648
(dp10649
g52
(I00
I00
tp10650
sg20
Nsbsb(g8737
g8875
tp10651
sg8917
(g9032
g8875
tp10652
sg5558
(g9048
g8875
tp10653
sg1
(g221
g3
NtRp10654
(dp10655
g34
I0
sg20
Nsg153
g5456
sg160
(lp10656
sg32
S'auto_2558'
p10657
sg35
(itheano.gof.utils
scratchpad
p10658
(dp10659
g38
(lp10660
sbsg47
g1
(g162
g3
NtRp10661
(dp10662
g15
(lp10663
g5475
asg153
g5456
sg187
(lp10664
g10654
asg35
(itheano.gof.utils
scratchpad
p10665
(dp10666
bsg191
(dp10667
sg193
g1
(g6225
g3
NtRp10668
(dp10669
g463
(dp10670
sg197
g198
sg384
g6310
sg6331
I01
sg459
(dp10671
sg6334
g1
(g6335
g3
NtRp10672
(dp10673
g384
g6310
sg6331
I01
sg463
g10670
sbsbsbsg48
g1
(g77
g3
NtRp10674
(dp10675
g52
(I00
I00
tp10676
sg20
Nsbsb(g8723
g8737
tp10677
sg1
(g29
g3
NtRp10678
(dp10679
g34
I0
sg20
Nsg153
g5456
sg160
(lp10680
sg32
S'auto_2089'
p10681
sg35
(itheano.gof.utils
scratchpad
p10682
(dp10683
g38
g1770
sbsg47
g1
(g162
g3
NtRp10684
(dp10685
g15
(lp10686
g1
(g29
g3
NtRp10687
(dp10688
g34
I0
sg20
Nsg153
g5456
sg160
(lp10689
sg32
S'auto_2083'
p10690
sg35
(itheano.gof.utils
scratchpad
p10691
(dp10692
g38
g1788
sbsg47
g1
(g162
g3
NtRp10693
(dp10694
g15
(lp10695
g1
(g29
g3
NtRp10696
(dp10697
g34
I0
sg20
Nsg153
g5456
sg160
(lp10698
sg32
S'auto_2072'
p10699
sg35
(itheano.gof.utils
scratchpad
p10700
(dp10701
g38
g5052
sbsg47
g1
(g162
g3
NtRp10702
(dp10703
g15
(lp10704
g10498
ag9513
asg153
g5456
sg187
(lp10705
g10696
asg35
(itheano.gof.utils
scratchpad
p10706
(dp10707
bsg191
(dp10708
sg193
g5145
sbsg48
g5149
sbag9138
asg153
g5456
sg187
(lp10709
g10687
asg35
(itheano.gof.utils
scratchpad
p10710
(dp10711
bsg191
(dp10712
sg193
g2474
sbsg48
g2478
sbag1
(g29
g3
NtRp10713
(dp10714
g34
I0
sg20
Nsg153
g5456
sg160
(lp10715
sg32
S'auto_2044'
p10716
sg35
(itheano.gof.utils
scratchpad
p10717
(dp10718
g38
g5253
sbsg47
g1
(g162
g3
NtRp10719
(dp10720
g15
(lp10721
g9490
ag9170
asg153
g5456
sg187
(lp10722
g10713
asg35
(itheano.gof.utils
scratchpad
p10723
(dp10724
bsg191
(dp10725
sg193
g5355
sbsg48
g5359
sbasg153
g5456
sg187
(lp10726
g10678
asg35
(itheano.gof.utils
scratchpad
p10727
(dp10728
bsg191
(dp10729
sg193
g2604
sbsg48
g2608
sb(g9048
g8875
tp10730
sg1
(g1008
g3
NtRp10731
(dp10732
g32
S'auto_2330'
p10733
sg34
Nsg35
(itheano.gof.utils
scratchpad
p10734
(dp10735
g38
(lp10736
sg1014
g5755
(g58
S'\x00\x00\x00\x00\x00\x00\x00@'
tRp10737
sbsg20
Nsg48
g9288
sg160
(lp10738
sg1018
g71
(g72
(I0
tS'b'
tRp10739
(I1
(I1
I1
tg58
I00
S'\x00\x00\x00\x00\x00\x00\x00@'
tbsb(g8713
g8713
tp10740
sg6211
(g9032
g8875
tp10741
sg9433
(g9048
g8737
tp10742
sg9790
(tsg1
(g29
g3
NtRp10743
(dp10744
g34
I0
sg20
Nsg153
g5456
sg160
(lp10745
sg32
S'auto_2123'
p10746
sg35
(itheano.gof.utils
scratchpad
p10747
(dp10748
g38
g1611
sbsg47
g1
(g162
g3
NtRp10749
(dp10750
g15
(lp10751
g6131
ag9639
asg153
g5456
sg187
(lp10752
g10743
asg35
(itheano.gof.utils
scratchpad
p10753
(dp10754
bsg191
(dp10755
sg193
g933
sbsg48
g3069
sb(g9113
g9032
tp10756
sg5644
(g9048
g8875
tp10757
sg1
(g221
g3
NtRp10758
(dp10759
g34
I0
sg20
Nsg153
g5456
sg160
(lp10760
sg32
S'auto_2538'
p10761
sg35
(itheano.gof.utils
scratchpad
p10762
(dp10763
g38
(lp10764
sbsg47
g1
(g162
g3
NtRp10765
(dp10766
g15
(lp10767
g10743
asg153
g5456
sg187
(lp10768
g10758
asg35
(itheano.gof.utils
scratchpad
p10769
(dp10770
bsg191
(dp10771
sg193
g2809
sbsg48
g1
(g77
g3
NtRp10772
(dp10773
g52
(I00
I00
tp10774
sg20
Nsbsb(g9113
g9032
tp10775
sg1
(g221
g3
NtRp10776
(dp10777
g34
I0
sg20
Nsg153
g5456
sg160
(lp10778
sg32
S'auto_2562'
p10779
sg35
(itheano.gof.utils
scratchpad
p10780
(dp10781
g38
(lp10782
sbsg47
g1
(g162
g3
NtRp10783
(dp10784
g15
(lp10785
g5941
ag1
(g221
g3
NtRp10786
(dp10787
g34
I0
sg20
Nsg153
g5456
sg160
(lp10788
sg32
S'auto_2566'
p10789
sg35
(itheano.gof.utils
scratchpad
p10790
(dp10791
g38
(lp10792
sbsg47
g1
(g162
g3
NtRp10793
(dp10794
g15
(lp10795
g5931
ag6058
asg153
g5456
sg187
(lp10796
g10786
asg35
(itheano.gof.utils
scratchpad
p10797
(dp10798
bsg191
(dp10799
sg193
g1
(g6225
g3
NtRp10800
(dp10801
g463
(dp10802
sg197
g198
sg384
g2300
sg6331
I01
sg459
(dp10803
sg6334
g1
(g6335
g3
NtRp10804
(dp10805
g384
g2300
sg6331
I01
sg463
g10802
sbsbsbsg48
g1
(g77
g3
NtRp10806
(dp10807
g52
(I00
tp10808
sg20
Nsbsbasg153
g5456
sg187
(lp10809
g10776
asg35
(itheano.gof.utils
scratchpad
p10810
(dp10811
bsg191
(dp10812
sg193
g1
(g6225
g3
NtRp10813
(dp10814
g463
(dp10815
sg197
g198
sg384
g1999
sg6331
I01
sg459
(dp10816
sg6334
g1
(g6335
g3
NtRp10817
(dp10818
g384
g1999
sg6331
I01
sg463
g10815
sbsbsbsg48
g1
(g77
g3
NtRp10819
(dp10820
g52
(I00
tp10821
sg20
Nsbsb(g8791
tp10822
sg1
(g221
g3
NtRp10823
(dp10824
g34
I0
sg20
Nsg153
g5456
sg160
(lp10825
sg32
S'auto_2584'
p10826
sg35
(itheano.gof.utils
scratchpad
p10827
(dp10828
g38
(lp10829
sbsg47
g1
(g162
g3
NtRp10830
(dp10831
g15
(lp10832
g9746
asg153
g5456
sg187
(lp10833
g10823
asg35
(itheano.gof.utils
scratchpad
p10834
(dp10835
bsg191
(dp10836
sg193
g2809
sbsg48
g1
(g77
g3
NtRp10837
(dp10838
g52
(I00
I00
tp10839
sg20
Nsbsb(g9032
g8875
tp10840
sg10596
(g8875
tp10841
sg5834
(g9048
g8875
tp10842
sg5623
(g9048
g8875
tp10843
sg7736
(g9048
g8875
tp10844
sg8975
(tsg1
(g29
g3
NtRp10845
(dp10846
g34
I0
sg20
Nsg153
g5456
sg160
(lp10847
sg32
S'auto_2017'
p10848
sg35
(itheano.gof.utils
scratchpad
p10849
(dp10850
g38
g2398
sbsg47
g1
(g162
g3
NtRp10851
(dp10852
g15
(lp10853
g9513
ag9490
asg153
g5456
sg187
(lp10854
g10845
asg35
(itheano.gof.utils
scratchpad
p10855
(dp10856
bsg191
(dp10857
sg193
g2453
sbsg48
g2457
sb(g8713
g8713
tp10858
sg1
(g29
g3
NtRp10859
(dp10860
g34
I0
sg20
Nsg153
g5456
sg160
(lp10861
sg32
S'auto_2340'
p10862
sg35
(itheano.gof.utils
scratchpad
p10863
(dp10864
g38
(lp10865
sbsg47
g1
(g162
g3
NtRp10866
(dp10867
g15
(lp10868
g1
(g1008
g3
NtRp10869
(dp10870
g32
S'auto_2335'
p10871
sg34
Nsg35
(itheano.gof.utils
scratchpad
p10872
(dp10873
g1014
Nsbsg20
Nsg48
g1
(g49
g3
NtRp10874
(dp10875
g52
(tsg54
S'float64'
p10876
sg56
g58
sg59
I00
sg20
Nsbsg160
(lp10877
sg1018
g71
(g72
(I0
tS'b'
tRp10878
(I1
(tg58
I00
S'\x00\x00\x00\x00\x00\x00\x00@'
tbsbasg153
g5456
sg187
(lp10879
g10859
asg35
(itheano.gof.utils
scratchpad
p10880
(dp10881
bsg191
(dp10882
sg193
g1
(g1178
g3
NtRp10883
(dp10884
g1181
(lp10885
sg252
(lp10886
sg250
(lp10887
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp10888
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp10889
(dp10890
g52
(I01
I01
tp10891
sg54
g10876
sg56
g58
sg59
I00
sg20
Nsbsb(g8713
g8713
tp10892
sg1
(g29
g3
NtRp10893
(dp10894
g34
I0
sg20
Nsg153
g5456
sg160
(lp10895
sg32
S'auto_1998'
p10896
sg35
(itheano.gof.utils
scratchpad
p10897
(dp10898
g38
g4865
sbsg47
g1
(g162
g3
NtRp10899
(dp10900
g15
(lp10901
g9344
asg153
g5456
sg187
(lp10902
g10893
asg35
(itheano.gof.utils
scratchpad
p10903
(dp10904
bsg191
(dp10905
sg193
g4884
sbsg48
g4890
sb(g8713
tp10906
sg1
(g221
g3
NtRp10907
(dp10908
g34
I0
sg20
Nsg153
g5456
sg160
(lp10909
sg32
S'auto_2539'
p10910
sg35
(itheano.gof.utils
scratchpad
p10911
(dp10912
g38
(lp10913
sbsg47
g1
(g162
g3
NtRp10914
(dp10915
g15
(lp10916
g6144
ag1
(g221
g3
NtRp10917
(dp10918
g34
I0
sg20
Nsg153
g5456
sg160
(lp10919
sg32
S'auto_2547'
p10920
sg35
(itheano.gof.utils
scratchpad
p10921
(dp10922
g38
(lp10923
sbsg47
g1
(g162
g3
NtRp10924
(dp10925
g15
(lp10926
g6138
ag1
(g221
g3
NtRp10927
(dp10928
g34
I0
sg20
Nsg153
g5456
sg160
(lp10929
sg32
S'auto_2552'
p10930
sg35
(itheano.gof.utils
scratchpad
p10931
(dp10932
g38
(lp10933
sbsg47
g1
(g162
g3
NtRp10934
(dp10935
g15
(lp10936
g6196
ag10654
asg153
g5456
sg187
(lp10937
g10927
asg35
(itheano.gof.utils
scratchpad
p10938
(dp10939
bsg191
(dp10940
sg193
g1
(g6225
g3
NtRp10941
(dp10942
g463
(dp10943
sg197
g198
sg384
g2300
sg6331
I01
sg459
(dp10944
sg6334
g1
(g6335
g3
NtRp10945
(dp10946
g384
g2300
sg6331
I01
sg463
g10943
sbsbsbsg48
g1
(g77
g3
NtRp10947
(dp10948
g52
(I00
I00
tp10949
sg20
Nsbsbasg153
g5456
sg187
(lp10950
g10917
asg35
(itheano.gof.utils
scratchpad
p10951
(dp10952
bsg191
(dp10953
sg193
g1
(g6225
g3
NtRp10954
(dp10955
g463
(dp10956
sg197
g198
sg384
g436
sg6331
I01
sg459
(dp10957
sg6334
g1
(g6335
g3
NtRp10958
(dp10959
g384
g436
sg6331
I01
sg463
g10956
sbsbsbsg48
g1
(g77
g3
NtRp10960
(dp10961
g52
(I00
I00
tp10962
sg20
Nsbsbasg153
g5456
sg187
(lp10963
g10907
asg35
(itheano.gof.utils
scratchpad
p10964
(dp10965
bsg191
(dp10966
sg193
g1
(g6225
g3
NtRp10967
(dp10968
g463
(dp10969
sg197
g198
sg384
g2300
sg6331
I01
sg459
(dp10970
sg6334
g1
(g6335
g3
NtRp10971
(dp10972
g384
g2300
sg6331
I01
sg463
g10969
sbsbsbsg48
g1
(g77
g3
NtRp10973
(dp10974
g52
(I00
I00
tp10975
sg20
Nsbsb(g9113
g9032
tp10976
sg1
(g221
g3
NtRp10977
(dp10978
g34
I0
sg20
Nsg153
g5456
sg160
(lp10979
sg32
S'auto_2126'
p10980
sg35
(itheano.gof.utils
scratchpad
p10981
(dp10982
g38
g3200
sbsg47
g1
(g162
g3
NtRp10983
(dp10984
g15
(lp10985
g1
(g29
g3
NtRp10986
(dp10987
g34
I0
sg20
Nsg153
g5456
sg160
(lp10988
sg32
S'auto_2122'
p10989
sg35
(itheano.gof.utils
scratchpad
p10990
(dp10991
g38
g3216
sbsg47
g1
(g162
g3
NtRp10992
(dp10993
g15
(lp10994
g10382
asg153
g5456
sg187
(lp10995
g10986
asg35
(itheano.gof.utils
scratchpad
p10996
(dp10997
bsg191
(dp10998
sg193
g3904
sbsg48
g3910
sbasg153
g5456
sg187
(lp10999
g10977
asg35
(itheano.gof.utils
scratchpad
p11000
(dp11001
bsg191
(dp11002
sg193
g2809
sbsg48
g3916
sb(g9032
tp11003
sg6347
(g8723
g8737
tp11004
sg5651
(tsg9179
(g9048
g8875
tp11005
sg1
(g29
g3
NtRp11006
(dp11007
g34
I0
sg20
Nsg153
g5456
sg160
(lp11008
sg32
S'auto_2262'
p11009
sg35
(itheano.gof.utils
scratchpad
p11010
(dp11011
g38
(lp11012
sbsg47
g1
(g162
g3
NtRp11013
(dp11014
g15
(lp11015
g1
(g29
g3
NtRp11016
(dp11017
g34
I0
sg20
Nsg153
g5456
sg160
(lp11018
sg32
S'auto_2261'
p11019
sg35
(itheano.gof.utils
scratchpad
p11020
(dp11021
g38
(lp11022
sbsg47
g1
(g162
g3
NtRp11023
(dp11024
g15
(lp11025
g9078
asg153
g5456
sg187
(lp11026
g11016
asg35
(itheano.gof.utils
scratchpad
p11027
(dp11028
bsg191
(dp11029
sg193
g9276
sbsg48
g1
(g49
g3
NtRp11030
(dp11031
g52
(tsg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg153
g5456
sg187
(lp11032
g11006
asg35
(itheano.gof.utils
scratchpad
p11033
(dp11034
bsg191
(dp11035
sg193
g1
(g1178
g3
NtRp11036
(dp11037
g1181
(lp11038
sg252
(lp11039
sg250
(lp11040
I0
aI1
asg254
(tsg1185
I00
sg256
g10059
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp11041
(dp11042
g52
(I01
I01
tp11043
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsb(g8713
g8713
tp11044
sg1
(g29
g3
NtRp11045
(dp11046
g34
I0
sg20
Nsg153
g5456
sg160
(lp11047
sg32
S'auto_2127'
p11048
sg35
(itheano.gof.utils
scratchpad
p11049
(dp11050
g38
g1566
sbsg47
g1
(g162
g3
NtRp11051
(dp11052
g15
(lp11053
g9988
ag10743
asg153
g5456
sg187
(lp11054
g11045
asg35
(itheano.gof.utils
scratchpad
p11055
(dp11056
bsg191
(dp11057
sg193
g2297
sbsg48
g3075
sb(g9113
g9032
tp11058
sg1
(g221
g3
NtRp11059
(dp11060
g34
I0
sg20
Nsg153
g5456
sg160
(lp11061
sg32
S'auto_2534'
p11062
sg35
(itheano.gof.utils
scratchpad
p11063
(dp11064
g38
(lp11065
sbsg47
g1
(g162
g3
NtRp11066
(dp11067
g15
(lp11068
g5475
ag10907
asg153
g5456
sg187
(lp11069
g11059
asg35
(itheano.gof.utils
scratchpad
p11070
(dp11071
bsg191
(dp11072
sg193
g1
(g6225
g3
NtRp11073
(dp11074
g463
(dp11075
sg197
g198
sg384
g1999
sg6331
I01
sg459
(dp11076
sg6334
g1
(g6335
g3
NtRp11077
(dp11078
g384
g1999
sg6331
I01
sg463
g11075
sbsbsbsg48
g1
(g77
g3
NtRp11079
(dp11080
g52
(I00
I00
tp11081
sg20
Nsbsb(g8723
g8737
tp11082
sg1
(g221
g3
NtRp11083
(dp11084
g34
I0
sg20
Nsg153
g5456
sg160
(lp11085
sg32
S'auto_2550'
p11086
sg35
(itheano.gof.utils
scratchpad
p11087
(dp11088
g38
(lp11089
sbsg47
g1
(g162
g3
NtRp11090
(dp11091
g15
(lp11092
g9649
asg153
g5456
sg187
(lp11093
g11083
asg35
(itheano.gof.utils
scratchpad
p11094
(dp11095
bsg191
(dp11096
sg193
g2809
sbsg48
g6198
sb(g8713
g8713
tp11097
sg1
(g1008
g3
NtRp11098
(dp11099
g32
S'auto_2322'
p11100
sg34
Nsg35
(itheano.gof.utils
scratchpad
p11101
(dp11102
g38
(lp11103
sg1014
g5755
(g58
S'\x00\x00\x00\x00\x00\x00\xf0?'
tRp11104
sbsg20
Nsg48
g10411
sg160
(lp11105
sg1018
g71
(g72
(I0
tS'b'
tRp11106
(I1
(I1
I1
tg58
I00
S'\x00\x00\x00\x00\x00\x00\xf0?'
tbsb(g8713
g8713
tp11107
sg10696
(g9048
g8875
tp11108
sg9311
(tsg5743
(g8713
g8713
tp11109
sg9490
(g8713
g8713
tp11110
sg5576
(g8875
g9032
tp11111
sg1
(g29
g3
NtRp11112
(dp11113
g34
I0
sg20
Nsg153
g5456
sg160
(lp11114
sg32
S'auto_2005'
p11115
sg35
(itheano.gof.utils
scratchpad
p11116
(dp11117
g38
g1167
sbsg47
g1
(g162
g3
NtRp11118
(dp11119
g15
(lp11120
g9084
asg153
g5456
sg187
(lp11121
g11112
asg35
(itheano.gof.utils
scratchpad
p11122
(dp11123
bsg191
(dp11124
sg193
g1179
sbsg48
g1186
sb(g8713
g9097
tp11125
sg1
(g29
g3
NtRp11126
(dp11127
g34
I0
sg20
Nsg153
g5456
sg160
(lp11128
sg32
S'auto_2284'
p11129
sg35
(itheano.gof.utils
scratchpad
p11130
(dp11131
g38
(lp11132
sbsg47
g1
(g162
g3
NtRp11133
(dp11134
g15
(lp11135
g9490
asg153
g5456
sg187
(lp11136
g11126
asg35
(itheano.gof.utils
scratchpad
p11137
(dp11138
bsg191
(dp11139
sg193
g9276
sbsg48
g1
(g49
g3
NtRp11140
(dp11141
g52
(I01
I01
tp11142
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsb(g8713
g8713
tp11143
sg5787
(g8713
tp11144
sg7955
(tsg1
(g29
g3
NtRp11145
(dp11146
g34
I0
sg20
Nsg153
g5456
sg160
(lp11147
sg32
S'auto_2290'
p11148
sg35
(itheano.gof.utils
scratchpad
p11149
(dp11150
g38
(lp11151
sbsg47
g1
(g162
g3
NtRp11152
(dp11153
g15
(lp11154
g9078
asg153
g5456
sg187
(lp11155
g11145
asg35
(itheano.gof.utils
scratchpad
p11156
(dp11157
bsg191
(dp11158
sg193
g1
(g1178
g3
NtRp11159
(dp11160
g1181
(lp11161
sg252
(lp11162
sg250
(lp11163
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp11164
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp11165
(dp11166
g52
(I01
I01
tp11167
sg54
g10495
sg56
g2032
sg59
I00
sg20
Nsbsb(g8713
g8713
tp11168
sg6058
(g9032
tp11169
sg1
(g29
g3
NtRp11170
(dp11171
g34
I0
sg20
Nsg153
g5456
sg160
(lp11172
sg32
S'auto_2253'
p11173
sg35
(itheano.gof.utils
scratchpad
p11174
(dp11175
g38
(lp11176
sbsg47
g1
(g162
g3
NtRp11177
(dp11178
g15
(lp11179
g9370
asg153
g5456
sg187
(lp11180
g11170
asg35
(itheano.gof.utils
scratchpad
p11181
(dp11182
bsg191
(dp11183
sg193
g1
(g1178
g3
NtRp11184
(dp11185
g1181
(lp11186
sg252
(lp11187
sg250
(lp11188
I0
aI1
asg254
(tsg1185
I00
sg256
g9391
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp11189
(dp11190
g52
(I01
I01
tp11191
sg54
g2031
sg56
g2032
sg59
I00
sg20
Nsbsb(g8713
g8713
tp11192
sg1
(g29
g3
NtRp11193
(dp11194
g34
I0
sg20
Nsg153
g5456
sg160
(lp11195
sg32
S'auto_2128'
p11196
sg35
(itheano.gof.utils
scratchpad
p11197
(dp11198
g38
g4821
sbsg47
g1
(g162
g3
NtRp11199
(dp11200
g15
(lp11201
g9084
ag10596
asg153
g5456
sg187
(lp11202
g11193
asg35
(itheano.gof.utils
scratchpad
p11203
(dp11204
bsg191
(dp11205
sg193
g1996
sbsg48
g5445
sb(g9097
tp11206
sg1
(g221
g3
NtRp11207
(dp11208
g34
I0
sg20
Nsg153
g5456
sg160
(lp11209
sg32
S'auto_2131'
p11210
sg35
(itheano.gof.utils
scratchpad
p11211
(dp11212
g38
g4809
sbsg47
g1
(g162
g3
NtRp11213
(dp11214
g15
(lp11215
g11193
asg153
g5456
sg187
(lp11216
g11207
asg35
(itheano.gof.utils
scratchpad
p11217
(dp11218
bsg191
(dp11219
sg193
g5451
sbsg48
g5453
sb(g9097
tp11220
sg1
(g29
g3
NtRp11221
(dp11222
g34
I0
sg20
Nsg153
g5456
sg160
(lp11223
sg32
S'auto_2130'
p11224
sg35
(itheano.gof.utils
scratchpad
p11225
(dp11226
g38
g1534
sbsg47
g1
(g162
g3
NtRp11227
(dp11228
g15
(lp11229
g5465
ag11045
asg153
g5456
sg187
(lp11230
g11221
asg35
(itheano.gof.utils
scratchpad
p11231
(dp11232
bsg191
(dp11233
sg193
g1996
sbsg48
g3081
sb(g8723
g8737
tp11234
sg7646
(g8737
g9048
tp11235
sg6069
(g9032
tp11236
sg9188
(g9048
g8875
tp11237
sg7872
(g9048
g9032
tp11238
sg7570
(tsg9442
(g9048
g8737
tp11239
sg5931
(g8713
tp11240
sg9662
(g8723
g8737
tp11241
sg10073
(tsg9569
(g8875
tp11242
sg1
(g221
g3
NtRp11243
(dp11244
g34
I0
sg20
Nsg153
g5456
sg160
(lp11245
sg32
S'auto_2805'
p11246
sg35
(itheano.gof.utils
scratchpad
p11247
(dp11248
g38
(lp11249
sbsg47
g1
(g162
g3
NtRp11250
(dp11251
g15
(lp11252
g5497
ag9311
asg153
g5456
sg187
(lp11253
g11243
asg35
(itheano.gof.utils
scratchpad
p11254
(dp11255
bsg191
(dp11256
sg193
g1
(g6225
g3
NtRp11257
(dp11258
g463
(dp11259
sg197
g198
sg384
g2300
sg6331
I01
sg459
(dp11260
sg6334
g1
(g6335
g3
NtRp11261
(dp11262
g384
g2300
sg6331
I01
sg463
g11259
sbsbsbsg48
g1
(g77
g3
NtRp11263
(dp11264
g52
(tsg20
Nsbsb(tsg1
(g221
g3
NtRp11265
(dp11266
g34
I0
sg20
Nsg153
g5456
sg160
(lp11267
sg32
S'auto_2533'
p11268
sg35
(itheano.gof.utils
scratchpad
p11269
(dp11270
g38
(lp11271
sbsg47
g1
(g162
g3
NtRp11272
(dp11273
g15
(lp11274
g11045
asg153
g5456
sg187
(lp11275
g11265
asg35
(itheano.gof.utils
scratchpad
p11276
(dp11277
bsg191
(dp11278
sg193
g2809
sbsg48
g1
(g77
g3
NtRp11279
(dp11280
g52
(I00
I00
tp11281
sg20
Nsbsb(g9113
g9032
tp11282
sg1
(g1008
g3
NtRp11283
(dp11284
g32
S'auto_2362'
p11285
sg34
Nsg35
(itheano.gof.utils
scratchpad
p11286
(dp11287
g1014
Nsbsg20
Nsg48
g1
(g49
g3
NtRp11288
(dp11289
g52
(tsg54
g9659
sg56
g74
sg59
I00
sg20
Nsbsg160
(lp11290
sg1018
g71
(g72
(I0
tS'b'
tRp11291
(I1
(tg74
I00
S'\n\xd7#<'
tbsb(tsg1
(g221
g3
NtRp11292
(dp11293
g34
I0
sg20
Nsg153
g5456
sg160
(lp11294
sg32
S'auto_2561'
p11295
sg35
(itheano.gof.utils
scratchpad
p11296
(dp11297
g38
(lp11298
sbsg47
g1
(g162
g3
NtRp11299
(dp11300
g15
(lp11301
g8774
asg153
g5456
sg187
(lp11302
g11292
asg35
(itheano.gof.utils
scratchpad
p11303
(dp11304
bsg191
(dp11305
sg193
g2809
sbsg48
g1
(g77
g3
NtRp11306
(dp11307
g52
(I00
tp11308
sg20
Nsbsb(g9032
tp11309
sg1
(g29
g3
NtRp11310
(dp11311
g34
I0
sg20
Nsg153
g5456
sg160
(lp11312
sg32
S'auto_2166'
p11313
sg35
(itheano.gof.utils
scratchpad
p11314
(dp11315
g38
(lp11316
sbsg47
g1
(g162
g3
NtRp11317
(dp11318
g15
(lp11319
g10605
asg153
g5456
sg187
(lp11320
g11310
asg35
(itheano.gof.utils
scratchpad
p11321
(dp11322
bsg191
(dp11323
sg193
g5403
sbsg48
g1
(g49
g3
NtRp11324
(dp11325
g52
(I00
tp11326
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsb(g8875
tp11327
sg1
(g221
g3
NtRp11328
(dp11329
g34
I0
sg20
Nsg153
g5456
sg160
(lp11330
sg32
S'auto_2588'
p11331
sg35
(itheano.gof.utils
scratchpad
p11332
(dp11333
g38
(lp11334
sbsg47
g1
(g162
g3
NtRp11335
(dp11336
g15
(lp11337
g9649
asg153
g5456
sg187
(lp11338
g11328
asg35
(itheano.gof.utils
scratchpad
p11339
(dp11340
bsg191
(dp11341
sg193
g2809
sbsg48
g1
(g77
g3
NtRp11342
(dp11343
g52
(I01
I01
tp11344
sg20
Nsbsb(g8713
g8713
tp11345
sg1
(g29
g3
NtRp11346
(dp11347
g34
I0
sg20
Nsg153
g5456
sg160
(lp11348
sg32
S'auto_2348'
p11349
sg35
(itheano.gof.utils
scratchpad
p11350
(dp11351
g38
(lp11352
sbsg47
g1
(g162
g3
NtRp11353
(dp11354
g15
(lp11355
g1
(g29
g3
NtRp11356
(dp11357
g34
I0
sg20
Nsg153
g5456
sg160
(lp11358
sg32
S'auto_2347'
p11359
sg35
(itheano.gof.utils
scratchpad
p11360
(dp11361
g38
(lp11362
sbsg47
g1
(g162
g3
NtRp11363
(dp11364
g15
(lp11365
g9790
asg153
g5456
sg187
(lp11366
g11356
asg35
(itheano.gof.utils
scratchpad
p11367
(dp11368
bsg191
(dp11369
sg193
g9276
sbsg48
g1
(g49
g3
NtRp11370
(dp11371
g52
(tsg54
g55
sg56
g58
sg59
I00
sg20
Nsbsbasg153
g5456
sg187
(lp11372
g11346
asg35
(itheano.gof.utils
scratchpad
p11373
(dp11374
bsg191
(dp11375
sg193
g1
(g1178
g3
NtRp11376
(dp11377
g1181
(lp11378
sg252
(lp11379
sg250
(lp11380
I0
aI1
asg254
(tsg1185
I00
sg256
g9808
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp11381
(dp11382
g52
(I01
I01
tp11383
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsb(g8713
g8713
tp11384
sg5688
(tsg9138
(g9048
g8875
tp11385
sg8519
(g9048
g8875
tp11386
sg1
(g29
g3
NtRp11387
(dp11388
g34
I0
sg20
Nsg153
g5456
sg160
(lp11389
sg32
S'auto_2232'
p11390
sg35
(itheano.gof.utils
scratchpad
p11391
(dp11392
g38
(lp11393
sbsg47
g1
(g162
g3
NtRp11394
(dp11395
g15
(lp11396
g8984
asg153
g5456
sg187
(lp11397
g11387
asg35
(itheano.gof.utils
scratchpad
p11398
(dp11399
bsg191
(dp11400
sg193
g2782
sbsg48
g1
(g49
g3
NtRp11401
(dp11402
g52
(tsg54
g202
sg56
g74
sg59
I00
sg20
Nsbsb(tsg1
(g29
g3
NtRp11403
(dp11404
g34
I0
sg20
Nsg153
g5456
sg160
(lp11405
sg32
S'auto_2373'
p11406
sg35
(itheano.gof.utils
scratchpad
p11407
(dp11408
g38
(lp11409
sbsg47
g1
(g162
g3
NtRp11410
(dp11411
g15
(lp11412
g8998
asg153
g5456
sg187
(lp11413
g11403
asg35
(itheano.gof.utils
scratchpad
p11414
(dp11415
bsg191
(dp11416
sg193
g1
(g1178
g3
NtRp11417
(dp11418
g1181
(lp11419
sg252
(lp11420
sg250
(lp11421
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp11422
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp11423
(dp11424
g52
(I01
I01
tp11425
sg54
S'float32'
p11426
sg56
g74
sg59
I00
sg20
Nsbsb(g8713
g8713
tp11427
sg5544
(g9048
g8737
tp11428
sg9896
(g8723
g8737
tp11429
sg5565
(g8875
g9032
tp11430
sg9606
(g9032
g8875
tp11431
sg1
(g29
g3
NtRp11432
(dp11433
g34
I0
sg20
Nsg153
g5456
sg160
(lp11434
sg32
S'auto_2129'
p11435
sg35
(itheano.gof.utils
scratchpad
p11436
(dp11437
g38
g3188
sbsg47
g1
(g162
g3
NtRp11438
(dp11439
g15
(lp11440
g10977
asg153
g5456
sg187
(lp11441
g11432
asg35
(itheano.gof.utils
scratchpad
p11442
(dp11443
bsg191
(dp11444
sg193
g3922
sbsg48
g3924
sb(g9032
tp11445
sg7431
(g1
(g29
g3
NtRp11446
(dp11447
g32
S'auto_2612'
p11448
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p11449
(dp11450
g38
(lp11451
sbsg20
Nsg47
g1
(g162
g3
NtRp11452
(dp11453
g15
(lp11454
g7431
asg35
(itheano.gof.utils
scratchpad
p11455
(dp11456
bsg187
(lp11457
g11446
asg193
g1
(g958
g3
NtRp11458
(dp11459
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg1
(g29
g3
NtRp11460
(dp11461
g32
S'auto_2613'
p11462
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p11463
(dp11464
g38
(lp11465
sbsg20
Nsg47
g1
(g162
g3
NtRp11466
(dp11467
g15
(lp11468
g7431
asg35
(itheano.gof.utils
scratchpad
p11469
(dp11470
bsg187
(lp11471
g11460
asg193
g1
(g958
g3
NtRp11472
(dp11473
S'i'
I1
sg197
g198
sbsbsg48
g961
sbtp11474
sg6124
(g9113
g9032
tp11475
sg1
(g1008
g3
NtRp11476
(dp11477
g32
S'auto_2258'
p11478
sg34
Nsg35
(itheano.gof.utils
scratchpad
p11479
(dp11480
g1014
Nsbsg20
Nsg48
g1
(g49
g3
NtRp11481
(dp11482
g52
(tsg54
S'int8'
p11483
sg56
g2032
sg59
I00
sg20
Nsbsg160
(lp11484
sg1018
g71
(g72
(I0
tS'b'
tRp11485
(I1
(tg2032
I00
S'\x01'
tbsb(tsg1
(g29
g3
NtRp11486
(dp11487
g34
I0
sg20
Nsg153
g5456
sg160
(lp11488
sg32
S'auto_2275'
p11489
sg35
(itheano.gof.utils
scratchpad
p11490
(dp11491
g38
(lp11492
sbsg47
g1
(g162
g3
NtRp11493
(dp11494
g15
(lp11495
g9078
asg153
g5456
sg187
(lp11496
g11486
asg35
(itheano.gof.utils
scratchpad
p11497
(dp11498
bsg191
(dp11499
sg193
g9276
sbsg48
g1
(g49
g3
NtRp11500
(dp11501
g52
(tsg54
g55
sg56
g58
sg59
I00
sg20
Nsbsb(tsg1
(g5496
g3
NtRp11502
(dp11503
g32
S'auto_2582'
p11504
sg34
Nsg35
(itheano.gof.utils
scratchpad
p11505
(dp11506
g38
(lp11507
sbsg20
Nsg48
g1
(g77
g3
NtRp11508
(dp11509
g52
(I01
I01
tp11510
sg20
Nsbsg160
(lp11511
sg1018
g70
(g71
(g72
(I0
tS'b'
tRp11512
(I1
(I1
I1
tg74
I00
S'\x00\x00\x80>'
tbtRp11513
sb(g8713
g8713
tp11514
sg1
(g221
g3
NtRp11515
(dp11516
g34
I0
sg20
Nsg153
g5456
sg160
(lp11517
sg32
S'auto_2589'
p11518
sg35
(itheano.gof.utils
scratchpad
p11519
(dp11520
g38
(lp11521
sbsg47
g1
(g162
g3
NtRp11522
(dp11523
g15
(lp11524
g9606
asg153
g5456
sg187
(lp11525
g11515
asg35
(itheano.gof.utils
scratchpad
p11526
(dp11527
bsg191
(dp11528
sg193
g2809
sbsg48
g1
(g77
g3
NtRp11529
(dp11530
g52
(I00
I00
tp11531
sg20
Nsbsb(g9032
g8875
tp11532
sg9503
(g8713
g8713
tp11533
sg1
(g29
g3
NtRp11534
(dp11535
g34
I0
sg20
Nsg153
g5456
sg160
(lp11536
sg32
S'auto_2010'
p11537
sg35
(itheano.gof.utils
scratchpad
p11538
(dp11539
g38
g1197
sbsg47
g1
(g162
g3
NtRp11540
(dp11541
g15
(lp11542
g8761
asg153
g5456
sg187
(lp11543
g11534
asg35
(itheano.gof.utils
scratchpad
p11544
(dp11545
bsg191
(dp11546
sg193
g1208
sbsg48
g1213
sb(g8713
g8791
tp11547
sg1
(g29
g3
NtRp11548
(dp11549
g34
I0
sg20
Nsg153
g5456
sg160
(lp11550
sg32
S'auto_2222'
p11551
sg35
(itheano.gof.utils
scratchpad
p11552
(dp11553
g6950
g6951
sg38
(lp11554
sbsg47
g1
(g162
g3
NtRp11555
(dp11556
g15
(lp11557
g1
(g29
g3
NtRp11558
(dp11559
g34
I0
sg20
Nsg153
g5456
sg160
(lp11560
sg32
S'auto_2221'
p11561
sg35
(itheano.gof.utils
scratchpad
p11562
(dp11563
g38
(lp11564
sbsg47
g1
(g162
g3
NtRp11565
(dp11566
g15
(lp11567
g1
(g1008
g3
NtRp11568
(dp11569
g32
S'auto_2215'
p11570
sg34
Nsg35
(itheano.gof.utils
scratchpad
p11571
(dp11572
g1014
Nsbsg20
Nsg48
g1
(g49
g3
NtRp11573
(dp11574
g52
(tsg54
g5748
sg56
g58
sg59
I00
sg20
Nsbsg160
(lp11575
sg1018
g71
(g72
(I0
tS'b'
tRp11576
(I1
(tg58
I00
S'\x00\x00\x00\x00\x00\x00\x00@'
tbsbasg153
g5456
sg187
(lp11577
g11558
asg35
(itheano.gof.utils
scratchpad
p11578
(dp11579
bsg191
(dp11580
sg193
g1
(g1178
g3
NtRp11581
(dp11582
g1181
(lp11583
sg252
(lp11584
sg250
(lp11585
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp11586
sg197
g198
sbsbsg48
g5745
sbag10498
ag9138
ag10713
asg153
g5456
sg187
(lp11587
g11548
asg35
(itheano.gof.utils
scratchpad
p11588
(dp11589
bsg191
(dp11590
sg193
g2297
sbsg48
g1
(g49
g3
NtRp11591
(dp11592
g52
(I00
I00
tp11593
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsb(g9048
g8875
tp11594
sg8816
(g9032
g8875
tp11595
sg5828
(g8713
g9097
tp11596
sg5509
(tsg6098
(g9113
g9048
tp11597
sg5941
(g8791
tp11598
sg5948
(g8713
g8791
tp11599
sg5552
(g8737
g9048
tp11600
sg1
(g29
g3
NtRp11601
(dp11602
g34
I0
sg20
Nsg153
g5456
sg160
(lp11603
sg32
S'auto_2173'
p11604
sg35
(itheano.gof.utils
scratchpad
p11605
(dp11606
g6950
g6951
sg38
(lp11607
sbsg47
g1
(g162
g3
NtRp11608
(dp11609
g15
(lp11610
g9887
ag9662
asg153
g5456
sg187
(lp11611
g11601
asg35
(itheano.gof.utils
scratchpad
p11612
(dp11613
bsg191
(dp11614
sg193
g2297
sbsg48
g1
(g49
g3
NtRp11615
(dp11616
g52
(I00
I00
tp11617
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsb(g8723
g8737
tp11618
sg8998
(tsg7991
(g9097
tp11619
sg10687
(g9048
g8875
tp11620
sg5668
(tsg10927
(g8723
g8737
tp11621
sg9160
(g9048
g8875
tp11622
sg1
(g29
g3
NtRp11623
(dp11624
g34
I0
sg20
Nsg153
g5456
sg160
(lp11625
sg32
S'auto_2518'
p11626
sg35
(itheano.gof.utils
scratchpad
p11627
(dp11628
g38
(lp11629
sbsg47
g1
(g162
g3
NtRp11630
(dp11631
g15
(lp11632
g10234
asg153
g5456
sg187
(lp11633
g11623
asg35
(itheano.gof.utils
scratchpad
p11634
(dp11635
bsg191
(dp11636
sg193
g1
(g1178
g3
NtRp11637
(dp11638
g1181
(lp11639
sg252
(lp11640
sg250
(lp11641
I0
asg254
(tsg1185
I00
sg256
(S'x'
tp11642
sg197
g198
sbsbsg48
g5789
sb(g8713
tp11643
sg1
(g1008
g3
NtRp11644
(dp11645
g32
S'auto_2389'
p11646
sg34
Nsg35
(itheano.gof.utils
scratchpad
p11647
(dp11648
g38
(lp11649
sg1014
g5755
(g58
S'\x00\x00\x00\x00\x00\x00\xf0?'
tRp11650
sbsg20
Nsg48
g9729
sg160
(lp11651
sg1018
g71
(g72
(I0
tS'b'
tRp11652
(I1
(I1
I1
tg58
I00
S'\x00\x00\x00\x00\x00\x00\xf0?'
tbsb(g8713
g8713
tp11653
sg5955
(g8713
g8791
tp11654
sg9147
(g8713
g8713
tp11655
sg8966
(tsg1
(g29
g3
NtRp11656
(dp11657
g34
I0
sg20
Nsg153
g5456
sg160
(lp11658
sg32
S'auto_2177'
p11659
sg35
(itheano.gof.utils
scratchpad
p11660
(dp11661
g38
(lp11662
sbsg47
g1
(g162
g3
NtRp11663
(dp11664
g15
(lp11665
g8948
ag9662
asg153
g5456
sg187
(lp11666
g11656
asg35
(itheano.gof.utils
scratchpad
p11667
(dp11668
bsg191
(dp11669
sg193
g2297
sbsg48
g1
(g49
g3
NtRp11670
(dp11671
g52
(I00
I00
tp11672
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsb(g8723
g8737
tp11673
sg10786
(g9032
tp11674
sg11558
(g8713
g8713
tp11675
sg1
(g29
g3
NtRp11676
(dp11677
g34
I0
sg20
Nsg153
g5456
sg160
(lp11678
sg32
S'auto_2281'
p11679
sg35
(itheano.gof.utils
scratchpad
p11680
(dp11681
g38
(lp11682
sbsg47
g1
(g162
g3
NtRp11683
(dp11684
g15
(lp11685
g9078
asg153
g5456
sg187
(lp11686
g11676
asg35
(itheano.gof.utils
scratchpad
p11687
(dp11688
bsg191
(dp11689
sg193
g1
(g1178
g3
NtRp11690
(dp11691
g1181
(lp11692
sg252
(lp11693
sg250
(lp11694
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp11695
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp11696
(dp11697
g52
(I01
I01
tp11698
sg54
g2436
sg56
g2032
sg59
I00
sg20
Nsbsb(g8713
g8713
tp11699
sg1
(g29
g3
NtRp11700
(dp11701
g34
I0
sg20
Nsg153
g5456
sg160
(lp11702
sg32
S'auto_2201'
p11703
sg35
(itheano.gof.utils
scratchpad
p11704
(dp11705
g38
(lp11706
sbsg47
g1
(g162
g3
NtRp11707
(dp11708
g15
(lp11709
g8948
ag9606
asg153
g5456
sg187
(lp11710
g11700
asg35
(itheano.gof.utils
scratchpad
p11711
(dp11712
bsg191
(dp11713
sg193
g2297
sbsg48
g1
(g49
g3
NtRp11714
(dp11715
g52
(I00
I00
tp11716
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsb(g9032
g8875
tp11717
sg9513
(g8713
g8713
tp11718
sg7665
(g9048
g8875
tp11719
sg1
(g29
g3
NtRp11720
(dp11721
g34
I0
sg20
Nsg153
g5456
sg160
(lp11722
sg32
S'auto_2189'
p11723
sg35
(itheano.gof.utils
scratchpad
p11724
(dp11725
g6950
g6951
sg38
(lp11726
sbsg47
g1
(g162
g3
NtRp11727
(dp11728
g15
(lp11729
g9844
ag9733
ag9662
asg153
g5456
sg187
(lp11730
g11720
asg35
(itheano.gof.utils
scratchpad
p11731
(dp11732
bsg191
(dp11733
sg193
g2297
sbsg48
g1
(g49
g3
NtRp11734
(dp11735
g52
(I00
I00
tp11736
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsb(g8723
g8737
tp11737
sg9301
(tsg8391
(tsg8455
(g9097
tp11738
sg8908
(g9032
g8875
tp11739
sg8204
(g8791
tp11740
sg8984
(tsg5497
(tsg10869
(tsg9414
(g9048
g8737
tp11741
sg8074
(g9032
g8875
tp11742
sg1
(g29
g3
NtRp11743
(dp11744
g34
I0
sg20
Nsg153
g5456
sg160
(lp11745
sg32
S'auto_2352'
p11746
sg35
(itheano.gof.utils
scratchpad
p11747
(dp11748
g38
(lp11749
g2381
asbsg47
g1
(g162
g3
NtRp11750
(dp11751
g15
(lp11752
g5637
ag5614
asg153
g5456
sg187
(lp11753
g11743
asg35
(itheano.gof.utils
scratchpad
p11754
(dp11755
bsg191
(dp11756
sg193
g2464
sbsg48
g1
(g49
g3
NtRp11757
(dp11758
g52
(I00
I00
tp11759
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsb(g9048
g8875
tp11760
sg1
(g29
g3
NtRp11761
(dp11762
g34
I0
sg20
Nsg153
g5456
sg160
(lp11763
sg32
S'auto_2092'
p11764
sg35
(itheano.gof.utils
scratchpad
p11765
(dp11766
g38
g4107
sbsg47
g1
(g162
g3
NtRp11767
(dp11768
g15
(lp11769
g7646
ag5558
asg153
g5456
sg187
(lp11770
g11761
asg35
(itheano.gof.utils
scratchpad
p11771
(dp11772
bsg191
(dp11773
sg193
g482
sbsg48
g4514
sb(g8737
g8875
tp11774
sg11016
(tsg1
(g221
g3
NtRp11775
(dp11776
g34
I0
sg20
Nsg153
g5456
sg160
(lp11777
sg32
S'auto_2577'
p11778
sg35
(itheano.gof.utils
scratchpad
p11779
(dp11780
g38
(lp11781
sbsg47
g1
(g162
g3
NtRp11782
(dp11783
g15
(lp11784
g6144
ag8806
asg153
g5456
sg187
(lp11785
g11775
asg35
(itheano.gof.utils
scratchpad
p11786
(dp11787
bsg191
(dp11788
sg193
g1
(g6225
g3
NtRp11789
(dp11790
g463
(dp11791
sg197
g198
sg384
g2300
sg6331
I01
sg459
(dp11792
sg6334
g1
(g6335
g3
NtRp11793
(dp11794
g384
g2300
sg6331
I01
sg463
g11791
sbsbsbsg48
g1
(g77
g3
NtRp11795
(dp11796
g52
(I00
I00
tp11797
sg20
Nsbsb(g8737
g8875
tp11798
sg1
(g221
g3
NtRp11799
(dp11800
g34
I0
sg20
Nsg153
g5456
sg160
(lp11801
sg32
S'auto_2600'
p11802
sg35
(itheano.gof.utils
scratchpad
p11803
(dp11804
g38
(lp11805
sbsg47
g1
(g162
g3
NtRp11806
(dp11807
g15
(lp11808
g5814
ag1
(g221
g3
NtRp11809
(dp11810
g34
I0
sg20
Nsg153
g5456
sg160
(lp11811
sg32
S'auto_2604'
p11812
sg35
(itheano.gof.utils
scratchpad
p11813
(dp11814
g38
(lp11815
sbsg47
g1
(g162
g3
NtRp11816
(dp11817
g15
(lp11818
g5931
ag5808
asg153
g5456
sg187
(lp11819
g11809
asg35
(itheano.gof.utils
scratchpad
p11820
(dp11821
bsg191
(dp11822
sg193
g1
(g6225
g3
NtRp11823
(dp11824
g463
(dp11825
sg197
g198
sg384
g2300
sg6331
I01
sg459
(dp11826
sg6334
g1
(g6335
g3
NtRp11827
(dp11828
g384
g2300
sg6331
I01
sg463
g11825
sbsbsbsg48
g1
(g77
g3
NtRp11829
(dp11830
g52
(I00
tp11831
sg20
Nsbsbasg153
g5456
sg187
(lp11832
g11799
asg35
(itheano.gof.utils
scratchpad
p11833
(dp11834
bsg191
(dp11835
sg193
g1
(g6225
g3
NtRp11836
(dp11837
g463
(dp11838
sg197
g198
sg384
g1999
sg6331
I01
sg459
(dp11839
sg6334
g1
(g6335
g3
NtRp11840
(dp11841
g384
g1999
sg6331
I01
sg463
g11838
sbsbsbsg48
g1
(g77
g3
NtRp11842
(dp11843
g52
(I00
tp11844
sg20
Nsbsb(g9097
tp11845
sg1
(g29
g3
NtRp11846
(dp11847
g34
I0
sg20
Nsg153
g5456
sg160
(lp11848
sg32
S'auto_2276'
p11849
sg35
(itheano.gof.utils
scratchpad
p11850
(dp11851
g38
(lp11852
sbsg47
g1
(g162
g3
NtRp11853
(dp11854
g15
(lp11855
g11486
asg153
g5456
sg187
(lp11856
g11846
asg35
(itheano.gof.utils
scratchpad
p11857
(dp11858
bsg191
(dp11859
sg193
g1
(g1178
g3
NtRp11860
(dp11861
g1181
(lp11862
sg252
(lp11863
sg250
(lp11864
I0
aI1
asg254
(tsg1185
I00
sg256
g11695
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp11865
(dp11866
g52
(I01
I01
tp11867
sg54
g55
sg56
g58
sg59
I00
sg20
Nsbsb(g8713
g8713
tp11868
sg10917
(g9113
g9032
tp11869
sg8935
(g9032
g8875
tp11870
sg1
(g1008
g3
NtRp11871
(dp11872
g32
S'auto_2272'
p11873
sg34
Nsg35
(itheano.gof.utils
scratchpad
p11874
(dp11875
g1014
Nsbsg20
Nsg48
g1
(g49
g3
NtRp11876
(dp11877
g52
(tsg54
S'int8'
p11878
sg56
g2032
sg59
I00
sg20
Nsbsg160
(lp11879
sg1018
g71
(g72
(I0
tS'b'
tRp11880
(I1
(tg2032
I00
S'\x01'
tbsb(tsg1
(g1008
g3
NtRp11881
(dp11882
g32
S'auto_2369'
p11883
sg34
Nsg35
(itheano.gof.utils
scratchpad
p11884
(dp11885
g1014
Nsbsg20
Nsg48
g1
(g49
g3
NtRp11886
(dp11887
g52
(tsg54
g11426
sg56
g74
sg59
I00
sg20
Nsbsg160
(lp11888
sg1018
g71
(g72
(I0
tS'b'
tRp11889
(I1
(tg74
I00
S'\n\xd7#<'
tbsb(tsg10166
(g8723
g8737
tp11890
sg7387
(g1
(g29
g3
NtRp11891
(dp11892
g32
S'auto_2619'
p11893
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p11894
(dp11895
g38
(lp11896
sbsg20
Nsg47
g1
(g162
g3
NtRp11897
(dp11898
g15
(lp11899
g7387
asg35
(itheano.gof.utils
scratchpad
p11900
(dp11901
bsg187
(lp11902
g11891
asg193
g1
(g958
g3
NtRp11903
(dp11904
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg1
(g29
g3
NtRp11905
(dp11906
g32
S'auto_2620'
p11907
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p11908
(dp11909
g38
(lp11910
sbsg20
Nsg47
g1
(g162
g3
NtRp11911
(dp11912
g15
(lp11913
g7387
asg35
(itheano.gof.utils
scratchpad
p11914
(dp11915
bsg187
(lp11916
g11905
asg193
g1
(g958
g3
NtRp11917
(dp11918
S'i'
I1
sg197
g198
sbsbsg48
g961
sbtp11919
sg10321
(g9032
g8875
tp11920
sg1
(g221
g3
NtRp11921
(dp11922
g34
I0
sg20
Nsg153
g5456
sg160
(lp11923
sg32
S'auto_2546'
p11924
sg35
(itheano.gof.utils
scratchpad
p11925
(dp11926
g38
(lp11927
sbsg47
g1
(g162
g3
NtRp11928
(dp11929
g15
(lp11930
g9639
asg153
g5456
sg187
(lp11931
g11921
asg35
(itheano.gof.utils
scratchpad
p11932
(dp11933
bsg191
(dp11934
sg193
g2809
sbsg48
g1
(g77
g3
NtRp11935
(dp11936
g52
(I00
I00
tp11937
sg20
Nsbsb(g8723
g8737
tp11938
sg10175
(g8723
g8737
tp11939
sg5459
(g9048
g9113
tp11940
sg5801
(g8875
tp11941
sg1
(g29
g3
NtRp11942
(dp11943
g34
I0
sg20
Nsg153
g5456
sg160
(lp11944
sg32
S'auto_2157'
p11945
sg35
(itheano.gof.utils
scratchpad
p11946
(dp11947
g38
(lp11948
sbsg47
g1
(g162
g3
NtRp11949
(dp11950
g15
(lp11951
g6069
asg153
g5456
sg187
(lp11952
g11942
asg35
(itheano.gof.utils
scratchpad
p11953
(dp11954
bsg191
(dp11955
sg193
g3890
sbsg48
g1
(g49
g3
NtRp11956
(dp11957
g52
(I00
tp11958
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsb(g9032
tp11959
sg5608
(g9048
g9032
tp11960
sg10461
(g8713
g8713
tp11961
sg1
(g221
g3
NtRp11962
(dp11963
g34
I0
sg20
Nsg153
g5456
sg160
(lp11964
sg32
S'auto_2572'
p11965
sg35
(itheano.gof.utils
scratchpad
p11966
(dp11967
g38
(lp11968
sbsg47
g1
(g162
g3
NtRp11969
(dp11970
g15
(lp11971
g5531
ag11775
asg153
g5456
sg187
(lp11972
g11962
asg35
(itheano.gof.utils
scratchpad
p11973
(dp11974
bsg191
(dp11975
sg193
g1
(g6225
g3
NtRp11976
(dp11977
g463
(dp11978
sg197
g198
sg384
g1999
sg6331
I01
sg459
(dp11979
sg6334
g1
(g6335
g3
NtRp11980
(dp11981
g384
g1999
sg6331
I01
sg463
g11978
sbsbsbsg48
g1
(g77
g3
NtRp11982
(dp11983
g52
(I00
I00
tp11984
sg20
Nsbsb(g9032
g8875
tp11985
sg1
(g1008
g3
NtRp11986
(dp11987
g32
S'auto_2182'
p11988
sg34
Nsg35
(itheano.gof.utils
scratchpad
p11989
(dp11990
g1014
Nsbsg20
Nsg48
g1
(g49
g3
NtRp11991
(dp11992
g52
(tsg54
g9854
sg56
g74
sg59
I00
sg20
Nsbsg160
(lp11993
sg1018
g71
(g72
(I0
tS'b'
tRp11994
(I1
(tg74
I00
S'\n\xd7#<'
tbsb(tsg9560
(g8713
g8875
tp11995
sg8774
(g9032
tp11996
sg1
(g29
g3
NtRp11997
(dp11998
g34
I0
sg20
Nsg153
g5456
sg160
(lp11999
sg32
S'auto_2212'
p12000
sg35
(itheano.gof.utils
scratchpad
p12001
(dp12002
g38
(lp12003
sbsg47
g1
(g162
g3
NtRp12004
(dp12005
g15
(lp12006
g8966
asg153
g5456
sg187
(lp12007
g11997
asg35
(itheano.gof.utils
scratchpad
p12008
(dp12009
bsg191
(dp12010
sg193
g1
(g1178
g3
NtRp12011
(dp12012
g1181
(lp12013
sg252
(lp12014
sg250
(lp12015
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp12016
sg197
g198
sbsbsg48
g1
(g49
g3
NtRp12017
(dp12018
g52
(I01
I01
tp12019
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsb(g8713
g8713
tp12020
sg1
(g1008
g3
NtRp12021
(dp12022
g32
S'auto_2302'
p12023
sg34
Nsg35
(itheano.gof.utils
scratchpad
p12024
(dp12025
g38
(lp12026
sg1014
Nsbsg20
Nsg48
g11401
sg160
(lp12027
sg1018
g71
(g72
(I0
tS'b'
tRp12028
(I1
(tg74
I00
S'\x00\x00\x80?'
tbsb(tsg1
(g29
g3
NtRp12029
(dp12030
g34
I0
sg20
Nsg153
g5456
sg160
(lp12031
sg32
S'auto_2188'
p12032
sg35
(itheano.gof.utils
scratchpad
p12033
(dp12034
g38
(lp12035
sbsg47
g1
(g162
g3
NtRp12036
(dp12037
g15
(lp12038
g12021
asg153
g5456
sg187
(lp12039
g12029
asg35
(itheano.gof.utils
scratchpad
p12040
(dp12041
bsg191
(dp12042
sg193
g1
(g1178
g3
NtRp12043
(dp12044
g1181
(lp12045
sg252
(lp12046
sg250
(lp12047
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp12048
sg197
g198
sbsbsg48
g9740
sb(g8713
g8713
tp12049
sg11568
(tsg1
(g29
g3
NtRp12050
(dp12051
g34
I0
sg20
Nsg153
g5456
sg160
(lp12052
sg32
S'auto_2187'
p12053
sg35
(itheano.gof.utils
scratchpad
p12054
(dp12055
g38
(lp12056
sbsg47
g1
(g162
g3
NtRp12057
(dp12058
g15
(lp12059
g8998
asg153
g5456
sg187
(lp12060
g12050
asg35
(itheano.gof.utils
scratchpad
p12061
(dp12062
bsg191
(dp12063
sg193
g1
(g1178
g3
NtRp12064
(dp12065
g1181
(lp12066
sg252
(lp12067
sg250
(lp12068
I0
aI1
asg254
(tsg1185
I00
sg256
(S'x'
S'x'
tp12069
sg197
g198
sbsbsg48
g9851
sb(g8713
g8713
tp12070
sg1
(g1008
g3
NtRp12071
(dp12072
g32
S'auto_2381'
p12073
sg34
Nsg35
(itheano.gof.utils
scratchpad
p12074
(dp12075
g38
(lp12076
sg1014
g5755
(g58
S'\x00\x00\x00\x00\x00\x00\x00@'
tRp12077
sbsg20
Nsg48
g10889
sg160
(lp12078
sg1018
g71
(g72
(I0
tS'b'
tRp12079
(I1
(I1
I1
tg58
I00
S'\x00\x00\x00\x00\x00\x00\x00@'
tbsb(g8713
g8713
tp12080
sg1
(g29
g3
NtRp12081
(dp12082
g34
I0
sg20
Nsg153
g5456
sg160
(lp12083
sg32
S'auto_2213'
p12084
sg35
(itheano.gof.utils
scratchpad
p12085
(dp12086
g6950
g6951
sg38
(lp12087
sbsg47
g1
(g162
g3
NtRp12088
(dp12089
g15
(lp12090
g9844
ag9733
ag9606
asg153
g5456
sg187
(lp12091
g12081
asg35
(itheano.gof.utils
scratchpad
p12092
(dp12093
bsg191
(dp12094
sg193
g2297
sbsg48
g1
(g49
g3
NtRp12095
(dp12096
g52
(I00
I00
tp12097
sg54
g202
sg56
g74
sg59
I00
sg20
Nsbsb(g9032
g8875
tp12098
sg1
(g221
g3
NtRp12099
(dp12100
g34
I0
sg20
Nsg153
g5456
sg160
(lp12101
sg32
S'auto_2133'
p12102
sg35
(itheano.gof.utils
scratchpad
p12103
(dp12104
g38
g1522
sbsg47
g1
(g162
g3
NtRp12105
(dp12106
g15
(lp12107
g11221
asg153
g5456
sg187
(lp12108
g12099
asg35
(itheano.gof.utils
scratchpad
p12109
(dp12110
bsg191
(dp12111
sg193
g3087
sbsg48
g3089
sb(g8723
g8737
tp12112
sg10439
(g8713
g8713
tp12113
sg9405
(g9048
g9032
tp12114
sg5961
(g9048
g8737
tp12115
sg10565
(g8723
g8737
tp12116
sg1
(g5496
g3
NtRp12117
(dp12118
g32
S'auto_2595'
p12119
sg34
Nsg35
(itheano.gof.utils
scratchpad
p12120
(dp12121
g38
(lp12122
sbsg20
Nsg48
g11342
sg160
(lp12123
sg1018
g70
(g71
(g72
(I0
tS'b'
tRp12124
(I1
(I1
I1
tg74
I00
S'\n\xd7#<'
tbtRp12125
sb(g8713
g8713
tp12126
sg11809
(g8875
tp12127
sg9424
(g9048
g8737
tp12128
sg10986
(g9032
tp12129
sg11356
(tsg1
(g221
g3
NtRp12130
(dp12131
g34
I0
sg20
Nsg153
g5456
sg160
(lp12132
sg32
S'auto_2575'
p12133
sg35
(itheano.gof.utils
scratchpad
p12134
(dp12135
g38
(lp12136
sbsg47
g1
(g162
g3
NtRp12137
(dp12138
g15
(lp12139
g9988
asg153
g5456
sg187
(lp12140
g12130
asg35
(itheano.gof.utils
scratchpad
p12141
(dp12142
bsg191
(dp12143
sg193
g2809
sbsg48
g11508
sb(g8713
g8713
tp12144
sg8899
(g9032
g8875
tp12145
sg5814
(g9097
tp12146
sg5821
(g8713
g9097
tp12147
sg8423
(g8791
tp12148
sg9263
(g8713
g8713
tp12149
sg8957
(tsg1
(g221
g3
NtRp12150
(dp12151
g34
I0
sg20
Nsg153
g5456
sg160
(lp12152
sg32
S'auto_2576'
p12153
sg35
(itheano.gof.utils
scratchpad
p12154
(dp12155
g38
(lp12156
sbsg47
g1
(g162
g3
NtRp12157
(dp12158
g15
(lp12159
g9997
asg153
g5456
sg187
(lp12160
g12150
asg35
(itheano.gof.utils
scratchpad
p12161
(dp12162
bsg191
(dp12163
sg193
g2809
sbsg48
g1
(g77
g3
NtRp12164
(dp12165
g52
(I00
I00
tp12166
sg20
Nsbsb(g8737
g8875
tp12167
sg5736
(g9048
g8875
tp12168
sg8826
(g9032
g8875
tp12169
sg6164
(g8737
g8875
tp12170
sg1
(g29
g3
NtRp12171
(dp12172
g34
I0
sg20
Nsg153
g5456
sg160
(lp12173
sg32
S'auto_2006'
p12174
sg35
(itheano.gof.utils
scratchpad
p12175
(dp12176
g38
g3703
sbsg47
g1
(g162
g3
NtRp12177
(dp12178
g15
(lp12179
g5538
asg153
g5456
sg187
(lp12180
g12171
asg35
(itheano.gof.utils
scratchpad
p12181
(dp12182
bsg191
(dp12183
sg193
g3719
sbsg48
g3725
sb(g8875
g9032
tp12184
sg5808
(g8875
tp12185
sg1
(g221
g3
NtRp12186
(dp12187
g34
I0
sg20
Nsg153
g5456
sg160
(lp12188
sg32
S'auto_2803'
p12189
sg35
(itheano.gof.utils
scratchpad
p12190
(dp12191
g38
(lp12192
sbsg47
g1
(g162
g3
NtRp12193
(dp12194
g15
(lp12195
g8998
asg153
g5456
sg187
(lp12196
g12186
asg35
(itheano.gof.utils
scratchpad
p12197
(dp12198
bsg191
(dp12199
sg193
g2809
sbsg48
g5499
sb(tsg9649
(g8713
g8713
tp12200
sg10605
(g8875
tp12201
sg5538
(g9032
g8875
tp12202
sg9988
(g8713
g8713
tp12203
sg5483
(g1
(g29
g3
NtRp12204
(dp12205
g32
S'auto_3277'
p12206
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12207
(dp12208
g38
(lp12209
sbsg20
Nsg47
g1
(g162
g3
NtRp12210
(dp12211
g15
(lp12212
g5483
asg35
(itheano.gof.utils
scratchpad
p12213
(dp12214
bsg187
(lp12215
g12204
asg193
g1
(g958
g3
NtRp12216
(dp12217
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg1
(g29
g3
NtRp12218
(dp12219
g32
S'auto_3278'
p12220
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12221
(dp12222
g38
(lp12223
sbsg20
Nsg47
g1
(g162
g3
NtRp12224
(dp12225
g15
(lp12226
g5483
asg35
(itheano.gof.utils
scratchpad
p12227
(dp12228
bsg187
(lp12229
g12218
asg193
g1
(g958
g3
NtRp12230
(dp12231
S'i'
I1
sg197
g198
sbsbsg48
g961
sbtp12232
sg10713
(g9048
g8875
tp12233
sg6174
(g8737
g8875
tp12234
sg6524
(g8791
tp12235
sg10507
(g9048
g8875
tp12236
sg5614
(g8713
g8713
tp12237
sg8439
(g9032
g8875
tp12238
sg1
(g5496
g3
NtRp12239
(dp12240
g32
S'auto_2608'
p12241
sg34
Nsg35
(itheano.gof.utils
scratchpad
p12242
(dp12243
g38
(lp12244
sbsg20
Nsg48
g8710
sg160
(lp12245
sg1018
g70
(g71
(g72
(I0
tS'b'
tRp12246
(I1
(I1
tg74
I00
S'\x00\x00\x80>'
tbtRp12247
sb(g8713
tp12248
sg9551
(g8713
g8875
tp12249
sg6196
(g8713
g8713
tp12250
sg1
(g29
g3
NtRp12251
(dp12252
g34
I0
sg20
Nsg153
g5456
sg160
(lp12253
sg32
S'auto_2236'
p12254
sg35
(itheano.gof.utils
scratchpad
p12255
(dp12256
g38
(lp12257
sbsg47
g1
(g162
g3
NtRp12258
(dp12259
g15
(lp12260
g7955
ag11387
asg153
g5456
sg187
(lp12261
g12251
asg35
(itheano.gof.utils
scratchpad
p12262
(dp12263
bsg191
(dp12264
sg193
g2328
sbsg48
g1
(g49
g3
NtRp12265
(dp12266
g52
(tsg54
g202
sg56
g74
sg59
I00
sg20
Nsbsb(tssg1263
g8713
sg1264
(dp12267
g7387
g582
((ltRp12268
sg9253
g582
((ltRp12269
sg8890
g582
((ltRp12270
sg11881
g582
((ltRp12271
sg1
(g29
g3
NtRp12272
(dp12273
g32
S'auto_3225'
p12274
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12275
(dp12276
g38
(lp12277
sbsg20
Nsg47
g1
(g162
g3
NtRp12278
(dp12279
g15
(lp12280
g7991
asg35
(itheano.gof.utils
scratchpad
p12281
(dp12282
bsg187
(lp12283
g12272
asg193
g1
(g958
g3
NtRp12284
(dp12285
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg582
((lp12286
g7991
atRp12287
sg8391
g582
((ltRp12288
sg1
(g29
g3
NtRp12289
(dp12290
g32
S'auto_2563'
p12291
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12292
(dp12293
g38
(lp12294
sbsg20
Nsg47
g1
(g162
g3
NtRp12295
(dp12296
g15
(lp12297
g10776
asg35
(itheano.gof.utils
scratchpad
p12298
(dp12299
bsg187
(lp12300
g12289
asg193
g1
(g958
g3
NtRp12301
(dp12302
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg582
((lp12303
g10776
atRp12304
sg11059
g582
((ltRp12305
sg11656
g582
((ltRp12306
sg10556
g582
((ltRp12307
sg1
(g29
g3
NtRp12308
(dp12309
g32
S'auto_2536'
p12310
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12311
(dp12312
g38
(lp12313
sbsg20
Nsg47
g1
(g162
g3
NtRp12314
(dp12315
g15
(lp12316
g11059
asg35
(itheano.gof.utils
scratchpad
p12317
(dp12318
bsg187
(lp12319
g12308
asg193
g1
(g958
g3
NtRp12320
(dp12321
S'i'
I1
sg197
g198
sbsbsg48
g961
sbg582
((lp12322
g11059
atRp12323
sg9128
g582
((ltRp12324
sg10132
g582
((ltRp12325
sg1
(g29
g3
NtRp12326
(dp12327
g32
S'auto_2541'
p12328
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12329
(dp12330
g38
(lp12331
sbsg20
Nsg47
g1
(g162
g3
NtRp12332
(dp12333
g15
(lp12334
g10907
asg35
(itheano.gof.utils
scratchpad
p12335
(dp12336
bsg187
(lp12337
g12326
asg193
g1
(g958
g3
NtRp12338
(dp12339
S'i'
I1
sg197
g198
sbsbsg48
g961
sbg582
((lp12340
g10907
atRp12341
sg12071
g582
((ltRp12342
sg1
(g29
g3
NtRp12343
(dp12344
g32
S'auto_2548'
p12345
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12346
(dp12347
g38
(lp12348
sbsg20
Nsg47
g1
(g162
g3
NtRp12349
(dp12350
g15
(lp12351
g10917
asg35
(itheano.gof.utils
scratchpad
p12352
(dp12353
bsg187
(lp12354
g12343
asg193
g1
(g958
g3
NtRp12355
(dp12356
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg582
((lp12357
g10917
atRp12358
sg8791
g582
((lp12359
g8752
ag6524
ag5941
ag8204
ag9918
ag8761
ag10776
ag8423
ag11534
ag5948
ag5955
atRp12360
sg9396
g582
((ltRp12361
sg11403
g582
((ltRp12362
sg7570
g582
((ltRp12363
sg9503
g582
((ltRp12364
sg11387
g582
((ltRp12365
sg1
(g29
g3
NtRp12366
(dp12367
g32
S'auto_2573'
p12368
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12369
(dp12370
g38
(lp12371
sbsg20
Nsg47
g1
(g162
g3
NtRp12372
(dp12373
g15
(lp12374
g11962
asg35
(itheano.gof.utils
scratchpad
p12375
(dp12376
bsg187
(lp12377
g12366
asg193
g1
(g958
g3
NtRp12378
(dp12379
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg582
((lp12380
g11962
atRp12381
sg9688
g582
((ltRp12382
sg9292
g582
((ltRp12383
sg8204
g582
((ltRp12384
sg9810
g582
((ltRp12385
sg8935
g582
((ltRp12386
sg1
(g29
g3
NtRp12387
(dp12388
g32
S'auto_2597'
p12389
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12390
(dp12391
g38
(lp12392
sbsg20
Nsg47
g1
(g162
g3
NtRp12393
(dp12394
g15
(lp12395
g8826
asg35
(itheano.gof.utils
scratchpad
p12396
(dp12397
bsg187
(lp12398
g12387
asg193
g1
(g958
g3
NtRp12399
(dp12400
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg582
((lp12401
g8826
atRp12402
sg1
(g29
g3
NtRp12403
(dp12404
g32
S'auto_2579'
p12405
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12406
(dp12407
g38
(lp12408
sbsg20
Nsg47
g1
(g162
g3
NtRp12409
(dp12410
g15
(lp12411
g11775
asg35
(itheano.gof.utils
scratchpad
p12412
(dp12413
bsg187
(lp12414
g12403
asg193
g1
(g958
g3
NtRp12415
(dp12416
S'i'
I1
sg197
g198
sbsbsg48
g961
sbg582
((lp12417
g11775
atRp12418
sg10859
g582
((ltRp12419
sg10040
g582
((ltRp12420
sg9932
g582
((ltRp12421
sg9947
g582
((ltRp12422
sg11905
g582
((lp12423
g7387
ag10321
atRp12424
sg9513
g582
((ltRp12425
sg9918
g582
((ltRp12426
sg1
(g29
g3
NtRp12427
(dp12428
g32
S'auto_3096'
p12429
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12430
(dp12431
g38
(lp12432
sbsg20
Nsg47
g1
(g162
g3
NtRp12433
(dp12434
g15
(lp12435
g8204
asg35
(itheano.gof.utils
scratchpad
p12436
(dp12437
bsg187
(lp12438
g12427
asg193
g1
(g958
g3
NtRp12439
(dp12440
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg582
((lp12441
g8204
atRp12442
sg10093
g582
((ltRp12443
sg1
(g29
g3
NtRp12444
(dp12445
g32
S'auto_2553'
p12446
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12447
(dp12448
g38
(lp12449
sbsg20
Nsg47
g1
(g162
g3
NtRp12450
(dp12451
g15
(lp12452
g10927
asg35
(itheano.gof.utils
scratchpad
p12453
(dp12454
bsg187
(lp12455
g12444
asg193
g1
(g958
g3
NtRp12456
(dp12457
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg582
((lp12458
g10927
atRp12459
sg10064
g582
((ltRp12460
sg9896
g582
((ltRp12461
sg11328
g582
((ltRp12462
sg11112
g582
((ltRp12463
sg10312
g582
((ltRp12464
sg10242
g582
((ltRp12465
sg8723
g582
((lp12466
g5475
ag9639
ag9896
ag10175
ag10157
ag9878
ag9662
ag10565
ag10927
ag11601
ag8277
ag10654
ag11059
ag5465
ag8407
ag11656
ag11221
ag9810
ag11720
ag10166
ag9887
ag11921
ag12099
ag6347
atRp12467
sg10893
g582
((ltRp12468
sg11502
g582
((ltRp12469
sg9490
g582
((ltRp12470
sg10634
g582
((ltRp12471
sg11346
g582
((ltRp12472
sg8713
g582
((lp12473
g10382
ag9253
ag11328
ag10397
ag10415
ag12117
ag10429
ag9733
ag11623
ag8697
ag11083
ag9712
ag11112
ag10093
ag12029
ag11846
ag11145
ag10731
ag9560
ag9350
ag11997
ag11098
ag11403
ag5787
ag9542
ag8948
ag12071
ag6144
ag9263
ag8687
ag10845
ag10859
ag12050
ag9828
ag9503
ag5948
ag11676
ag11006
ag12130
ag9480
ag10040
ag11502
ag9702
ag9947
ag5955
ag9147
ag11346
ag9513
ag10024
ag11126
ag10439
ag11170
ag5828
ag10118
ag9649
ag11558
ag11644
ag9988
ag10461
ag5821
ag9844
ag9780
ag5614
ag10289
ag10132
ag10893
ag5931
ag11534
ag9490
ag12239
ag9551
ag6196
ag5743
atRp12474
sg8277
g582
((ltRp12475
sg10415
g582
((ltRp12476
sg9097
g582
((lp12477
g11799
ag5821
ag11207
ag8455
ag5814
ag7991
ag11193
ag6606
ag11112
ag9084
ag5828
atRp12478
sg10461
g582
((ltRp12479
sg11623
g582
((ltRp12480
sg10525
g582
((ltRp12481
sg1
(g29
g3
NtRp12482
(dp12483
g32
S'auto_3075'
p12484
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12485
(dp12486
g38
(lp12487
sbsg20
Nsg47
g1
(g162
g3
NtRp12488
(dp12489
g15
(lp12490
g8277
asg35
(itheano.gof.utils
scratchpad
p12491
(dp12492
bsg187
(lp12493
g12482
asg193
g1
(g958
g3
NtRp12494
(dp12495
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg582
((lp12496
g8277
atRp12497
sg7461
g582
((ltRp12498
sg1
(g29
g3
NtRp12499
(dp12500
g32
S'auto_3322'
p12501
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12502
(dp12503
g38
(lp12504
sbsg20
Nsg47
g1
(g162
g3
NtRp12505
(dp12506
g15
(lp12507
g6211
asg35
(itheano.gof.utils
scratchpad
p12508
(dp12509
bsg187
(lp12510
g12499
asg193
g1
(g958
g3
NtRp12511
(dp12512
S'i'
I1
sg197
g198
sbsbsg48
g961
sbg582
((lp12513
g6211
atRp12514
sg9032
g582
((lp12515
g10382
ag10907
ag10917
ag8935
ag10542
ag10758
ag10823
ag11942
ag10321
ag5565
ag9606
ag9970
ag6080
ag11045
ag5608
ag8074
ag10986
ag12171
ag9396
ag10977
ag9746
ag8917
ag6138
ag8890
ag9961
ag8926
ag9828
ag11292
ag10786
ag6091
ag6131
ag8899
ag6058
ag8826
ag5538
ag6124
ag12081
ag5576
ag11432
ag5531
ag11515
ag10118
ag11265
ag11700
ag6211
ag10219
ag8908
ag9596
ag8774
ag7872
ag9405
ag10743
ag8439
ag8816
ag6069
ag11962
atRp12516
sg1
(g29
g3
NtRp12517
(dp12518
g32
S'auto_2592'
p12519
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12520
(dp12521
g38
(lp12522
sbsg20
Nsg47
g1
(g162
g3
NtRp12523
(dp12524
g15
(lp12525
g8816
asg35
(itheano.gof.utils
scratchpad
p12526
(dp12527
bsg187
(lp12528
g12517
asg193
g1
(g958
g3
NtRp12529
(dp12530
S'i'
I1
sg197
g198
sbsbsg48
g961
sbg582
((lp12531
g8816
atRp12532
sg9179
g582
((ltRp12533
sg10986
g582
((ltRp12534
sg1
(g29
g3
NtRp12535
(dp12536
g32
S'auto_2587'
p12537
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12538
(dp12539
g38
(lp12540
sbsg20
Nsg47
g1
(g162
g3
NtRp12541
(dp12542
g15
(lp12543
g8806
asg35
(itheano.gof.utils
scratchpad
p12544
(dp12545
bsg187
(lp12546
g12535
asg193
g1
(g958
g3
NtRp12547
(dp12548
S'i'
I1
sg197
g198
sbsbsg48
g961
sbg582
((lp12549
g8806
atRp12550
sg8875
g582
((lp12551
g9179
ag9932
ag5644
ag10525
ag9138
ag8519
ag11775
ag10713
ag9063
ag5565
ag8439
ag9606
ag7812
ag9596
ag5801
ag9970
ag6174
ag10634
ag8917
ag5558
ag11310
ag11962
ag10678
ag11809
ag12171
ag10275
ag10586
ag11743
ag5637
ag6164
ag9542
ag9746
ag5623
ag5834
ag8890
ag7736
ag9688
ag9128
ag8926
ag11548
ag8935
ag7665
ag9170
ag10687
ag10596
ag9859
ag6153
ag8899
ag11515
ag8806
ag5538
ag8074
ag5774
ag8908
ag5576
ag9997
ag6211
ag5736
ag8826
ag5531
ag9560
ag5808
ag11700
ag10321
ag10605
ag10696
ag9979
ag12081
ag10498
ag9551
ag10257
ag9188
ag9961
ag10507
ag5781
ag9569
ag12150
ag10823
ag11761
ag8816
ag9160
atRp12552
sg11743
g582
((ltRp12553
sg10758
g582
((ltRp12554
sg10776
g582
((ltRp12555
sg1
(g29
g3
NtRp12556
(dp12557
g32
S'auto_2554'
p12558
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12559
(dp12560
g38
(lp12561
sbsg20
Nsg47
g1
(g162
g3
NtRp12562
(dp12563
g15
(lp12564
g10927
asg35
(itheano.gof.utils
scratchpad
p12565
(dp12566
bsg187
(lp12567
g12556
asg193
g1
(g958
g3
NtRp12568
(dp12569
S'i'
I1
sg197
g198
sbsbsg48
g961
sbg582
((lp12570
g10927
atRp12571
sg9350
g582
((ltRp12572
sg9780
g582
((ltRp12573
sg9961
g582
((ltRp12574
sg10845
g582
((ltRp12575
sg10024
g582
((ltRp12576
sg1
(g29
g3
NtRp12577
(dp12578
g32
S'auto_3355'
p12579
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12580
(dp12581
g38
(lp12582
sbsg20
Nsg47
g1
(g162
g3
NtRp12583
(dp12584
g15
(lp12585
g6347
asg35
(itheano.gof.utils
scratchpad
p12586
(dp12587
bsg187
(lp12588
g12577
asg193
g1
(g958
g3
NtRp12589
(dp12590
S'i'
I1
sg197
g198
sbsbsg48
g961
sbg582
((lp12591
g6347
atRp12592
sg1
(g29
g3
NtRp12593
(dp12594
g32
S'auto_2578'
p12595
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12596
(dp12597
g38
(lp12598
sbsg20
Nsg47
g1
(g162
g3
NtRp12599
(dp12600
g15
(lp12601
g11775
asg35
(itheano.gof.utils
scratchpad
p12602
(dp12603
bsg187
(lp12604
g12593
asg193
g1
(g958
g3
NtRp12605
(dp12606
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg582
((lp12607
g11775
atRp12608
sg11292
g582
((ltRp12609
sg10157
g582
((ltRp12610
sg8737
g582
((lp12611
g5475
ag9424
ag9639
ag11775
ag10242
ag5544
ag9063
ag10175
ag11656
ag9414
ag10157
ag9433
ag9662
ag10565
ag10927
ag9688
ag11601
ag9442
ag5961
ag6347
ag10654
ag11059
ag8277
ag6153
ag5465
ag8806
ag5552
ag12099
ag9997
ag10166
ag6164
ag9878
ag11221
ag9810
ag9896
ag11720
ag8407
ag7646
ag6174
ag7500
ag9887
ag11921
ag9979
ag12150
ag11761
ag10634
atRp12612
sg9405
g582
((ltRp12613
sg11083
g582
((ltRp12614
sg8407
g582
((ltRp12615
sg9702
g582
((ltRp12616
sg11283
g582
((ltRp12617
sg11432
g582
((ltRp12618
sg1
(g29
g3
NtRp12619
(dp12620
g32
S'auto_2560'
p12621
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12622
(dp12623
g38
(lp12624
sbsg20
Nsg47
g1
(g162
g3
NtRp12625
(dp12626
g15
(lp12627
g10654
asg35
(itheano.gof.utils
scratchpad
p12628
(dp12629
bsg187
(lp12630
g12619
asg193
g1
(g958
g3
NtRp12631
(dp12632
S'i'
I1
sg197
g198
sbsbsg48
g961
sbg582
((lp12633
g10654
atRp12634
sg9113
g582
((lp12635
g10907
ag10917
ag10219
ag10758
ag6138
ag10743
ag7461
ag9396
ag6131
ag10542
ag5459
ag11045
ag6098
ag11265
ag6124
atRp12636
sg11145
g582
((ltRp12637
sg5558
g582
((ltRp12638
sg11170
g582
((ltRp12639
sg9224
g582
((lp12640
g5520
atRp12641
sg11207
g582
((ltRp12642
sg10731
g582
((ltRp12643
sg9596
g582
((ltRp12644
sg7872
g582
((ltRp12645
sg10289
g582
((ltRp12646
sg11921
g582
((ltRp12647
sg1
(g29
g3
NtRp12648
(dp12649
g32
S'auto_2598'
p12650
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12651
(dp12652
g38
(lp12653
sbsg20
Nsg47
g1
(g162
g3
NtRp12654
(dp12655
g15
(lp12656
g8826
asg35
(itheano.gof.utils
scratchpad
p12657
(dp12658
bsg187
(lp12659
g12648
asg193
g1
(g958
g3
NtRp12660
(dp12661
S'i'
I1
sg197
g198
sbsbsg48
g961
sbg582
((lp12662
g8826
atRp12663
sg9569
g582
((ltRp12664
sg10605
g582
((ltRp12665
sg11265
g582
((ltRp12666
sg9048
g582
((lp12667
g9424
ag9138
ag8519
ag7646
ag7665
ag9160
ag5459
ag7461
ag5608
ag10678
ag9433
ag11743
ag5644
ag11548
ag5637
ag10498
ag7736
ag5834
ag5623
ag9128
ag6091
ag10507
ag5961
ag9170
ag9179
ag7812
ag10696
ag5774
ag6098
ag9414
ag9859
ag5736
ag5558
ag7872
ag9442
ag10713
ag10242
ag9188
ag7500
ag9405
ag5552
ag10687
ag5544
atRp12668
sg11310
g582
((ltRp12669
sg1
(g29
g3
NtRp12670
(dp12671
g32
S'auto_2567'
p12672
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12673
(dp12674
g38
(lp12675
sbsg20
Nsg47
g1
(g162
g3
NtRp12676
(dp12677
g15
(lp12678
g10786
asg35
(itheano.gof.utils
scratchpad
p12679
(dp12680
bsg187
(lp12681
g12670
asg193
g1
(g958
g3
NtRp12682
(dp12683
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg582
((lp12684
g10786
atRp12685
sg9138
g582
((ltRp12686
sg1
(g29
g3
NtRp12687
(dp12688
g32
S'auto_2605'
p12689
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12690
(dp12691
g38
(lp12692
sbsg20
Nsg47
g1
(g162
g3
NtRp12693
(dp12694
g15
(lp12695
g11809
asg35
(itheano.gof.utils
scratchpad
p12696
(dp12697
bsg187
(lp12698
g12687
asg193
g1
(g958
g3
NtRp12699
(dp12700
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg582
((lp12701
g11809
atRp12702
sg1
(g29
g3
NtRp12703
(dp12704
g32
S'auto_2535'
p12705
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12706
(dp12707
g38
(lp12708
sbsg20
Nsg47
g1
(g162
g3
NtRp12709
(dp12710
g15
(lp12711
g11059
asg35
(itheano.gof.utils
scratchpad
p12712
(dp12713
bsg187
(lp12714
g12703
asg193
g1
(g958
g3
NtRp12715
(dp12716
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg582
((lp12717
g11059
atRp12718
sg10197
g582
((ltRp12719
sg10373
g582
((ltRp12720
sg9859
g582
((ltRp12721
sg1
(g29
g3
NtRp12722
(dp12723
g32
S'auto_2574'
p12724
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12725
(dp12726
g38
(lp12727
sbsg20
Nsg47
g1
(g162
g3
NtRp12728
(dp12729
g15
(lp12730
g11962
asg35
(itheano.gof.utils
scratchpad
p12731
(dp12732
bsg187
(lp12733
g12722
asg193
g1
(g958
g3
NtRp12734
(dp12735
S'i'
I1
sg197
g198
sbsbsg48
g961
sbg582
((lp12736
g11962
atRp12737
sg11476
g582
((ltRp12738
sg11515
g582
((ltRp12739
sg7736
g582
((ltRp12740
sg11534
g582
((ltRp12741
sg11548
g582
((ltRp12742
sg9238
g582
((lp12743
g5520
atRp12744
sg7665
g582
((ltRp12745
sg10542
g582
((ltRp12746
sg1
(g29
g3
NtRp12747
(dp12748
g32
S'auto_2549'
p12749
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12750
(dp12751
g38
(lp12752
sbsg20
Nsg47
g1
(g162
g3
NtRp12753
(dp12754
g15
(lp12755
g10917
asg35
(itheano.gof.utils
scratchpad
p12756
(dp12757
bsg187
(lp12758
g12747
asg193
g1
(g958
g3
NtRp12759
(dp12760
S'i'
I1
sg197
g198
sbsbsg48
g961
sbg582
((lp12761
g10917
atRp12762
sg1
(g29
g3
NtRp12763
(dp12764
g32
S'auto_3301'
p12765
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12766
(dp12767
g38
(lp12768
sbsg20
Nsg47
g1
(g162
g3
NtRp12769
(dp12770
g15
(lp12771
g6606
asg35
(itheano.gof.utils
scratchpad
p12772
(dp12773
bsg187
(lp12774
g12763
asg193
g1
(g958
g3
NtRp12775
(dp12776
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg582
((lp12777
g6606
atRp12778
sg1
(g29
g3
NtRp12779
(dp12780
g32
S'auto_3204'
p12781
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12782
(dp12783
g38
(lp12784
sbsg20
Nsg47
g1
(g162
g3
NtRp12785
(dp12786
g15
(lp12787
g8074
asg35
(itheano.gof.utils
scratchpad
p12788
(dp12789
bsg187
(lp12790
g12779
asg193
g1
(g958
g3
NtRp12791
(dp12792
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg582
((lp12793
g8074
atRp12794
sg1
(g29
g3
NtRp12795
(dp12796
g32
S'auto_2586'
p12797
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12798
(dp12799
g38
(lp12800
sbsg20
Nsg47
g1
(g162
g3
NtRp12801
(dp12802
g15
(lp12803
g8806
asg35
(itheano.gof.utils
scratchpad
p12804
(dp12805
bsg187
(lp12806
g12795
asg193
g1
(g958
g3
NtRp12807
(dp12808
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg582
((lp12809
g8806
atRp12810
sg11601
g582
((ltRp12811
sg7991
g582
((ltRp12812
sg7955
g582
((ltRp12813
sg11446
g582
((lp12814
g7431
ag10565
atRp12815
sg9160
g582
((ltRp12816
sg1
(g29
g3
NtRp12817
(dp12818
g32
S'auto_2591'
p12819
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12820
(dp12821
g38
(lp12822
sbsg20
Nsg47
g1
(g162
g3
NtRp12823
(dp12824
g15
(lp12825
g8816
asg35
(itheano.gof.utils
scratchpad
p12826
(dp12827
bsg187
(lp12828
g12817
asg193
g1
(g958
g3
NtRp12829
(dp12830
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg582
((lp12831
g8816
atRp12832
sg10429
g582
((ltRp12833
sg11799
g582
((ltRp12834
sg11644
g582
((ltRp12835
sg11460
g582
((lp12836
g7431
ag10565
atRp12837
sg8966
g582
((ltRp12838
sg10488
g582
((ltRp12839
sg1
(g29
g3
NtRp12840
(dp12841
g32
S'auto_2540'
p12842
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12843
(dp12844
g38
(lp12845
sbsg20
Nsg47
g1
(g162
g3
NtRp12846
(dp12847
g15
(lp12848
g10907
asg35
(itheano.gof.utils
scratchpad
p12849
(dp12850
bsg187
(lp12851
g12840
asg193
g1
(g958
g3
NtRp12852
(dp12853
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg582
((lp12854
g10907
atRp12855
sg11676
g582
((ltRp12856
sg11700
g582
((ltRp12857
sg1
(g29
g3
NtRp12858
(dp12859
g32
S'auto_3321'
p12860
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12861
(dp12862
g38
(lp12863
sbsg20
Nsg47
g1
(g162
g3
NtRp12864
(dp12865
g15
(lp12866
g6211
asg35
(itheano.gof.utils
scratchpad
p12867
(dp12868
bsg187
(lp12869
g12858
asg193
g1
(g958
g3
NtRp12870
(dp12871
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg582
((lp12872
g6211
atRp12873
sg11720
g582
((ltRp12874
sg8455
g582
((ltRp12875
sg8908
g582
((ltRp12876
sg7500
g582
((ltRp12877
sg10586
g582
((ltRp12878
sg10823
g582
((ltRp12879
sg11761
g582
((ltRp12880
sg11962
g582
((ltRp12881
sg11243
g582
((ltRp12882
sg9433
g582
((ltRp12883
sg11846
g582
((ltRp12884
sg1
(g29
g3
NtRp12885
(dp12886
g32
S'auto_2601'
p12887
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12888
(dp12889
g38
(lp12890
sbsg20
Nsg47
g1
(g162
g3
NtRp12891
(dp12892
g15
(lp12893
g11799
asg35
(itheano.gof.utils
scratchpad
p12894
(dp12895
bsg187
(lp12896
g12885
asg193
g1
(g958
g3
NtRp12897
(dp12898
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg582
((lp12899
g11799
atRp12900
sg11871
g582
((ltRp12901
sg12117
g582
((ltRp12902
sg10344
g582
((lp12903
g5629
atRp12904
sg12186
g582
((ltRp12905
sg8439
g582
((ltRp12906
sg10175
g582
((ltRp12907
sg11006
g582
((ltRp12908
sg11942
g582
((ltRp12909
sg12029
g582
((ltRp12910
sg12204
g582
((lp12911
g5483
atRp12912
sg11986
g582
((ltRp12913
sg11997
g582
((ltRp12914
sg11891
g582
((lp12915
g7387
ag10321
atRp12916
sg1
(g29
g3
NtRp12917
(dp12918
g32
S'auto_3354'
p12919
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12920
(dp12921
g38
(lp12922
sbsg20
Nsg47
g1
(g162
g3
NtRp12923
(dp12924
g15
(lp12925
g6347
asg35
(itheano.gof.utils
scratchpad
p12926
(dp12927
bsg187
(lp12928
g12917
asg193
g1
(g958
g3
NtRp12929
(dp12930
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg582
((lp12931
g6347
atRp12932
sg12050
g582
((ltRp12933
sg7812
g582
((ltRp12934
sg12081
g582
((ltRp12935
sg12099
g582
((ltRp12936
sg11126
g582
((ltRp12937
sg10397
g582
((ltRp12938
sg8074
g582
((ltRp12939
sg10147
g582
((ltRp12940
sg12130
g582
((ltRp12941
sg11098
g582
((ltRp12942
sg9480
g582
((ltRp12943
sg8423
g582
((ltRp12944
sg7431
g582
((ltRp12945
sg10358
g582
((lp12946
g5629
atRp12947
sg12150
g582
((ltRp12948
sg8519
g582
((ltRp12949
sg12171
g582
((ltRp12950
sg11558
g582
((ltRp12951
sg1
(g29
g3
NtRp12952
(dp12953
g32
S'auto_2559'
p12954
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12955
(dp12956
g38
(lp12957
sbsg20
Nsg47
g1
(g162
g3
NtRp12958
(dp12959
g15
(lp12960
g10654
asg35
(itheano.gof.utils
scratchpad
p12961
(dp12962
bsg187
(lp12963
g12952
asg193
g1
(g958
g3
NtRp12964
(dp12965
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg582
((lp12966
g10654
atRp12967
sg1
(g29
g3
NtRp12968
(dp12969
g32
S'auto_3334'
p12970
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12971
(dp12972
g38
(lp12973
sbsg20
Nsg47
g1
(g162
g3
NtRp12974
(dp12975
g15
(lp12976
g6524
asg35
(itheano.gof.utils
scratchpad
p12977
(dp12978
bsg187
(lp12979
g12968
asg193
g1
(g958
g3
NtRp12980
(dp12981
S'i'
I0
sg197
g198
sbsbsg48
g961
sbg582
((lp12982
g6524
atRp12983
sg1
(g29
g3
NtRp12984
(dp12985
g32
S'auto_3076'
p12986
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p12987
(dp12988
g38
(lp12989
sbsg20
Nsg47
g1
(g162
g3
NtRp12990
(dp12991
g15
(lp12992
g8277
asg35
(itheano.gof.utils
scratchpad
p12993
(dp12994
bsg187
(lp12995
g12984
asg193
g1
(g958
g3
NtRp12996
(dp12997
S'i'
I1
sg197
g198
sbsbsg48
g961
sbg582
((lp12998
g8277
atRp12999
sg10713
g582
((ltRp13000
sg1
(g29
g3
NtRp13001
(dp13002
g32
S'auto_3205'
p13003
sg34
I0
sg35
(itheano.gof.utils
scratchpad
p13004
(dp13005
g38
(lp13006
sbsg20
Nsg47
g1
(g162
g3
NtRp13007
(dp13008
g15
(lp13009
g8074
asg35
(itheano.gof.utils
scratchpad
p13010
(dp13011
bsg187
(lp13012
g13001
asg193
g1
(g958
g3
NtRp13013
(dp13014
S'i'
I1
sg197
g198
sbsbsg48
g961
sbg582
((lp13015
g8074
atRp13016
sg7646
g582
((ltRp13017
sg10507
g582
((ltRp13018
sg8687
g582
((ltRp13019
sg12218
g582
((lp13020
g5483
atRp13021
sg10678
g582
((ltRp13022
sg12239
g582
((ltRp13023
sg12251
g582
((ltRp13024
ssbsg1291
g582
((lp13025
g5958
ag5534
ag5548
ag6161
ag6150
ag5626
ag6127
ag5951
ag5528
ag5555
ag6095
ag5804
ag5777
ag5611
ag5654
ag5938
ag5479
ag5640
ag5541
ag6106
ag5647
ag6088
ag5817
ag5665
ag5811
ag6141
ag6066
ag5493
ag5944
ag5462
ag6077
ag5486
ag5740
ag5472
ag5733
ag5517
ag5562
ag5584
ag5784
ag5573
ag5831
ag6171
ag5824
ag6134
ag5620
atRp13026
sg1294
g582
((lp13027
g6211
ag5552
ag5637
ag5531
ag6138
ag5520
ag6131
ag5814
ag5538
ag6124
ag5808
ag5781
ag5558
ag6153
ag5629
ag6347
ag6144
ag5475
ag5941
ag5688
ag5544
ag6080
ag5459
ag5651
ag5614
ag5834
ag5644
ag5743
ag5787
ag5931
ag6098
ag5961
ag5657
ag6606
ag6091
ag5497
ag6164
ag5948
ag5668
ag6058
ag5955
ag5490
ag6069
ag5509
ag5576
ag5608
ag5801
ag5565
ag5483
ag5623
ag5465
ag5821
ag5828
ag6524
ag5736
ag5774
ag6174
ag6196
atRp13028
sg1297
(lp13029
g1
(g1299
g3
NtRp13030
(dp13031
g1302
I00
sg1303
g582
((ltRp13032
sba(itheano.compile.function_module
Supervisor
p13033
(dp13034
g1307
(lp13035
g5459
ag5629
asbag1
(g1309
g3
NtRp13036
ag7159
ag8683
ag7211
asbsg187
g1
(g1311
g3
NtRp13037
(dp13038
g28
g2097
sg24
I00
sbsg1446
Nsg1447
I00
sg1448
g1450
stRp13039
(lp13040
g1
(g65
g3
NtRp13041
(dp13042
g1486
I1
sg20
g21
sg1487
I01
sg68
(lp13043
Nasg26
I00
sg25
I00
sg76
I00
sg48
g50
sg61
Nsbag1
(g65
g3
NtRp13044
(dp13045
g1486
I1
sg20
S'y'
sg1487
I01
sg68
(lp13046
Nasg26
I00
sg25
I00
sg76
I00
sg48
g50
sg61
Nsbag1
(g65
g3
NtRp13047
(dp13048
g1486
I0
sg20
g64
sg1487
I00
sg68
g69
sg26
I01
sg25
I00
sg76
I00
sg48
g78
sg61
Nsbag1
(g65
g3
NtRp13049
(dp13050
g1486
I0
sg20
g95
sg1487
I00
sg68
g98
sg26
I01
sg25
I00
sg76
I00
sg48
g101
sg61
Nsbag1
(g65
g3
NtRp13051
(dp13052
g1486
I0
sg20
g115
sg1487
I00
sg68
g118
sg26
I01
sg25
I00
sg76
I00
sg48
g121
sg61
Nsbag1
(g65
g3
NtRp13053
(dp13054
g1486
I0
sg20
g135
sg1487
I00
sg68
g138
sg26
I01
sg25
I00
sg76
I00
sg48
g141
sg61
Nsba(lp13055
NaNag75
ag100
ag120
ag140
atRp13056
sS'b0'
p13057
g104
sS'b1'
p13058
g144
sS'W1'
p13059
g124
sS'W0'
p13060
g82
sS'n_hidden'
p13061
I4
sS'n_out'
p13062
I2
sb.